Search.setIndex({"docnames": ["compliance_checker_api", "faq", "generated/compliance_checker.acdd", "generated/compliance_checker.acdd.ACDD1_1Check", "generated/compliance_checker.acdd.ACDD1_3Check", "generated/compliance_checker.acdd.ACDDBaseCheck", "generated/compliance_checker.acdd.ACDDNCCheck", "generated/compliance_checker.base", "generated/compliance_checker.base.BaseCheck", "generated/compliance_checker.base.BaseNCCheck", "generated/compliance_checker.base.BaseSOSDSCheck", "generated/compliance_checker.base.BaseSOSGCCheck", "generated/compliance_checker.base.EmailValidator", "generated/compliance_checker.base.GenericFile", "generated/compliance_checker.base.RegexValidator", "generated/compliance_checker.base.Result", "generated/compliance_checker.base.TestCtx", "generated/compliance_checker.base.UrlValidator", "generated/compliance_checker.base.ValidationObject", "generated/compliance_checker.base.attr_check", "generated/compliance_checker.base.check_has", "generated/compliance_checker.base.csv_splitter", "generated/compliance_checker.base.fix_return_value", "generated/compliance_checker.base.get_namespaces", "generated/compliance_checker.base.maybe_get_global_attr", "generated/compliance_checker.base.ratable_result", "generated/compliance_checker.base.score_group", "generated/compliance_checker.base.std_check", "generated/compliance_checker.base.std_check_in", "generated/compliance_checker.base.xpath_check", "generated/compliance_checker.cf", "generated/compliance_checker.cf.CF1_6Check", "generated/compliance_checker.cf.CF1_7Check", "generated/compliance_checker.cfutil", "generated/compliance_checker.cfutil.attr_membership", "generated/compliance_checker.cfutil.coordinate_dimension_matrix", "generated/compliance_checker.cfutil.get_auxiliary_coordinate_variables", "generated/compliance_checker.cfutil.get_axis_map", "generated/compliance_checker.cfutil.get_axis_variables", "generated/compliance_checker.cfutil.get_bounds_variables", "generated/compliance_checker.cfutil.get_cell_boundary_map", "generated/compliance_checker.cfutil.get_cell_boundary_variables", "generated/compliance_checker.cfutil.get_climatology_variable", "generated/compliance_checker.cfutil.get_coordinate_variables", "generated/compliance_checker.cfutil.get_flag_variables", "generated/compliance_checker.cfutil.get_forecast_metadata_variables", "generated/compliance_checker.cfutil.get_geophysical_variables", "generated/compliance_checker.cfutil.get_grid_mapping_variables", "generated/compliance_checker.cfutil.get_instrument_variables", "generated/compliance_checker.cfutil.get_lat_variable", "generated/compliance_checker.cfutil.get_latitude_variables", "generated/compliance_checker.cfutil.get_lon_variable", "generated/compliance_checker.cfutil.get_longitude_variables", "generated/compliance_checker.cfutil.get_platform_variables", "generated/compliance_checker.cfutil.get_sea_names", "generated/compliance_checker.cfutil.get_time_variable", "generated/compliance_checker.cfutil.get_time_variables", "generated/compliance_checker.cfutil.get_true_latitude_variables", "generated/compliance_checker.cfutil.get_true_longitude_variables", "generated/compliance_checker.cfutil.get_z_variable", "generated/compliance_checker.cfutil.get_z_variables", "generated/compliance_checker.cfutil.guess_feature_type", "generated/compliance_checker.cfutil.isProfile", "generated/compliance_checker.cfutil.isTimeSeries", "generated/compliance_checker.cfutil.isTimeSeriesProfile", "generated/compliance_checker.cfutil.isTrajectory", "generated/compliance_checker.cfutil.isTrajectoryProfile", "generated/compliance_checker.cfutil.is_2d_regular_grid", "generated/compliance_checker.cfutil.is_2d_static_grid", "generated/compliance_checker.cfutil.is_3d_regular_grid", "generated/compliance_checker.cfutil.is_3d_static_grid", "generated/compliance_checker.cfutil.is_cf_trajectory", "generated/compliance_checker.cfutil.is_compression_coordinate", "generated/compliance_checker.cfutil.is_coordinate_variable", "generated/compliance_checker.cfutil.is_dataset_valid_ragged_array_repr_featureType", "generated/compliance_checker.cfutil.is_dimensionless_standard_name", "generated/compliance_checker.cfutil.is_geophysical", "generated/compliance_checker.cfutil.is_mapped_grid", "generated/compliance_checker.cfutil.is_multi_timeseries_incomplete", "generated/compliance_checker.cfutil.is_multi_timeseries_orthogonal", "generated/compliance_checker.cfutil.is_point", "generated/compliance_checker.cfutil.is_profile_incomplete", "generated/compliance_checker.cfutil.is_profile_orthogonal", "generated/compliance_checker.cfutil.is_reduced_grid", "generated/compliance_checker.cfutil.is_single_trajectory", "generated/compliance_checker.cfutil.is_timeseries", "generated/compliance_checker.cfutil.is_timeseries_profile_incomplete", "generated/compliance_checker.cfutil.is_timeseries_profile_multi_ortho_time", "generated/compliance_checker.cfutil.is_timeseries_profile_multi_station", "generated/compliance_checker.cfutil.is_timeseries_profile_ortho_depth", "generated/compliance_checker.cfutil.is_timeseries_profile_single_ortho_time", "generated/compliance_checker.cfutil.is_timeseries_profile_single_station", "generated/compliance_checker.cfutil.is_trajectory_profile_incomplete", "generated/compliance_checker.cfutil.is_trajectory_profile_orthogonal", "generated/compliance_checker.cfutil.is_unitless", "generated/compliance_checker.cfutil.is_variable_valid_ragged_array_repr_featureType", "generated/compliance_checker.cfutil.units_convertible", "generated/compliance_checker.ioos", "generated/compliance_checker.ioos.IOOS0_1Check", "generated/compliance_checker.ioos.IOOS1_1Check", "generated/compliance_checker.ioos.IOOS1_2Check", "generated/compliance_checker.ioos.IOOS1_2_ConventionsValidator", "generated/compliance_checker.ioos.IOOS1_2_PlatformIDValidator", "generated/compliance_checker.ioos.IOOSBaseCheck", "generated/compliance_checker.ioos.IOOSBaseSOSCheck", "generated/compliance_checker.ioos.IOOSNCCheck", "generated/compliance_checker.ioos.IOOSSOSDSCheck", "generated/compliance_checker.ioos.IOOSSOSGCCheck", "generated/compliance_checker.ioos.NamingAuthorityValidator", "generated/compliance_checker.protocols", "generated/compliance_checker.runner", "generated/compliance_checker.runner.ComplianceChecker", "generated/compliance_checker.runner.stdout_redirector", "generated/compliance_checker.suite", "generated/compliance_checker.suite.CheckSuite", "generated/compliance_checker.suite.extract_docstring_summary", "generated/compliance_checker.util", "generated/compliance_checker.util.dateparse", "generated/compliance_checker.util.datetime_is_iso", "generated/compliance_checker.util.kvp_convert", "index", "quickintro"], "filenames": ["compliance_checker_api.rst", "faq.md", "generated/compliance_checker.acdd.rst", "generated/compliance_checker.acdd.ACDD1_1Check.rst", "generated/compliance_checker.acdd.ACDD1_3Check.rst", "generated/compliance_checker.acdd.ACDDBaseCheck.rst", "generated/compliance_checker.acdd.ACDDNCCheck.rst", "generated/compliance_checker.base.rst", "generated/compliance_checker.base.BaseCheck.rst", "generated/compliance_checker.base.BaseNCCheck.rst", "generated/compliance_checker.base.BaseSOSDSCheck.rst", "generated/compliance_checker.base.BaseSOSGCCheck.rst", "generated/compliance_checker.base.EmailValidator.rst", "generated/compliance_checker.base.GenericFile.rst", "generated/compliance_checker.base.RegexValidator.rst", "generated/compliance_checker.base.Result.rst", "generated/compliance_checker.base.TestCtx.rst", "generated/compliance_checker.base.UrlValidator.rst", "generated/compliance_checker.base.ValidationObject.rst", "generated/compliance_checker.base.attr_check.rst", "generated/compliance_checker.base.check_has.rst", "generated/compliance_checker.base.csv_splitter.rst", "generated/compliance_checker.base.fix_return_value.rst", "generated/compliance_checker.base.get_namespaces.rst", "generated/compliance_checker.base.maybe_get_global_attr.rst", "generated/compliance_checker.base.ratable_result.rst", "generated/compliance_checker.base.score_group.rst", "generated/compliance_checker.base.std_check.rst", "generated/compliance_checker.base.std_check_in.rst", "generated/compliance_checker.base.xpath_check.rst", "generated/compliance_checker.cf.rst", "generated/compliance_checker.cf.CF1_6Check.rst", "generated/compliance_checker.cf.CF1_7Check.rst", "generated/compliance_checker.cfutil.rst", "generated/compliance_checker.cfutil.attr_membership.rst", "generated/compliance_checker.cfutil.coordinate_dimension_matrix.rst", "generated/compliance_checker.cfutil.get_auxiliary_coordinate_variables.rst", "generated/compliance_checker.cfutil.get_axis_map.rst", "generated/compliance_checker.cfutil.get_axis_variables.rst", "generated/compliance_checker.cfutil.get_bounds_variables.rst", "generated/compliance_checker.cfutil.get_cell_boundary_map.rst", "generated/compliance_checker.cfutil.get_cell_boundary_variables.rst", "generated/compliance_checker.cfutil.get_climatology_variable.rst", "generated/compliance_checker.cfutil.get_coordinate_variables.rst", "generated/compliance_checker.cfutil.get_flag_variables.rst", "generated/compliance_checker.cfutil.get_forecast_metadata_variables.rst", "generated/compliance_checker.cfutil.get_geophysical_variables.rst", "generated/compliance_checker.cfutil.get_grid_mapping_variables.rst", "generated/compliance_checker.cfutil.get_instrument_variables.rst", "generated/compliance_checker.cfutil.get_lat_variable.rst", "generated/compliance_checker.cfutil.get_latitude_variables.rst", "generated/compliance_checker.cfutil.get_lon_variable.rst", "generated/compliance_checker.cfutil.get_longitude_variables.rst", "generated/compliance_checker.cfutil.get_platform_variables.rst", "generated/compliance_checker.cfutil.get_sea_names.rst", "generated/compliance_checker.cfutil.get_time_variable.rst", "generated/compliance_checker.cfutil.get_time_variables.rst", "generated/compliance_checker.cfutil.get_true_latitude_variables.rst", "generated/compliance_checker.cfutil.get_true_longitude_variables.rst", "generated/compliance_checker.cfutil.get_z_variable.rst", "generated/compliance_checker.cfutil.get_z_variables.rst", "generated/compliance_checker.cfutil.guess_feature_type.rst", "generated/compliance_checker.cfutil.isProfile.rst", "generated/compliance_checker.cfutil.isTimeSeries.rst", "generated/compliance_checker.cfutil.isTimeSeriesProfile.rst", "generated/compliance_checker.cfutil.isTrajectory.rst", "generated/compliance_checker.cfutil.isTrajectoryProfile.rst", "generated/compliance_checker.cfutil.is_2d_regular_grid.rst", "generated/compliance_checker.cfutil.is_2d_static_grid.rst", "generated/compliance_checker.cfutil.is_3d_regular_grid.rst", "generated/compliance_checker.cfutil.is_3d_static_grid.rst", "generated/compliance_checker.cfutil.is_cf_trajectory.rst", "generated/compliance_checker.cfutil.is_compression_coordinate.rst", "generated/compliance_checker.cfutil.is_coordinate_variable.rst", "generated/compliance_checker.cfutil.is_dataset_valid_ragged_array_repr_featureType.rst", "generated/compliance_checker.cfutil.is_dimensionless_standard_name.rst", "generated/compliance_checker.cfutil.is_geophysical.rst", "generated/compliance_checker.cfutil.is_mapped_grid.rst", "generated/compliance_checker.cfutil.is_multi_timeseries_incomplete.rst", "generated/compliance_checker.cfutil.is_multi_timeseries_orthogonal.rst", "generated/compliance_checker.cfutil.is_point.rst", "generated/compliance_checker.cfutil.is_profile_incomplete.rst", "generated/compliance_checker.cfutil.is_profile_orthogonal.rst", "generated/compliance_checker.cfutil.is_reduced_grid.rst", "generated/compliance_checker.cfutil.is_single_trajectory.rst", "generated/compliance_checker.cfutil.is_timeseries.rst", "generated/compliance_checker.cfutil.is_timeseries_profile_incomplete.rst", "generated/compliance_checker.cfutil.is_timeseries_profile_multi_ortho_time.rst", "generated/compliance_checker.cfutil.is_timeseries_profile_multi_station.rst", "generated/compliance_checker.cfutil.is_timeseries_profile_ortho_depth.rst", "generated/compliance_checker.cfutil.is_timeseries_profile_single_ortho_time.rst", "generated/compliance_checker.cfutil.is_timeseries_profile_single_station.rst", "generated/compliance_checker.cfutil.is_trajectory_profile_incomplete.rst", "generated/compliance_checker.cfutil.is_trajectory_profile_orthogonal.rst", "generated/compliance_checker.cfutil.is_unitless.rst", "generated/compliance_checker.cfutil.is_variable_valid_ragged_array_repr_featureType.rst", "generated/compliance_checker.cfutil.units_convertible.rst", "generated/compliance_checker.ioos.rst", "generated/compliance_checker.ioos.IOOS0_1Check.rst", "generated/compliance_checker.ioos.IOOS1_1Check.rst", "generated/compliance_checker.ioos.IOOS1_2Check.rst", "generated/compliance_checker.ioos.IOOS1_2_ConventionsValidator.rst", "generated/compliance_checker.ioos.IOOS1_2_PlatformIDValidator.rst", "generated/compliance_checker.ioos.IOOSBaseCheck.rst", "generated/compliance_checker.ioos.IOOSBaseSOSCheck.rst", "generated/compliance_checker.ioos.IOOSNCCheck.rst", "generated/compliance_checker.ioos.IOOSSOSDSCheck.rst", "generated/compliance_checker.ioos.IOOSSOSGCCheck.rst", "generated/compliance_checker.ioos.NamingAuthorityValidator.rst", "generated/compliance_checker.protocols.rst", "generated/compliance_checker.runner.rst", "generated/compliance_checker.runner.ComplianceChecker.rst", "generated/compliance_checker.runner.stdout_redirector.rst", "generated/compliance_checker.suite.rst", "generated/compliance_checker.suite.CheckSuite.rst", "generated/compliance_checker.suite.extract_docstring_summary.rst", "generated/compliance_checker.util.rst", "generated/compliance_checker.util.dateparse.rst", "generated/compliance_checker.util.datetime_is_iso.rst", "generated/compliance_checker.util.kvp_convert.rst", "index.rst", "quickintro.md"], "titles": ["API", "Frequently Asked Questions", "Acdd <code class=\"docutils literal notranslate\"><span class=\"pre\">(compliance_checker.acdd)</span></code>", "ACDD1_1Check", "ACDD1_3Check", "ACDDBaseCheck", "ACDDNCCheck", "Base <code class=\"docutils literal notranslate\"><span class=\"pre\">(compliance_checker.base)</span></code>", "BaseCheck", "BaseNCCheck", "BaseSOSDSCheck", "BaseSOSGCCheck", "EmailValidator", "GenericFile", "RegexValidator", "Result", "TestCtx", "UrlValidator", "ValidationObject", "attr_check", "check_has", "csv_splitter", "fix_return_value", "get_namespaces", "maybe_get_global_attr", "ratable_result", "score_group", "std_check", "std_check_in", "xpath_check", "Cf <code class=\"docutils literal notranslate\"><span class=\"pre\">(compliance_checker.cf)</span></code>", "CF1_6Check", "CF1_7Check", "Cfutil <code class=\"docutils literal notranslate\"><span class=\"pre\">(compliance_checker.cfutil)</span></code>", "attr_membership", "coordinate_dimension_matrix", "get_auxiliary_coordinate_variables", "get_axis_map", "get_axis_variables", "get_bounds_variables", "get_cell_boundary_map", "get_cell_boundary_variables", "get_climatology_variable", "get_coordinate_variables", "get_flag_variables", "get_forecast_metadata_variables", "get_geophysical_variables", "get_grid_mapping_variables", "get_instrument_variables", "get_lat_variable", "get_latitude_variables", "get_lon_variable", "get_longitude_variables", "get_platform_variables", "get_sea_names", "get_time_variable", "get_time_variables", "get_true_latitude_variables", "get_true_longitude_variables", "get_z_variable", "get_z_variables", "guess_feature_type", "isProfile", "isTimeSeries", "isTimeSeriesProfile", "isTrajectory", "isTrajectoryProfile", "is_2d_regular_grid", "is_2d_static_grid", "is_3d_regular_grid", "is_3d_static_grid", "is_cf_trajectory", "is_compression_coordinate", "is_coordinate_variable", "is_dataset_valid_ragged_array_repr_featureType", "is_dimensionless_standard_name", "is_geophysical", "is_mapped_grid", "is_multi_timeseries_incomplete", "is_multi_timeseries_orthogonal", "is_point", "is_profile_incomplete", "is_profile_orthogonal", "is_reduced_grid", "is_single_trajectory", "is_timeseries", "is_timeseries_profile_incomplete", "is_timeseries_profile_multi_ortho_time", "is_timeseries_profile_multi_station", "is_timeseries_profile_ortho_depth", "is_timeseries_profile_single_ortho_time", "is_timeseries_profile_single_station", "is_trajectory_profile_incomplete", "is_trajectory_profile_orthogonal", "is_unitless", "is_variable_valid_ragged_array_repr_featureType", "units_convertible", "Ioos <code class=\"docutils literal notranslate\"><span class=\"pre\">(compliance_checker.ioos)</span></code>", "IOOS0_1Check", "IOOS1_1Check", "IOOS1_2Check", "IOOS1_2_ConventionsValidator", "IOOS1_2_PlatformIDValidator", "IOOSBaseCheck", "IOOSBaseSOSCheck", "IOOSNCCheck", "IOOSSOSDSCheck", "IOOSSOSGCCheck", "NamingAuthorityValidator", "Protocols <code class=\"docutils literal notranslate\"><span class=\"pre\">(compliance_checker.protocols)</span></code>", "Runner <code class=\"docutils literal notranslate\"><span class=\"pre\">(compliance_checker.runner)</span></code>", "ComplianceChecker", "stdout_redirector", "Suite <code class=\"docutils literal notranslate\"><span class=\"pre\">(compliance_checker.suite)</span></code>", "CheckSuite", "extract_docstring_summary", "Util <code class=\"docutils literal notranslate\"><span class=\"pre\">(compliance_checker.util)</span></code>", "dateparse", "datetime_is_iso", "kvp_convert", "compliance_checker", "IOOS Compliance Checker"], "terms": {"modul": [0, 1, 2, 100, 120, 121], "index": [0, 31, 32, 62, 95, 120, 121], "The": [1, 3, 4, 5, 6, 8, 31, 32, 34, 37, 40, 43, 62, 98, 99, 100, 103, 104, 105, 106, 107, 111, 114, 120], "python": [1, 114, 120], "base": [1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 98, 99, 100, 103, 104, 105, 106, 107, 111, 114, 120, 121], "tool": [1, 120], "data": [1, 3, 4, 5, 6, 31, 32, 36, 43, 54, 62, 64, 74, 95, 100, 120], "provid": [1, 31, 32, 120], "complet": [1, 32, 121], "commun": [1, 121], "standard": [1, 31, 32, 57, 58, 75, 99, 100, 114, 120], "local": [1, 114, 120], "remot": [1, 114, 120], "netcdf": [1, 3, 4, 5, 6, 9, 31, 32, 35, 36, 37, 40, 41, 43, 46, 49, 50, 51, 52, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 98, 99, 100, 114, 121], "file": [1, 13, 31, 32, 62, 111, 114, 120], "against": [1, 4, 31, 32, 34, 120], "cf": [1, 31, 32, 36, 42, 43, 57, 58, 62, 64, 71, 75, 77, 78, 79, 95, 99, 100, 120], "acdd": [1, 3, 4, 5, 6, 120], "us": [1, 3, 4, 5, 6, 8, 15, 26, 31, 32, 57, 58, 62, 98, 99, 100, 103, 104, 105, 106, 107, 111, 114, 120], "command": [1, 111, 114, 120], "line": [1, 31, 32, 111, 114, 120], "librari": [1, 121], "integr": [1, 121], "other": [1, 31, 32, 57, 58, 121], "softwar": [1, 31, 32, 121], "you": [1, 121], "ar": [1, 3, 4, 5, 6, 31, 32, 42, 43, 44, 57, 58, 62, 75, 94, 98, 99, 100, 105, 121], "current": [1, 3, 4, 5, 6, 8, 31, 32, 98, 99, 100, 103, 104, 105, 106, 107, 120], "view": [1, 31], "web": [1, 120], "It": [1, 31, 32, 43, 100, 121], "wa": [1, 100, 114, 121], "develop": [1, 121], "enabl": [1, 121], "broader": [1, 121], "audienc": [1, 121], "improv": [1, 121], "access": [1, 121], "With": [1, 121], "simpli": [1, 57, 58, 121], "link": [1, 4, 99, 121], "upload": [1, 121], "get": [1, 121], "full": [1, 121], "suit": [1, 9, 10, 11, 111, 114, 115, 120, 121], "capabl": [1, 121], "offer": [1, 121], "support": [1, 9, 10, 11, 31, 111, 121], "follow": [1, 31, 32, 99, 100, 121], "sourc": [1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 114, 115, 117, 118, 119, 121], "1": [1, 3, 4, 5, 6, 8, 9, 31, 32, 42, 43, 75, 77, 78, 79, 94, 98, 99, 100, 101, 103, 104, 105, 106, 107, 111, 114, 120], "3": [1, 3, 4, 5, 6, 8, 20, 31, 32, 75, 98, 99, 100, 103, 104, 105, 106, 107, 114, 120], "6": [1, 31, 32, 42, 77, 78, 79, 120], "7": [1, 31, 32, 42, 100, 121], "2": [1, 3, 4, 5, 6, 8, 9, 15, 26, 31, 32, 43, 78, 79, 98, 99, 100, 101, 103, 104, 105, 106, 107, 111, 114, 119, 120], "glider": [1, 100, 121], "dac": [1, 121], "ncei": [1, 54, 100, 121], "0": [1, 3, 4, 6, 9, 16, 31, 32, 78, 79, 98, 99, 100, 105, 106, 107, 111, 114, 121], "ye": 1, "when": [1, 3, 4, 5, 6, 8, 31, 32, 98, 99, 100, 103, 104, 105, 106, 107], "pleas": [1, 26, 32, 121], "suppli": [1, 31, 32, 121], "url": [1, 17, 100, 108, 111, 114, 121], "without": [1, 115, 121], "extens": [1, 31, 32, 121], "For": [1, 31, 32, 37, 78, 79, 95, 100], "exampl": [1, 31, 37, 42, 120], "thi": [1, 2, 3, 4, 5, 6, 8, 15, 19, 26, 31, 32, 37, 43, 61, 62, 63, 78, 79, 95, 98, 99, 100, 103, 104, 105, 106, 107, 114, 121], "morro": 1, "bai": [1, 121], "should": [1, 12, 14, 17, 18, 31, 32, 99, 100, 101, 102, 108, 111, 121], "like": [1, 37, 57, 58, 76, 100, 114], "so": [1, 10, 11, 31, 32, 100, 107, 114, 121], "http": [1, 31, 32, 54, 78, 79, 99, 100, 106, 107, 121], "sensor": [1, 10, 106], "tabledap": [1, 121], "bs1": 1, "met": 1, "site": 1, "5": [1, 31, 32, 57, 58, 100], "There": [1, 99], "sure": [1, 121], "out": [1, 3, 4, 5, 6, 114, 121], "detail": [1, 99, 100, 121], "how": [1, 31, 32, 120], "here": [1, 121], "open": [1, 3, 4, 5, 6, 31, 32, 35, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 60, 61, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 98, 99, 100, 121], "avail": [1, 121], "github": [1, 99, 100, 121], "object": [1, 3, 4, 5, 6, 8, 15, 16, 31, 32, 34, 49, 50, 52, 60, 98, 99, 100, 103, 104, 105, 106, 107, 114, 121], "your": [1, 3, 4, 5, 6, 8, 26, 98, 99, 100, 103, 104, 105, 106, 107, 120, 121], "our": [1, 121], "interpret": [1, 31, 32, 121], "select": [1, 31, 32, 121], "metadata": [1, 3, 4, 5, 6, 31, 32, 45, 99, 100, 121], "guidelin": [1, 121], "gener": [1, 111, 114, 116, 121], "compliant": [1, 31, 32, 121], "consid": [1, 32, 94, 121], "authorit": [1, 99, 121], "whether": [1, 16, 29, 31, 95, 121], "100": [1, 121], "instead": [1, 31, 32, 100, 121], "we": [1, 3, 4, 5, 6, 31, 32, 121], "recommend": [1, 3, 4, 5, 6, 31, 32, 99, 100, 121], "user": [1, 31, 32, 100, 111, 114, 121], "result": [1, 12, 14, 16, 17, 18, 19, 22, 25, 31, 32, 100, 101, 102, 108, 111, 114, 120], "guid": [1, 31, 32, 121], "work": [1, 121], "toward": [1, 31, 32, 121], "check": [2, 3, 4, 5, 6, 8, 9, 10, 11, 15, 19, 20, 28, 29, 31, 32, 34, 61, 63, 65, 67, 68, 69, 70, 71, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 97, 98, 99, 100, 103, 104, 105, 106, 107, 108, 111, 114, 116, 120], "attribut": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 17, 18, 19, 20, 31, 32, 34, 41, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 114, 119, 121], "convent": [2, 3, 4, 5, 6, 31, 32, 78, 79, 121], "dataset": [2, 3, 4, 5, 6, 9, 13, 19, 20, 27, 31, 32, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 98, 99, 100, 105, 111, 114, 120], "discoveri": 2, "contain": [2, 19, 28, 29, 31, 32, 34, 36, 37, 99, 100, 101, 108, 121], "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 30, 31, 32, 34, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 113, 114, 121], "defin": [2, 3, 4, 5, 6, 8, 31, 32, 36, 38, 43, 44, 57, 58, 59, 72, 75, 98, 99, 100, 103, 104, 105, 106, 107, 121], "part": [2, 62, 94, 120], "complianc": [2, 7, 26, 31, 32, 99, 100, 111, 113, 114, 116, 120], "checker": [2, 3, 4, 5, 6, 7, 8, 15, 22, 26, 31, 32, 98, 99, 100, 103, 104, 105, 106, 107, 111, 113, 114, 120], "project": [2, 57, 58, 121], "verif": 2, "score": [2, 16, 26, 111, 114, 121], "compliance_check": [3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 114, 115, 117, 118, 119, 121], "method": [3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22, 31, 32, 64, 65, 66, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 114], "std_check": [3, 4, 6, 9, 31, 32, 98, 99, 100, 105, 120], "summari": [3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 31, 32, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 114, 121], "document": [3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 31, 32, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 114, 121], "high": [3, 4, 5, 6, 8, 31, 32, 98, 99, 100, 103, 104, 105, 106, 107, 121], "low": [3, 4, 5, 6, 8, 31, 32, 98, 99, 100, 103, 104, 105, 106, 107, 121], "medium": [3, 4, 5, 6, 8, 31, 32, 98, 99, 100, 103, 104, 105, 106, 107, 121], "register_check": [3, 4, 31, 32, 98, 99, 100, 104, 106, 107], "true": [3, 4, 15, 16, 31, 32, 57, 58, 62, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 99, 100, 104, 106, 107, 114], "supported_d": [3, 4, 5, 6, 8, 9, 10, 11, 31, 32, 98, 99, 100, 103, 104, 105, 106, 107], "netcdf4": [3, 4, 5, 6, 9, 13, 19, 31, 32, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 98, 99, 100, 105], "_netcdf4": [3, 4, 6, 9, 31, 32, 98, 99, 100, 105], "memoizeddataset": [3, 4, 6, 9, 31, 32, 98, 99, 100, 105], "__init__": [3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 31, 32, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 114], "check_acknowledg": [3, 4, 5, 6], "d": [3, 4, 5, 6, 8, 19, 24, 31, 32, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 53, 55, 56, 72, 73, 76, 94, 98, 99, 100, 103, 104, 105, 106, 107, 114, 121], "acknowledg": [3, 4, 5, 6, 120], "i": [3, 4, 5, 6, 15, 16, 26, 28, 31, 32, 34, 36, 37, 43, 57, 58, 62, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 111, 114, 119, 120, 121], "present": [3, 4, 5, 6, 9, 31, 32, 98, 99, 100, 105, 121], "becaus": [3, 4, 5, 6, 31, 32, 121], "ha": [3, 4, 5, 6, 13, 20, 25, 31, 32, 34, 64, 100, 121], "its": [3, 4, 5, 6, 31, 32, 40, 43, 95, 100], "own": [3, 4, 5, 6, 121], "keep": [3, 4, 5, 6], "global": [3, 4, 5, 6, 31, 32, 98, 100, 121], "even": [3, 4, 5, 6], "though": [3, 4, 5, 6], "attr": [3, 4, 5, 6, 9, 31, 32, 98, 99, 100, 105], "paramet": [3, 4, 5, 6, 8, 19, 31, 32, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 103, 104, 105, 106, 107, 114, 115, 117, 119], "an": [3, 4, 5, 6, 8, 14, 19, 28, 31, 32, 35, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 60, 61, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 98, 99, 100, 103, 104, 105, 106, 107, 114, 117, 119, 120, 121], "check_high": [3, 4, 5, 6, 99, 100, 106, 107], "perform": [3, 4, 5, 6, 99, 100, 114, 121], "each": [3, 4, 5, 6, 31, 32, 91, 99, 100, 121], "highli": [3, 4, 5, 6, 31, 32, 99, 100, 121], "exist": [3, 4, 5, 6, 8, 31, 32, 34, 42, 98, 99, 100, 103, 104, 105, 106, 107, 121], "check_lat_ext": [3, 4, 5, 6], "valu": [3, 4, 5, 6, 9, 12, 14, 15, 16, 17, 18, 22, 25, 28, 31, 32, 34, 37, 43, 98, 99, 100, 101, 102, 105, 108, 111, 114, 119], "geospatial_lat_min": [3, 4, 5, 6], "geospatial_lat_max": [3, 4, 5, 6], "approxim": [3, 4, 5, 6], "match": [3, 4, 5, 6, 29, 31, 32, 49, 50, 52, 60, 64, 100, 111, 121], "check_lon_ext": [3, 4, 5, 6], "geospatial_lon_min": [3, 4, 5, 6], "geospatial_lon_max": [3, 4, 5, 6], "check_recommend": [3, 4, 5, 6, 99, 100, 106, 107], "check_suggest": [3, 4, 5, 6, 106, 107], "suggest": [3, 4, 5, 6, 31, 32], "check_time_ext": [3, 4, 5, 6], "time_coverage_start": [3, 4, 5, 6], "time_coverage_end": [3, 4, 5, 6], "check_var_long_nam": [3, 4, 5, 6], "applic": [3, 4, 5, 6, 31, 32, 100, 121], "variabl": [3, 4, 5, 6, 8, 16, 19, 31, 32, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 103, 104, 105, 106, 107, 121], "long_nam": [3, 4, 5, 6, 31, 32, 99, 121], "check_var_standard_nam": [3, 4, 5, 6], "standard_nam": [3, 4, 5, 6, 31, 32, 57, 58, 75, 98, 100, 121], "check_var_unit": [3, 4, 5, 6], "unit": [3, 4, 5, 6, 31, 32, 57, 58, 75, 94, 96, 98, 100, 121], "check_vertical_ext": [3, 4, 5, 6], "geospatial_vertical_min": [3, 4, 5, 6], "geospatial_vertical_max": [3, 4, 5, 6], "get_applicable_vari": [3, 4, 5, 6], "return": [3, 4, 5, 6, 8, 9, 15, 16, 19, 21, 22, 25, 31, 32, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 103, 104, 105, 106, 107, 111, 114, 115, 117, 119, 121], "list": [3, 4, 5, 6, 19, 21, 31, 32, 36, 38, 41, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 56, 57, 58, 60, 100, 111, 114, 119, 121], "name": [3, 4, 5, 6, 8, 9, 15, 19, 25, 27, 28, 31, 32, 37, 40, 41, 43, 46, 53, 54, 59, 61, 62, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 98, 99, 100, 103, 104, 105, 106, 107, 108, 111, 114, 120], "includ": [3, 4, 5, 6, 31, 32, 75, 100, 111, 121], "geophys": [3, 4, 5, 6, 31, 32, 46, 76, 99, 100], "coordin": [3, 4, 5, 6, 31, 32, 35, 36, 37, 43, 55, 56, 57, 58, 72, 73, 100, 121], "onli": [3, 4, 5, 6, 31, 32, 87, 89, 90, 100, 121], "get_test_ctx": [3, 4, 5, 6, 8, 31, 32, 98, 99, 100, 103, 104, 105, 106, 107], "sever": [3, 4, 5, 6, 8, 19, 31, 32, 98, 99, 100, 103, 104, 105, 106, 107], "none": [3, 4, 5, 6, 8, 12, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 31, 32, 42, 62, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 114, 119], "creat": [3, 4, 5, 6, 8, 31, 32, 98, 99, 100, 103, 104, 105, 106, 107, 121], "testctx": [3, 4, 5, 6, 8, 31, 32, 98, 99, 100, 103, 104, 105, 106, 107, 120], "_defined_result": [3, 4, 5, 6, 8, 31, 32, 98, 99, 100, 103, 104, 105, 106, 107], "dict": [3, 4, 5, 6, 8, 31, 32, 98, 99, 100, 103, 104, 105, 106, 107, 111, 121], "doe": [3, 4, 5, 6, 8, 31, 32, 68, 70, 98, 99, 100, 103, 104, 105, 106, 107, 120, 121], "instanc": [3, 4, 5, 6, 8, 15, 31, 32, 98, 99, 100, 103, 104, 105, 106, 107, 114], "modif": [3, 4, 5, 6, 8, 31, 32, 98, 99, 100, 103, 104, 105, 106, 107], "take": [3, 4, 5, 6, 8, 31, 32, 98, 99, 100, 103, 104, 105, 106, 107, 121], "level": [3, 4, 5, 6, 8, 19, 31, 32, 98, 99, 100, 103, 104, 105, 106, 107, 111, 114, 121], "two": [3, 4, 5, 6, 8, 31, 32, 64, 98, 99, 100, 103, 104, 105, 106, 107], "element": [3, 4, 5, 6, 8, 29, 31, 32, 98, 99, 100, 103, 104, 105, 106, 107, 119], "tupl": [3, 4, 5, 6, 8, 15, 19, 31, 32, 98, 99, 100, 103, 104, 105, 106, 107, 114, 119], "form": [3, 4, 5, 6, 8, 31, 32, 98, 99, 100, 103, 104, 105, 106, 107, 121], "argument": [3, 4, 5, 6, 8, 31, 32, 98, 99, 100, 103, 104, 105, 106, 107, 114, 121], "kei": [3, 4, 5, 6, 8, 31, 32, 37, 98, 99, 100, 103, 104, 105, 106, 107, 111, 119, 121], "int": [3, 4, 5, 6, 8, 19, 31, 32, 98, 99, 100, 103, 104, 105, 106, 107, 114], "A": [3, 4, 5, 6, 8, 31, 32, 34, 43, 96, 98, 99, 100, 103, 104, 105, 106, 107, 115, 121], "basecheck": [3, 4, 5, 6, 31, 32, 98, 99, 100, 103, 104, 105, 106, 107, 120], "str": [3, 4, 5, 6, 8, 19, 31, 32, 34, 37, 42, 61, 62, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 103, 104, 105, 106, 107, 114, 115, 117], "rtype": [3, 4, 5, 6, 8, 16, 31, 32, 98, 99, 100, 103, 104, 105, 106, 107], "new": [3, 4, 5, 6, 8, 31, 32, 98, 99, 100, 103, 104, 105, 106, 107, 111], "taken": [3, 4, 5, 6, 8, 31, 32, 98, 99, 100, 103, 104, 105, 106, 107, 121], "from": [3, 4, 5, 6, 8, 31, 32, 43, 98, 99, 100, 103, 104, 105, 106, 107, 111, 114, 117, 120], "": [3, 4, 5, 6, 8, 15, 31, 32, 76, 98, 99, 100, 103, 104, 105, 106, 107, 111, 121], "setup": [3, 4, 5, 6, 8, 31, 32, 98, 99, 100, 103, 104, 105, 106, 107], "common": [3, 4, 5, 6, 8, 31, 32, 98, 99, 100, 103, 104, 105, 106, 107], "automat": [3, 4, 5, 6, 8, 98, 99, 100, 103, 104, 105, 106, 107], "run": [3, 4, 5, 6, 8, 31, 98, 99, 100, 103, 104, 105, 106, 107, 111, 114, 120, 121], "checksuit": [3, 4, 5, 6, 8, 98, 99, 100, 103, 104, 105, 106, 107, 120, 121], "classmethod": [3, 4, 6, 9, 31, 32, 98, 99, 100, 105, 111, 114], "std_check_in": [3, 4, 6, 9, 31, 32, 98, 99, 100, 105, 120], "allowed_v": [3, 4, 6, 9, 28, 31, 32, 98, 99, 100, 105], "correct": [3, 4, 5, 6, 9, 31, 32, 98, 99, 100, 105, 121], "good": [3, 4, 6, 9, 31, 32, 98, 99, 100, 105], "verify_convention_vers": [3, 4, 5, 6], "verifi": [3, 4, 5, 6, 64, 100], "version": [3, 4, 5, 6, 31, 32, 99, 100, 120, 121], "field": [3, 4, 5, 6, 31, 32, 121], "verify_geospatial_bound": [3, 4, 5, 6], "geospati": [3, 4, 5, 6], "bound": [3, 4, 5, 6, 31, 32, 41, 42], "well": [3, 4, 5, 6, 100, 114], "ogc": [3, 4, 5, 6], "wkt": [3, 4, 5, 6], "check_id_has_no_blank": 4, "blank": [4, 31, 32, 100], "id": [4, 100], "check_metadata_link": 4, "ration": 4, "manner": 4, "check_var_coverage_content_typ": 4, "coverag": 4, "content": [4, 31, 32, 121], "type": [4, 31, 32, 34, 42, 43, 45, 61, 71, 77, 80, 81, 82, 83, 85, 95, 99, 100, 115, 121], "valid": [4, 12, 14, 17, 18, 19, 31, 32, 62, 74, 95, 100, 101, 102, 108, 121], "iso": [4, 100, 117, 118], "19115": 4, "code": [4, 31, 32, 34, 54, 62, 121], "function": [7, 12, 14, 15, 17, 18, 19, 20, 25, 33, 34, 62, 101, 102, 108, 110, 111, 113, 116, 119, 121], "option": [8, 31, 32, 98, 103, 104, 105, 106, 107, 111, 114, 121], "arg": [9, 10, 11, 111, 114], "kwarg": [9, 10, 11, 111], "describesensor": [10, 121], "owslib": [10, 11, 106, 107], "swe": [10, 11, 106, 107], "sml": [10, 106], "sensorml": [10, 106, 114], "getcap": [11, 121], "observ": [11, 107], "sos100": [11, 107], "sensorobservationservice_1_0_0": [11, 107], "split_func": [12, 14, 17, 18, 101, 102, 108], "validate_typ": [12, 14, 17, 18, 101, 102, 108], "validator_fail_msg": [12, 14, 17, 18, 101, 102, 108], "must": [12, 14, 17, 31, 32, 43, 95, 98, 99, 100, 101, 102, 121], "email": 12, "address": 12, "input_nam": [12, 14, 17, 18, 101, 102, 108], "input_valu": [12, 14, 17, 18, 101, 102, 108], "validator_func": [12, 14, 17, 18, 101, 102, 108], "self": [12, 14, 17, 18, 31, 32, 101, 102, 108], "given": [12, 14, 15, 17, 18, 20, 31, 32, 101, 102, 108, 121], "input": [12, 14, 17, 18, 101, 102, 108, 117, 120], "fpath": 13, "simpl": [13, 16, 19, 31, 32], "ani": [13, 15, 31, 32, 36, 62, 95, 100, 111, 121], "same": [13, 31, 32, 34, 43, 91, 99, 121], "path": [13, 111, 114, 121], "lookup": 13, "filepath": 13, "empti": [14, 111, 121], "string": [14, 21, 31, 32, 40, 61, 96, 99, 100, 101, 108, 111, 114, 117, 119, 121], "validator_regex": [14, 101, 102], "weight": [15, 25, 114, 121], "msg": [15, 25], "children": 15, "check_method": 15, "variable_nam": [15, 25], "hold": [15, 16], "store": [15, 31, 32], "inform": [15, 31, 32, 78, 79, 115, 120, 121], "fals": [15, 96, 100], "pass": [15, 16, 19, 32, 34, 114, 119, 121], "total": [15, 121], "skip": [15, 111, 121], "granular": 15, "messag": [15, 16, 19, 100, 121], "hierarchi": 15, "If": [15, 31, 32, 34, 62, 98, 99, 100, 111, 114, 119, 121], "cast": [15, 34], "boolean": [15, 16, 31, 32, 95], "bool": [15, 16, 95, 114], "produc": 15, "serial": [15, 114], "serializ": [15, 114], "dictionari": [15, 35, 37, 40, 114], "repres": [15, 31, 32, 37, 41, 45, 62, 87, 88, 90, 91, 94, 96, 99], "categori": 16, "descript": [16, 31, 32], "out_of": [16, 114], "struct": 16, "compil": [16, 114], "to_result": 16, "add_failur": 16, "add": [16, 31, 114, 121], "failur": [16, 19, 111, 114, 121], "along": [16, 19, 31, 32], "add_pass": 16, "condit": [16, 31, 32], "assert_tru": 16, "test": [16, 34, 62, 111, 114, 120], "increment": [16, 31, 32], "otherwis": 16, "append": 16, "indic": [16, 31, 32, 95, 100, 114], "expected_typ": 18, "kvp": 19, "prioriti": [19, 20, 32, 121], "ret_val": 19, "gname": [19, 20], "var_nam": 19, "handl": 19, "presenc": 19, "one": [19, 29, 31, 32, 43, 62, 64, 100, 120], "statu": [19, 31, 32], "error": [19, 31, 32, 111, 114, 121], "event": 19, "mutat": [19, 31, 32], "l": [19, 121], "func": [19, 20], "being": [19, 31, 32, 34, 63, 111], "param": [19, 20, 32, 98, 111, 114, 115], "group": [19, 26, 100, 114, 121], "assign": [19, 31, 32], "which": [19, 31, 32, 34, 99, 100, 114, 121], "decor": 20, "wrap": 20, "input_str": 21, "split": 21, "csv": 21, "format": [21, 31, 32, 54, 100, 111, 118, 121], "flatten": 21, "v": [22, 121], "method_nam": 22, "transform": [22, 31, 32, 114], "scalar": [22, 31, 32], "attr_nam": 24, "partial": 25, "been": [25, 31, 32, 121], "group_nam": 26, "warn": [26, 32, 34, 100, 121], "deprec": [26, 32], "v3": 26, "do": [26, 31, 32], "updat": 26, "plugin": [26, 114, 121], "necessari": [26, 31, 32, 121], "base_context": 28, "within": [28, 31, 32, 100, 108], "iter": [28, 119], "tree": 29, "xpath": 29, "more": [29, 31, 32, 78, 79, 120, 121], "specif": [31, 32, 64, 100, 121], "implement": [31, 32, 99, 100, 121], "cfbasecheck": 31, "These": [31, 32, 121], "translat": 31, "cfconvent": [31, 32, 78, 79, 121], "org": [31, 32, 78, 79, 100, 106, 107, 121], "v1": [31, 32, 78, 79, 99, 100, 121], "html": [31, 32, 78, 79, 99, 100, 111, 114, 120], "appendix_a": [31, 32], "attr_loc": [31, 32], "g": [31, 32, 43, 95, 108, 121], "cf_section": [31, 32], "_fillvalu": [31, 32], "c": [31, 32, 37, 111, 121], "add_offset": [31, 32, 121], "n": [31, 32, 106, 107], "8": [31, 32, 42, 121], "ancillary_vari": [31, 32], "4": [31, 32, 57, 58, 100, 121], "axi": [31, 32, 37, 38, 59, 100], "calendar": [31, 32], "cell_measur": [31, 32], "cell_method": [31, 32], "cf_role": [31, 32, 64, 100], "9": [31, 32, 62, 102, 121], "climatologi": [31, 32, 42], "compress": [31, 32, 37, 72], "featuretyp": [31, 32, 64, 65, 95, 99, 100], "flag_mask": [31, 32], "flag_mean": [31, 32, 100], "flag_valu": [31, 32, 100], "formula_term": [31, 32], "grid_map": [31, 32], "histori": [31, 32, 121], "institut": [31, 32, 100, 121], "leap_month": [31, 32], "leap_year": [31, 32], "missing_valu": [31, 32], "month_length": [31, 32], "posit": [31, 32, 100, 121], "refer": [31, 32, 45, 57, 58, 100, 121], "scale_factor": [31, 32, 121], "standard_error_multipli": [31, 32], "titl": [31, 32, 114], "valid_max": [31, 32], "valid_min": [31, 32], "valid_rang": [31, 32], "appendix_d_parametric_coord": [31, 32], "atmosphere_hybrid_height_coordin": [31, 32], "b": [31, 32, 101], "orog": [31, 32], "height_above_geopotential_datum": [31, 32], "altitud": [31, 32], "atmosphere_hybrid_sigma_pressure_coordin": [31, 32], "p": [31, 32], "ap": [31, 32], "air_pressur": [31, 32], "atmosphere_ln_pressure_coordin": [31, 32], "p0": [31, 32], "lev": [31, 32], "atmosphere_sigma_coordin": [31, 32], "ptop": [31, 32], "sigma": [31, 32], "atmosphere_sleve_coordin": [31, 32], "zsurf1": [31, 32], "ztop": [31, 32], "b2": [31, 32], "b1": [31, 32], "zsurf2": [31, 32], "ocean_double_sigma_coordin": [31, 32], "href": [31, 32], "z2": [31, 32], "depth": [31, 32, 59, 86, 88, 89, 92, 93, 121], "k_c": [31, 32], "z1": [31, 32], "zlev": [31, 32], "eta": [31, 32], "sea_surface_height_above_geoid": [31, 32], "sea_floor_depth_below_geoid": [31, 32], "sea_surface_height_above_geopotential_datum": [31, 32], "sea_floor_depth_below_geopotential_datum": [31, 32], "height_above_reference_ellipsoid": [31, 32], "sea_surface_height_above_reference_ellipsoid": [31, 32], "sea_floor_depth_below_reference_ellipsoid": [31, 32], "height_above_mean_sea_level": [31, 32], "sea_surface_height_above_mean_sea_level": [31, 32], "sea_floor_depth_below_mean_sea_level": [31, 32], "ocean_s_coordin": [31, 32], "depth_c": [31, 32], "ocean_sigma_coordin": [31, 32], "ocean_sigma_z_coordin": [31, 32], "check_add_offset_scale_factor_typ": [31, 32], "OR": [31, 32], "byte": [31, 32], "short": [31, 32, 121], "float": [31, 32, 121], "doubl": [31, 32, 121], "check_ancillary_vari": [31, 32], "all": [31, 32, 50, 52, 60, 63, 98, 99, 100, 111, 114, 121], "ensur": [31, 32, 98, 121], "thei": [31, 32, 100, 121], "whose": [31, 32], "separ": [31, 32, 99, 121], "natur": [31, 32], "relationship": [31, 32], "between": [31, 32, 121], "associ": [31, 32, 75], "via": [31, 32, 111, 121], "determin": [31, 32, 111, 121], "often": [31, 32], "have": [31, 32, 34, 75, 95, 98, 100, 121], "point": [31, 32, 80, 114, 121], "them": [31, 32, 121], "modifi": [31, 32], "appendix": [31, 32, 121], "check_appendix_a": [31, 32], "tabl": [31, 32, 75, 99], "locat": [31, 32, 111, 121], "outcom": [31, 32], "docstr": [31, 32, 115], "var": [31, 32, 100], "correspond": [31, 32, 77, 83, 99, 100], "check_aux_coordin": [31, 32], "chapter": [31, 32, 57, 58], "paragraph": [31, 32], "dimens": [31, 32, 35, 43, 95, 100], "auxiliari": [31, 32, 36], "subset": [31, 32], "except": [31, 32, 100, 111, 114], "first": [31, 32, 49, 62, 121], "section": [31, 32, 121], "label": [31, 32], "maximum": [31, 32], "length": [31, 32, 91, 100], "second": [31, 32, 121], "rag": [31, 32, 62, 74, 95], "arrai": [31, 32, 62, 74, 78, 79, 95], "represent": [31, 32, 62, 74, 78, 79, 95], "discret": [31, 32, 37, 62], "sampl": [31, 32, 62, 95, 121], "geometri": [31, 32, 62], "special": [31, 32, 100], "need": [31, 32, 114, 121], "connect": [31, 32], "check_calendar": [31, 32], "time": [31, 32, 37, 43, 45, 55, 56, 68, 70, 78, 79, 85, 86, 87, 88, 89, 90, 91, 98, 99, 100, 105, 121], "prescrib": [31, 32], "In": [31, 32, 121], "order": [31, 32, 43, 121], "calcul": [31, 32, 121], "date": [31, 32, 100, 118], "know": [31, 32], "what": [31, 32, 78, 79, 120], "gregorian": [31, 32], "proleptic_gregorian": [31, 32], "noleap": [31, 32], "365_dai": [31, 32], "all_leap": [31, 32], "366_dai": [31, 32], "360_dai": [31, 32], "julian": [31, 32], "mai": [31, 32, 100, 121], "set": [31, 32, 34, 64, 74, 98, 99, 100, 105], "climat": [31, 32], "experi": [31, 32], "simul": [31, 32], "fix": [31, 32], "year": [31, 32], "abov": [31, 32], "appli": [31, 32, 34, 100], "non": [31, 32, 57, 58, 121], "can": [31, 32, 37, 57, 58, 62, 96, 99, 100, 111, 114, 120, 121], "month": [31, 32], "explicitli": [31, 32], "leap": [31, 32], "also": [31, 32, 57, 58, 100, 121], "requir": [31, 32, 99, 100], "suffici": [31, 32], "appropri": [31, 32, 114], "howev": [31, 32, 100, 121], "allow": [31, 32, 43, 121], "case": [31, 32, 114, 121], "check_cell_boundari": [31, 32], "cell": [31, 32, 41, 42], "boundari": [31, 32, 40, 41, 42], "To": [31, 32, 100], "vertic": [31, 32, 100, 121], "than": [31, 32, 121], "addit": [31, 32, 100, 121], "most": [31, 32, 99], "rapidli": 31, "vari": [31, 68, 70, 121], "size": [31, 121], "number": [31, 32, 94, 121], "process": [31, 121], "adjac": 31, "share": [31, 32, 99], "edg": 31, "facilit": 31, "restrict": [31, 32], "place": [31, 32], "lat": [31, 98, 99, 100, 105], "latbnd": 31, "x": [31, 32, 37, 121], "interv": [31, 32], "endpoint": [31, 121], "consist": [31, 32], "e": [31, 32, 43, 75, 95, 108, 121], "increas": [31, 32, 121], "impli": [31, 32], "contigu": [31, 62, 95], "ident": 31, "where": [31, 57, 58, 120], "occur": [31, 111], "grid": [31, 32, 37, 47, 67, 68, 69, 70, 77, 83, 100, 121], "side": 31, "horizont": [31, 32, 83], "describ": [31, 32, 42, 56, 61, 121], "dimension": [31, 32, 43, 99, 100], "latitud": [31, 32, 37, 49, 50, 57], "m": [31, 32, 121], "longitud": [31, 32, 37, 51, 52, 58], "lon": [31, 98, 99, 100, 105], "four": [31, 32, 62], "lonbnd": 31, "trail": 31, "over": [31, 32], "multi": [31, 87], "travers": 31, "anticlockwis": 31, "plane": 31, "start": 31, "vertex": 31, "specifi": [31, 32, 121], "check_cell_measur": [31, 32], "extra": [31, 32], "about": [31, 32, 100, 120], "spatial": [31, 32], "properti": [31, 32, 121], "compris": [31, 32], "pair": [31, 32, 119], "word": [31, 32], "measur": [31, 32, 100], "area": [31, 32], "volum": [31, 32], "relat": [31, 32, 99, 100], "check_cell_method": [31, 32], "characterist": [31, 32], "identifi": [31, 32, 43, 100, 121], "deriv": [31, 32, 114], "sum": [31, 32, 121], "mean": [31, 32, 78, 79, 111, 121], "minimum": [31, 32], "mid_rang": [31, 32], "standard_devi": [31, 32], "varianc": [31, 32], "mode": [31, 32], "median": [31, 32], "signific": [31, 32], "some": [31, 32, 121], "chang": [31, 32, 121], "default": [31, 32, 121], "intens": [31, 32], "quantiti": [31, 32, 37, 99], "differ": [31, 32, 121], "distinct": [31, 32], "understood": [31, 32], "everi": [31, 32, 121], "interest": [31, 32, 121], "unless": [31, 32, 100], "would": [31, 32, 100, 121], "meaning": [31, 32], "especi": [31, 32], "spatio": [31, 32], "tempor": [31, 32], "check_cf_rol": [31, 32], "legal": [31, 32], "accept": [31, 32, 100], "timeseries_id": [31, 32, 64, 100], "profile_id": [31, 32, 64, 100], "trajectory_id": [31, 32, 100], "check_child_attr_data_typ": [31, 32], "parent": [31, 32], "nug": [31, 32], "www": [31, 32, 54, 106, 107], "unidata": [31, 32, 108], "ucar": [31, 32, 108], "edu": [31, 32, 108, 121], "doc": [31, 32, 114], "attribute_convent": [31, 32], "referenc": [31, 32, 99], "miss": [31, 32, 43], "check_climatological_statist": [31, 32], "climatolog": [31, 32], "begin": [31, 32], "subinterv": [31, 32], "end": [31, 32, 121], "last": [31, 32], "evalu": [31, 32], "statist": [31, 32], "recognis": [31, 32], "nonetheless": [31, 32], "abl": [31, 32, 121], "make": [31, 32], "reason": [31, 32, 121], "variat": [31, 32], "among": [31, 32], "dai": [31, 32], "those": [31, 32, 75, 100], "entri": [31, 32, 121], "standardis": [31, 32], "parenthes": [31, 32], "after": [31, 32], "method1": [31, 32], "method2": [31, 32], "method3": [31, 32], "check_compression_gath": [31, 32], "At": [31, 32], "interfac": [31, 32], "pack": [31, 32, 121], "achiev": [31, 32], "through": [31, 32, 41, 121], "read": [31, 32], "multipli": [31, 32, 121], "ad": [31, 32], "both": [31, 32, 98, 99, 100, 105, 121], "scale": [31, 32], "befor": [31, 32], "offset": [31, 32], "written": [31, 32], "subtract": [31, 32], "divid": [31, 32], "factor": [31, 32], "unpack": [31, 32], "respect": [31, 32], "ambigu": [31, 32], "precis": [31, 32], "problem": [31, 32], "convers": [31, 32], "resolv": [31, 32], "assum": [31, 32, 100], "advis": [31, 32], "potenti": [31, 32, 121], "loss": [31, 32], "see": [31, 32, 42, 74, 78, 79, 121], "discuss": [31, 32], "treat": [31, 32], "check_convention_glob": [31, 32], "check_convention_possibly_var_attr": [31, 32], "under": [31, 32], "comment": [31, 32, 74], "either": [31, 32, 100, 108, 111, 114, 121], "individu": [31, 32], "appear": [31, 32], "preced": [31, 32], "check_conventions_vers": [31, 32], "version_numb": [31, 32], "check_coordinate_typ": [31, 32], "attach": [31, 32], "y": [31, 32, 37], "z": [31, 32, 59, 60, 98, 100], "t": [31, 32, 37, 121], "stand": [31, 32], "altern": [31, 32, 121], "direct": [31, 32], "identif": [31, 32], "check_coordinate_variables_strict_monoton": [31, 32], "monoton": [31, 32, 43], "decreas": [31, 32], "check_data_typ": [31, 32], "char": [31, 32], "real": [31, 32], "check_dimension_nam": [31, 32], "duplic": [31, 32, 98], "zero": [31, 32], "check_dimension_ord": [31, 32], "height": [31, 32, 59], "rel": [31, 32], "cdl": [31, 32, 114, 121], "definit": [31, 32, 50, 52, 57, 58, 60], "whenev": [31, 32], "possibl": [31, 32, 121], "left": [31, 32], "spatiotempor": [31, 32], "check_dimensional_vertical_coordin": [31, 32], "dimless_vertical_coordin": [31, 32], "per": [31, 32, 62, 100], "udunit": [31, 32, 99, 100], "dat": [31, 32], "pressur": [31, 32, 100, 121], "ax": [31, 32], "commonli": [31, 32], "bar": [31, 32], "millibar": [31, 32], "decibar": [31, 32], "atmospher": [31, 32], "atm": [31, 32], "pascal": [31, 32], "pa": [31, 32], "hpa": [31, 32], "meter": [31, 32, 100], "metr": [31, 32], "kilomet": [31, 32], "km": [31, 32], "certain": [31, 32, 100], "circumst": [31, 32], "densiti": [31, 32, 37], "temperatur": [31, 32, 37], "plural": [31, 32], "check_dimensionless_vertical_coordin": [31, 32], "dimensionless": [31, 32, 75], "map": [31, 32, 35, 40, 47, 77, 114, 119], "uniqu": [31, 32], "term": [31, 32, 36], "maintain": [31, 32], "backward": [31, 32], "compat": [31, 32], "coard": [31, 32], "strongli": [31, 32], "check_duplicate_axi": [31, 32], "wai": [31, 32, 62, 121], "permiss": [31, 32], "check_feature_typ": [31, 32, 100], "orthogon": [31, 32, 62, 79, 82, 87, 88, 89, 90, 93, 121], "multidimension": [31, 32, 62, 78, 79], "insensit": [31, 32], "check_filenam": [31, 32], "filenam": [31, 32, 121], "nc": [31, 32, 35, 37, 40, 41, 46, 49, 50, 51, 52, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 98, 114, 121], "check_fill_value_equal_missing_valu": [31, 32], "accord": [31, 32, 64, 100], "check_fill_value_outside_valid_rang": [31, 32], "outsid": [31, 32], "rang": [31, 32], "check_flag": [31, 32], "intend": [31, 32, 121], "flag": [31, 32, 44, 100, 114], "binari": [31, 32], "express": [31, 32], "combin": [31, 32], "mutual": [31, 32], "exclus": [31, 32], "phrase": [31, 32], "charact": [31, 32, 100], "alphanumer": [31, 32, 100, 102], "five": [31, 32], "_": [31, 32], "independ": [31, 32, 100], "bit": [31, 32], "notat": [31, 32], "togeth": [31, 32, 111, 121], "blend": [31, 32], "enumer": [31, 32], "bitwis": [31, 32], "AND": [31, 32], "check_geographic_region": [31, 32], "geograph": [31, 32], "region": [31, 32], "complex": [31, 32], "cannot": [31, 32], "practic": [31, 32], "chosen": [31, 32], "check_grid_coordin": [31, 32], "check_grid_map": [31, 32], "desir": [31, 32], "singl": [31, 32, 84, 90, 91, 100, 114, 121], "anoth": [31, 32, 99], "collect": [31, 32, 99, 100, 119], "call": [31, 32, 111, 121], "arbitrari": [31, 32], "sinc": [31, 32], "Its": [31, 32], "purpos": [31, 32, 116], "act": [31, 32], "grid_mapping_nam": [31, 32], "depend": [31, 32, 99], "f": [31, 32, 77, 121], "latitude_longitud": [31, 32], "ellipsoid": [31, 32], "prime": [31, 32], "meridian": [31, 32], "directli": [31, 32], "done": [31, 32], "check_hint": [31, 32], "mislabel": [31, 32], "check_latitud": [31, 32], "correctli": [31, 32, 121], "alwai": [31, 32, 100], "degrees_north": [31, 32, 57, 58], "degree_north": [31, 32], "degree_n": [31, 32], "degrees_n": [31, 32], "degreen": [31, 32], "degreesn": [31, 32], "addition": [31, 32, 95], "rotat": [31, 32, 57, 58], "pole": [31, 32, 57, 58], "check_longitud": [31, 32], "degrees_east": [31, 32], "degree_east": [31, 32], "degree_": [31, 32], "degrees_": [31, 32], "degree": [31, 32], "degrees": [31, 32], "check_multi_dimensional_coord": [31, 32], "check_names_uniqu": [31, 32], "regardless": [31, 32], "distinguish": [31, 32], "pure": [31, 32], "disregard": [31, 32], "check_naming_convent": [31, 32], "letter": [31, 32], "compos": [31, 32], "digit": [31, 32, 100], "underscor": [31, 32], "check_packed_data": [31, 32], "check_reduced_horizontal_grid": [31, 32], "reduc": [31, 32, 37, 83], "arrang": [31, 32], "constant": [31, 32, 75], "scheme": [31, 32, 72], "gather": [31, 32], "check_standard_nam": [31, 32, 100], "meet": [31, 32], "check_time_coordin": [31, 32], "packag": [31, 32, 121], "abbrevi": [31, 32], "hour": [31, 32], "hr": [31, 32], "h": [31, 32, 78, 79, 121], "minut": [31, 32], "min": [31, 32], "sec": [31, 32], "alon": [31, 32], "zone": [31, 32], "caution": [31, 32], "similar": [31, 32, 42, 121], "check_unit": [31, 32, 99, 100], "recogn": [31, 32], "check_valid_range_or_valid_min_max_pres": [31, 32], "check_variable_featur": [31, 32], "featur": [31, 32, 61, 64, 71, 77, 80, 81, 82, 83, 84, 85], "found": [31, 32, 62, 100], "report": [31, 32, 111, 114, 121], "initi": [31, 32], "variou": [31, 32, 114], "inherit": 32, "cf1_6check": [32, 120], "actual_rang": 32, "external_vari": 32, "check_actual_rang": 32, "As": 32, "state": 32, "vector": 32, "design": [32, 121], "actual": 32, "numer": [32, 43, 100], "fist": 32, "equal": 32, "let": 32, "extend": [32, 100], "origin": 32, "check_cell_boundaries_interv": 32, "lie": 32, "ride": 32, "check_external_vari": 32, "extern": [32, 114], "concern": 32, "check_standard_name_deprecated_modifi": 32, "Not": 32, "won": 32, "rais": 32, "fail": [32, 100, 111, 114, 121], "upon": 32, "find": [32, 120], "py": [33, 121], "cfutil": [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 120], "attr_val": 34, "value_set": 34, "attr_typ": 34, "modifier_fn": 34, "lambda": 34, "helper": [34, 114], "get_attributes_by_valu": 34, "expect": 34, "issu": [34, 100, 121], "attempt": [34, 62, 63, 114, 118, 121], "membership": 34, "prior": 34, "sens": 36, "axis_map": 37, "u": [37, 120, 121], "unknown": 37, "sometim": 37, "physic": [37, 94], "continu": 37, "exactli": 43, "equival": [43, 100, 121], "terminologi": [43, 120], "forecast": 45, "detect": [46, 65], "instrument": [48, 100], "platform": [53, 99, 100], "nodc": [54, 121], "sea": 54, "noaa": [54, 100, 121], "gov": [54, 121], "resourc": [54, 114], "ocean": 54, "likeliest": 55, "system": [57, 58], "concept": [57, 58, 98, 120], "lack": [57, 58], "better": [57, 58], "ch": 62, "spec": [62, 100], "profil": [62, 64, 81, 82, 86, 87, 88, 89, 90, 91, 92, 93, 99, 100, 121], "logic": 62, "incomplet": [62, 78, 81, 86, 92], "els": [62, 96], "veri": 62, "legaci": 62, "neither": 62, "move": 62, "consolid": 63, "dispar": 63, "timeseri": [63, 100], "pragmat": 63, "lazi": 63, "ll": [63, 121], "argu": 63, "confid": 63, "wrapper": [64, 65, 66, 100], "timeseriesprofil": [64, 95, 100], "station": [64, 87, 88, 90, 91, 98, 99, 100, 105], "trajectori": [65, 71, 84, 92, 93, 100, 121], "2d": [67, 68, 70], "regular": [67, 68, 69, 70], "3d": 69, "feature_typ": 74, "structur": [74, 114], "inlin": 74, "standard_name_t": 75, "1e": 75, "character": 77, "appedix": 77, "seri": [78, 79, 85, 86, 87, 88, 89, 90, 91], "_incomplete_multidimensional_array_representation_of_time_seri": 78, "_orthogonal_multidimensional_array_representation_of_time_seri": 79, "multipl": [88, 99, 100, 111, 114, 120], "unitless": 94, "note": [94, 100, 121], "whole": 94, "still": 94, "absenc": 94, "member": 95, "three": [95, 121], "singular": 95, "sole": 95, "compound": 95, "units1": 96, "units2": 96, "reftimeistim": 96, "convert": [96, 119], "approv": 97, "ioo": [98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 120], "check_altitude_unit": 98, "todo": 98, "check_variable_unit": 98, "check_global_attribut": 98, "check_station_location_lat": [98, 99, 100, 105], "check_station_location_lon": [98, 99, 100, 105], "check_time_period": [98, 99, 100, 105], "period": [98, 99, 100, 105], "check_variable_attribut": 98, "come": [98, 99, 100], "check_variable_nam": 98, "io": [99, 100], "69": 99, "358": 99, "check_geophysical_vars_fill_valu": 99, "fill": 99, "check_geophysical_vars_standard_nam": 99, "check_platform_variable_attribut": 99, "ioos_cod": 99, "short_nam": 99, "check_platform_vari": 99, "involv": 99, "space": 99, "vocabulari": 99, "check_accuraci": 100, "accuraci": 100, "salin": 100, "context": 100, "839": 100, "check_cf_role_vari": 100, "regard": 100, "geophysical_vari": 100, "compli": 100, "rule": 100, "typic": 100, "summar": 100, "dim": 100, "trajectoryprofil": 100, "relev": 100, "748": 100, "828": 100, "check_contributor_role_and_vocabulari": 100, "contributor_rol": 100, "contributor_role_vocabulari": 100, "nerc": 100, "check_creator_and_publisher_typ": 100, "creator_typ": 100, "publisher_typ": 100, "person": 100, "check_geophysical_vars_have_attr": 100, "check_gts_ingest_glob": 100, "gts_ingest": 100, "check_gts_ingest_requir": 100, "qualifi": 100, "ingest": 100, "ndbcgt": 100, "alreadi": 100, "ancillari": 100, "reqpres": 100, "qartod": 100, "aggreg": [100, 114, 121], "notifi": 100, "did": 100, "759": 100, "check_instrument_make_model_calib_d": 100, "make_model": 100, "calibration_d": 100, "8601": [100, 117, 118], "check_instrument_vari": 100, "instrument_vari": 100, "check_ioos_ingest": 100, "ioos_ingest": 100, "check_platform_glob": 100, "check_platform_vocabulari": 100, "platform_vocabulari": 100, "mmisw": 100, "ont": 100, "vocab": 100, "ac": 100, "uk": 100, "l06": 100, "least": 100, "check_qartod_variables_flag": 100, "qualiti": 100, "controlqartod": 100, "deleg": 100, "check_qartod_variables_refer": 100, "deem": 100, "check_single_platform": 100, "thu": 100, "model": 100, "declar": 100, "standardnamet": 100, "check_vertical_coordin": 100, "inch": 100, "foot": 100, "yard": 100, "us_survey_foot": 100, "mile": 100, "fathom": 100, "up": [100, 111, 121], "down": [100, 121], "unlik": 100, "constrain": 100, "aforement": 100, "check_wmo_platform_cod": 100, "wmo": 100, "buoi": 100, "nw": 100, "show": [100, 121], "conform": [100, 114], "bioo": 101, "za": 102, "z0": 102, "gml": [106, 107], "opengi": [106, 107], "net": [106, 107], "xlink": [106, 107], "w3": [106, 107], "1999": [106, 107], "ow": 107, "revers": 108, "dn": 108, "naming_author": 108, "runner": [111, 112, 113, 120, 121], "ti": 111, "entir": [111, 121], "framework": 111, "import": [111, 121], "check_error": 111, "score_group": [111, 120], "verbos": [111, 114, 121], "dure": [111, 121], "stderr": 111, "goe": [111, 121], "integ": [111, 114], "html_output": [111, 114], "score_dict": 111, "output_filenam": [111, 114, 121], "ds_loc": 111, "limit": [111, 114], "render": [111, 114], "output": [111, 114, 120], "degre": 111, "strict": [111, 121], "strictest": 111, "go": 111, "json_output": 111, "output_typ": 111, "json": [111, 114, 120], "ocmplianc": 111, "json_new": [111, 121], "run_check": [111, 121], "checker_nam": [111, 114, 121], "criteria": [111, 121], "skip_check": [111, 114, 121], "include_check": [111, 114], "output_format": [111, 121], "text": [111, 120], "static": 111, "lenient": [111, 121], "normal": [111, 121], "stdout_output": 111, "routin": [111, 114], "displai": [111, 121], "termin": [111, 114], "stream": [112, 121], "check_remote_netcdf": 114, "get_point": 114, "passtre": 114, "templates_root": 114, "add_plugin_arg": 114, "parser": 114, "build_structur": 114, "check_nam": [114, 121], "source_nam": 114, "look": 114, "scored_point": [114, 121], "396": 114, "low_count": 114, "possible_point": [114, 121], "400": 114, "testnam": 114, "gliderdac": [114, 121], "medium_count": 114, "rutger": 114, "ru01": 114, "20140120t1444": 114, "20140120t1649": 114, "high_count": 114, "all_prior": 114, "high_prior": 114, "medium_prior": 114, "low_prior": 114, "ds_str": 114, "checker_html_output": 114, "jinja2": 114, "dict_output": 114, "build": 114, "write": [114, 120], "buffer": 114, "save": 114, "generate_dataset": 114, "cdl_path": 114, "ncgen": 114, "sy": 114, "exit": [114, 121], "program": [114, 121], "long": 114, "stack": 114, "trace": 114, "absolut": [114, 121], "checkers_html": 114, "load_all_available_check": [114, 121], "retriev": 114, "sub": 114, "load_dataset": 114, "instanti": 114, "load": [114, 121], "load_generated_check": 114, "load_local_dataset": 114, "load_remote_dataset": 114, "opendap": [114, 121], "process_doc": 114, "pars": [114, 117, 118, 121], "xml": [114, 121], "reasoning_routin": 114, "priority_flag": 114, "_top_level": 114, "print": 114, "header": [114, 121], "run_al": 114, "while": [114, 121], "raw_scor": 114, "raw": 114, "fulli": 114, "talli": 114, "scorelin": 114, "o": [114, 121], "safe": 114, "standard_output": 114, "standard_output_gener": 114, "dedent": 115, "aid": 116, "task": 116, "util": [117, 118, 119, 120], "date_str": [117, 118], "naiv": 117, "datetim": 117, "input_col": 119, "ordereddict": 119, "idempot": 119, "first_tuple_el": 119, "second_tuple_el": 119, "scalar_valu": 119, "advic": 120, "usag": 120, "api": 120, "instal": 120, "erddap": 120, "download": 120, "particular": 120, "plug": 120, "Ins": 120, "releas": 120, "disclaim": 120, "miscellan": 120, "contributor": 120, "cf1_7check": 120, "protocol": 120, "acdd1_1check": 120, "acdd1_3check": 120, "acddbasecheck": 120, "acddnccheck": 120, "attr_check": 120, "check_ha": 120, "csv_splitter": 120, "fix_return_valu": 120, "get_namespac": 120, "maybe_get_global_attr": 120, "ratable_result": 120, "xpath_check": 120, "basenccheck": 120, "basesosdscheck": 120, "basesosgccheck": 120, "emailvalid": 120, "genericfil": 120, "regexvalid": 120, "urlvalid": 120, "validationobject": 120, "attr_membership": 120, "coordinate_dimension_matrix": 120, "get_auxiliary_coordinate_vari": 120, "get_axis_map": 120, "get_axis_vari": 120, "get_bounds_vari": 120, "get_cell_boundary_map": 120, "get_cell_boundary_vari": 120, "get_climatology_vari": 120, "get_coordinate_vari": 120, "get_flag_vari": 120, "get_forecast_metadata_vari": 120, "get_geophysical_vari": 120, "get_grid_mapping_vari": 120, "get_instrument_vari": 120, "get_lat_vari": 120, "get_latitude_vari": 120, "get_lon_vari": 120, "get_longitude_vari": 120, "get_platform_vari": 120, "get_sea_nam": 120, "get_time_vari": 120, "get_true_latitude_vari": 120, "get_true_longitude_vari": 120, "get_z_vari": 120, "guess_feature_typ": 120, "isprofil": 120, "istimeseri": 120, "istimeseriesprofil": 120, "istrajectori": 120, "istrajectoryprofil": 120, "is_2d_regular_grid": 120, "is_2d_static_grid": 120, "is_3d_regular_grid": 120, "is_3d_static_grid": 120, "is_cf_trajectori": 120, "is_compression_coordin": 120, "is_coordinate_vari": 120, "is_dataset_valid_ragged_array_repr_featuretyp": 120, "is_dimensionless_standard_nam": 120, "is_geophys": 120, "is_mapped_grid": 120, "is_multi_timeseries_incomplet": 120, "is_multi_timeseries_orthogon": 120, "is_point": 120, "is_profile_incomplet": 120, "is_profile_orthogon": 120, "is_reduced_grid": 120, "is_single_trajectori": 120, "is_timeseri": 120, "is_timeseries_profile_incomplet": 120, "is_timeseries_profile_multi_ortho_tim": 120, "is_timeseries_profile_multi_st": 120, "is_timeseries_profile_ortho_depth": 120, "is_timeseries_profile_single_ortho_tim": 120, "is_timeseries_profile_single_st": 120, "is_trajectory_profile_incomplet": 120, "is_trajectory_profile_orthogon": 120, "is_unitless": 120, "is_variable_valid_ragged_array_repr_featuretyp": 120, "units_convert": 120, "ioos0_1check": 120, "ioos1_1check": 120, "ioos1_2check": 120, "ioos1_2_conventionsvalid": 120, "ioos1_2_platformidvalid": 120, "ioosbasecheck": 120, "ioosbasesoscheck": 120, "ioosnccheck": 120, "ioossosdscheck": 120, "ioossosgccheck": 120, "namingauthorityvalid": 120, "stdout_redirector": 120, "compliancecheck": [120, 121], "extract_docstring_summari": 120, "datepars": 120, "datetime_is_iso": 120, "kvp_convert": 120, "frequent": 120, "ask": 120, "question": 120, "search": 120, "page": [120, 121], "built": 121, "cc": 121, "loop": 121, "meant": 121, "bug": 121, "help": 121, "procedur": 121, "worth": 121, "insur": 121, "impact": 121, "feel": 121, "batch": 121, "contact": 121, "offic": 121, "oper": 121, "divis": 121, "assist": 121, "front": 121, "companion": 121, "want": 121, "dropdown": 121, "menu": 121, "Then": 121, "click": 121, "submit": 121, "give": 121, "comprehens": 121, "action": 121, "button": 121, "host": 121, "wiki": 121, "coupl": 121, "htmlapi": 121, "report_format": 121, "maracoo": 121, "stabl": 121, "dodsc": 121, "hreco": 121, "stationhrmarph": 121, "agg": 121, "ncml": 121, "execut": 121, "comput": 121, "readabl": 121, "human": 121, "child": 121, "control": 121, "prevent": 121, "overal": 121, "top": 121, "instruct": 121, "request": 121, "aim": 121, "dump": 121, "known": 121, "cchecker": 121, "download_standard_nam": 121, "dataset_loc": 121, "fetch": 121, "unspecifi": 121, "test_standard": 121, "omit": 121, "latest": 121, "skip_level": 121, "wherea": 121, "main": 121, "subkei": 121, "stdout": 121, "mani": 121, "invoc": 121, "switch": 121, "prefix": 121, "option_nam": 121, "enable_appendix_a_check": 121, "72": 121, "hycom_glob": 121, "water_u": 121, "water_v": 121, "becom": 121, "popular": 121, "griddap": 121, "pae": 121, "paha": 121, "pacioo": 121, "hawaii": 121, "pibhmc_bathy_60m_guam": 121, "nccf": 121, "etc": 121, "aw": 121, "himb": 121, "secoora": 121, "edu_usf_marine_comps_1407d550": 121, "cencoo": 121, "bodega": 121, "bml_wt": 121, "fort": 121, "edu_humboldt_humboldt": 121, "edu_calpoly_marine_morro": 121, "mlml_mlml_sea": 121, "mlml_mlml_met": 121, "mlml_monterei": 121, "edu_humboldt_tdp": 121, "tmp": 121, "txt": 121, "combined_output": 121, "ww3": 121, "hycom": 121, "standard_name_vocabulari": 121, "v30": 121, "doesn": 121, "try": 121, "fall": 121, "back": 121, "35": 121, "src": 121, "environ": 121, "cf_standard_name_t": 121, "incorpor": 121, "check_suit": 121, "adcc": 121, "return_valu": 121, "r": 121, "fp": 121, "cc_data": 121, "cc_test": 121, "log": 121, "debug": 121, "ins": 121, "complement": 121, "prepar": 121, "assembli": 121, "center": 121, "necessarili": 121, "templat": 121, "v2": 121, "pip": 121, "onc": 121, "thredd": 121, "testdata": 121, "mbiddl": 121, "gold_standard_netcdf": 121, "nodc_point_template_v1": 121, "1_2016": 121, "06": 121, "15_133710": 121, "844375": 121, "sample_grid_report": 121, "portion": 121, "michael": 121, "decker": 121, "repositori": 121, "iek": 121, "fz": 121, "juelich": 121, "de": 121, "hg": 121, "cfchecker": 121}, "objects": {"compliance_checker": [[2, 0, 0, "-", "acdd"], [7, 0, 0, "-", "base"], [30, 0, 0, "-", "cf"], [33, 0, 0, "-", "cfutil"], [97, 0, 0, "-", "ioos"], [109, 0, 0, "-", "protocols"], [110, 0, 0, "-", "runner"], [113, 0, 0, "-", "suite"], [116, 0, 0, "-", "util"]], "compliance_checker.acdd": [[3, 1, 1, "", "ACDD1_1Check"], [4, 1, 1, "", "ACDD1_3Check"], [5, 1, 1, "", "ACDDBaseCheck"], [6, 1, 1, "", "ACDDNCCheck"]], "compliance_checker.acdd.ACDD1_1Check": [[3, 2, 1, "", "HIGH"], [3, 2, 1, "", "LOW"], [3, 2, 1, "", "MEDIUM"], [3, 3, 1, "", "__init__"], [3, 3, 1, "", "check_acknowledgment"], [3, 3, 1, "", "check_high"], [3, 3, 1, "", "check_lat_extents"], [3, 3, 1, "", "check_lon_extents"], [3, 3, 1, "", "check_recommended"], [3, 3, 1, "", "check_suggested"], [3, 3, 1, "", "check_time_extents"], [3, 3, 1, "", "check_var_long_name"], [3, 3, 1, "", "check_var_standard_name"], [3, 3, 1, "", "check_var_units"], [3, 3, 1, "", "check_vertical_extents"], [3, 3, 1, "", "get_applicable_variables"], [3, 3, 1, "", "get_test_ctx"], [3, 2, 1, "", "register_checker"], [3, 3, 1, "", "setup"], [3, 3, 1, "", "std_check"], [3, 3, 1, "", "std_check_in"], [3, 2, 1, "", "supported_ds"], [3, 3, 1, "", "verify_convention_version"], [3, 3, 1, "", "verify_geospatial_bounds"]], "compliance_checker.acdd.ACDD1_3Check": [[4, 2, 1, "", "HIGH"], [4, 2, 1, "", "LOW"], [4, 2, 1, "", "MEDIUM"], [4, 3, 1, "", "__init__"], [4, 3, 1, "", "check_acknowledgment"], [4, 3, 1, "", "check_high"], [4, 3, 1, "", "check_id_has_no_blanks"], [4, 3, 1, "", "check_lat_extents"], [4, 3, 1, "", "check_lon_extents"], [4, 3, 1, "", "check_metadata_link"], [4, 3, 1, "", "check_recommended"], [4, 3, 1, "", "check_suggested"], [4, 3, 1, "", "check_time_extents"], [4, 3, 1, "", "check_var_coverage_content_type"], [4, 3, 1, "", "check_var_long_name"], [4, 3, 1, "", "check_var_standard_name"], [4, 3, 1, "", "check_var_units"], [4, 3, 1, "", "check_vertical_extents"], [4, 3, 1, "", "get_applicable_variables"], [4, 3, 1, "", "get_test_ctx"], [4, 2, 1, "", "register_checker"], [4, 3, 1, "", "setup"], [4, 3, 1, "", "std_check"], [4, 3, 1, "", "std_check_in"], [4, 2, 1, "", "supported_ds"], [4, 3, 1, "", "verify_convention_version"], [4, 3, 1, "", "verify_geospatial_bounds"]], "compliance_checker.acdd.ACDDBaseCheck": [[5, 2, 1, "", "HIGH"], [5, 2, 1, "", "LOW"], [5, 2, 1, "", "MEDIUM"], [5, 3, 1, "", "__init__"], [5, 3, 1, "", "check_acknowledgment"], [5, 3, 1, "", "check_high"], [5, 3, 1, "", "check_lat_extents"], [5, 3, 1, "", "check_lon_extents"], [5, 3, 1, "", "check_recommended"], [5, 3, 1, "", "check_suggested"], [5, 3, 1, "", "check_time_extents"], [5, 3, 1, "", "check_var_long_name"], [5, 3, 1, "", "check_var_standard_name"], [5, 3, 1, "", "check_var_units"], [5, 3, 1, "", "check_vertical_extents"], [5, 3, 1, "", "get_applicable_variables"], [5, 3, 1, "", "get_test_ctx"], [5, 3, 1, "", "setup"], [5, 2, 1, "", "supported_ds"], [5, 3, 1, "", "verify_convention_version"], [5, 3, 1, "", "verify_geospatial_bounds"]], "compliance_checker.acdd.ACDDNCCheck": [[6, 2, 1, "", "HIGH"], [6, 2, 1, "", "LOW"], [6, 2, 1, "", "MEDIUM"], [6, 3, 1, "", "__init__"], [6, 3, 1, "", "check_acknowledgment"], [6, 3, 1, "", "check_high"], [6, 3, 1, "", "check_lat_extents"], [6, 3, 1, "", "check_lon_extents"], [6, 3, 1, "", "check_recommended"], [6, 3, 1, "", "check_suggested"], [6, 3, 1, "", "check_time_extents"], [6, 3, 1, "", "check_var_long_name"], [6, 3, 1, "", "check_var_standard_name"], [6, 3, 1, "", "check_var_units"], [6, 3, 1, "", "check_vertical_extents"], [6, 3, 1, "", "get_applicable_variables"], [6, 3, 1, "", "get_test_ctx"], [6, 3, 1, "", "setup"], [6, 3, 1, "", "std_check"], [6, 3, 1, "", "std_check_in"], [6, 2, 1, "", "supported_ds"], [6, 3, 1, "", "verify_convention_version"], [6, 3, 1, "", "verify_geospatial_bounds"]], "compliance_checker.base": [[8, 1, 1, "", "BaseCheck"], [9, 1, 1, "", "BaseNCCheck"], [10, 1, 1, "", "BaseSOSDSCheck"], [11, 1, 1, "", "BaseSOSGCCheck"], [12, 1, 1, "", "EmailValidator"], [13, 1, 1, "", "GenericFile"], [14, 1, 1, "", "RegexValidator"], [15, 1, 1, "", "Result"], [16, 1, 1, "", "TestCtx"], [17, 1, 1, "", "UrlValidator"], [18, 1, 1, "", "ValidationObject"], [19, 4, 1, "", "attr_check"], [20, 4, 1, "", "check_has"], [21, 4, 1, "", "csv_splitter"], [22, 4, 1, "", "fix_return_value"], [23, 4, 1, "", "get_namespaces"], [24, 4, 1, "", "maybe_get_global_attr"], [25, 4, 1, "", "ratable_result"], [26, 4, 1, "", "score_group"], [27, 4, 1, "", "std_check"], [28, 4, 1, "", "std_check_in"], [29, 4, 1, "", "xpath_check"]], "compliance_checker.base.BaseCheck": [[8, 2, 1, "", "HIGH"], [8, 2, 1, "", "LOW"], [8, 2, 1, "", "MEDIUM"], [8, 3, 1, "", "__init__"], [8, 3, 1, "", "get_test_ctx"], [8, 3, 1, "", "setup"], [8, 2, 1, "", "supported_ds"]], "compliance_checker.base.BaseNCCheck": [[9, 3, 1, "", "__init__"], [9, 3, 1, "", "std_check"], [9, 3, 1, "", "std_check_in"], [9, 2, 1, "", "supported_ds"]], "compliance_checker.base.BaseSOSDSCheck": [[10, 3, 1, "", "__init__"], [10, 2, 1, "", "supported_ds"]], "compliance_checker.base.BaseSOSGCCheck": [[11, 3, 1, "", "__init__"], [11, 2, 1, "", "supported_ds"]], "compliance_checker.base.EmailValidator": [[12, 3, 1, "", "__init__"], [12, 3, 1, "", "validate"], [12, 3, 1, "", "validate_type"], [12, 2, 1, "", "validator_fail_msg"], [12, 3, 1, "", "validator_func"]], "compliance_checker.base.GenericFile": [[13, 3, 1, "", "__init__"], [13, 3, 1, "", "filepath"]], "compliance_checker.base.RegexValidator": [[14, 3, 1, "", "__init__"], [14, 3, 1, "", "validate"], [14, 3, 1, "", "validate_type"], [14, 2, 1, "", "validator_fail_msg"], [14, 3, 1, "", "validator_func"], [14, 2, 1, "", "validator_regex"]], "compliance_checker.base.Result": [[15, 3, 1, "", "__init__"], [15, 3, 1, "", "serialize"]], "compliance_checker.base.TestCtx": [[16, 3, 1, "", "__init__"], [16, 3, 1, "", "add_failure"], [16, 3, 1, "", "add_pass"], [16, 3, 1, "", "assert_true"], [16, 3, 1, "", "to_result"]], "compliance_checker.base.UrlValidator": [[17, 3, 1, "", "__init__"], [17, 3, 1, "", "validate"], [17, 3, 1, "", "validate_type"], [17, 2, 1, "", "validator_fail_msg"], [17, 3, 1, "", "validator_func"]], "compliance_checker.base.ValidationObject": [[18, 3, 1, "", "__init__"], [18, 2, 1, "", "expected_type"], [18, 3, 1, "", "validate"], [18, 3, 1, "", "validate_type"], [18, 2, 1, "", "validator_fail_msg"], [18, 3, 1, "", "validator_func"]], "compliance_checker.cf": [[31, 1, 1, "", "CF1_6Check"], [32, 1, 1, "", "CF1_7Check"]], "compliance_checker.cf.CF1_6Check": [[31, 2, 1, "", "HIGH"], [31, 2, 1, "", "LOW"], [31, 2, 1, "", "MEDIUM"], [31, 3, 1, "", "__init__"], [31, 2, 1, "", "appendix_a"], [31, 2, 1, "", "appendix_d_parametric_coords"], [31, 3, 1, "", "check_add_offset_scale_factor_type"], [31, 3, 1, "", "check_ancillary_variables"], [31, 3, 1, "", "check_appendix_a"], [31, 3, 1, "", "check_aux_coordinates"], [31, 3, 1, "", "check_calendar"], [31, 3, 1, "", "check_cell_boundaries"], [31, 3, 1, "", "check_cell_measures"], [31, 3, 1, "", "check_cell_methods"], [31, 3, 1, "", "check_cf_role"], [31, 3, 1, "", "check_child_attr_data_types"], [31, 3, 1, "", "check_climatological_statistics"], [31, 3, 1, "", "check_compression_gathering"], [31, 3, 1, "", "check_convention_globals"], [31, 3, 1, "", "check_convention_possibly_var_attrs"], [31, 3, 1, "", "check_conventions_version"], [31, 3, 1, "", "check_coordinate_types"], [31, 3, 1, "", "check_coordinate_variables_strict_monotonicity"], [31, 3, 1, "", "check_data_types"], [31, 3, 1, "", "check_dimension_names"], [31, 3, 1, "", "check_dimension_order"], [31, 3, 1, "", "check_dimensional_vertical_coordinate"], [31, 3, 1, "", "check_dimensionless_vertical_coordinates"], [31, 3, 1, "", "check_duplicate_axis"], [31, 3, 1, "", "check_feature_type"], [31, 3, 1, "", "check_filename"], [31, 3, 1, "", "check_fill_value_equal_missing_value"], [31, 3, 1, "", "check_fill_value_outside_valid_range"], [31, 3, 1, "", "check_flags"], [31, 3, 1, "", "check_geographic_region"], [31, 3, 1, "", "check_grid_coordinates"], [31, 3, 1, "", "check_grid_mapping"], [31, 3, 1, "", "check_hints"], [31, 3, 1, "", "check_latitude"], [31, 3, 1, "", "check_longitude"], [31, 3, 1, "", "check_multi_dimensional_coords"], [31, 3, 1, "", "check_names_unique"], [31, 3, 1, "", "check_naming_conventions"], [31, 3, 1, "", "check_packed_data"], [31, 3, 1, "", "check_reduced_horizontal_grid"], [31, 3, 1, "", "check_standard_name"], [31, 3, 1, "", "check_time_coordinate"], [31, 3, 1, "", "check_units"], [31, 3, 1, "", "check_valid_range_or_valid_min_max_present"], [31, 3, 1, "", "check_variable_features"], [31, 3, 1, "", "get_test_ctx"], [31, 2, 1, "", "register_checker"], [31, 3, 1, "", "setup"], [31, 3, 1, "", "std_check"], [31, 3, 1, "", "std_check_in"], [31, 2, 1, "", "supported_ds"]], "compliance_checker.cf.CF1_7Check": [[32, 2, 1, "", "HIGH"], [32, 2, 1, "", "LOW"], [32, 2, 1, "", "MEDIUM"], [32, 3, 1, "", "__init__"], [32, 2, 1, "", "appendix_a"], [32, 2, 1, "", "appendix_d_parametric_coords"], [32, 3, 1, "", "check_actual_range"], [32, 3, 1, "", "check_add_offset_scale_factor_type"], [32, 3, 1, "", "check_ancillary_variables"], [32, 3, 1, "", "check_appendix_a"], [32, 3, 1, "", "check_aux_coordinates"], [32, 3, 1, "", "check_calendar"], [32, 3, 1, "", "check_cell_boundaries"], [32, 3, 1, "", "check_cell_boundaries_interval"], [32, 3, 1, "", "check_cell_measures"], [32, 3, 1, "", "check_cell_methods"], [32, 3, 1, "", "check_cf_role"], [32, 3, 1, "", "check_child_attr_data_types"], [32, 3, 1, "", "check_climatological_statistics"], [32, 3, 1, "", "check_compression_gathering"], [32, 3, 1, "", "check_convention_globals"], [32, 3, 1, "", "check_convention_possibly_var_attrs"], [32, 3, 1, "", "check_conventions_version"], [32, 3, 1, "", "check_coordinate_types"], [32, 3, 1, "", "check_coordinate_variables_strict_monotonicity"], [32, 3, 1, "", "check_data_types"], [32, 3, 1, "", "check_dimension_names"], [32, 3, 1, "", "check_dimension_order"], [32, 3, 1, "", "check_dimensional_vertical_coordinate"], [32, 3, 1, "", "check_dimensionless_vertical_coordinates"], [32, 3, 1, "", "check_duplicate_axis"], [32, 3, 1, "", "check_external_variables"], [32, 3, 1, "", "check_feature_type"], [32, 3, 1, "", "check_filename"], [32, 3, 1, "", "check_fill_value_equal_missing_value"], [32, 3, 1, "", "check_fill_value_outside_valid_range"], [32, 3, 1, "", "check_flags"], [32, 3, 1, "", "check_geographic_region"], [32, 3, 1, "", "check_grid_coordinates"], [32, 3, 1, "", "check_grid_mapping"], [32, 3, 1, "", "check_hints"], [32, 3, 1, "", "check_latitude"], [32, 3, 1, "", "check_longitude"], [32, 3, 1, "", "check_multi_dimensional_coords"], [32, 3, 1, "", "check_names_unique"], [32, 3, 1, "", "check_naming_conventions"], [32, 3, 1, "", "check_packed_data"], [32, 3, 1, "", "check_reduced_horizontal_grid"], [32, 3, 1, "", "check_standard_name"], [32, 3, 1, "", "check_standard_name_deprecated_modifiers"], [32, 3, 1, "", "check_time_coordinate"], [32, 3, 1, "", "check_units"], [32, 3, 1, "", "check_valid_range_or_valid_min_max_present"], [32, 3, 1, "", "check_variable_features"], [32, 3, 1, "", "get_test_ctx"], [32, 2, 1, "", "register_checker"], [32, 3, 1, "", "setup"], [32, 3, 1, "", "std_check"], [32, 3, 1, "", "std_check_in"], [32, 2, 1, "", "supported_ds"]], "compliance_checker.cfutil": [[34, 4, 1, "", "attr_membership"], [35, 4, 1, "", "coordinate_dimension_matrix"], [36, 4, 1, "", "get_auxiliary_coordinate_variables"], [37, 4, 1, "", "get_axis_map"], [38, 4, 1, "", "get_axis_variables"], [39, 4, 1, "", "get_bounds_variables"], [40, 4, 1, "", "get_cell_boundary_map"], [41, 4, 1, "", "get_cell_boundary_variables"], [42, 4, 1, "", "get_climatology_variable"], [43, 4, 1, "", "get_coordinate_variables"], [44, 4, 1, "", "get_flag_variables"], [45, 4, 1, "", "get_forecast_metadata_variables"], [46, 4, 1, "", "get_geophysical_variables"], [47, 4, 1, "", "get_grid_mapping_variables"], [48, 4, 1, "", "get_instrument_variables"], [49, 4, 1, "", "get_lat_variable"], [50, 4, 1, "", "get_latitude_variables"], [51, 4, 1, "", "get_lon_variable"], [52, 4, 1, "", "get_longitude_variables"], [53, 4, 1, "", "get_platform_variables"], [54, 4, 1, "", "get_sea_names"], [55, 4, 1, "", "get_time_variable"], [56, 4, 1, "", "get_time_variables"], [57, 4, 1, "", "get_true_latitude_variables"], [58, 4, 1, "", "get_true_longitude_variables"], [59, 4, 1, "", "get_z_variable"], [60, 4, 1, "", "get_z_variables"], [61, 4, 1, "", "guess_feature_type"], [62, 4, 1, "", "isProfile"], [63, 4, 1, "", "isTimeSeries"], [64, 4, 1, "", "isTimeSeriesProfile"], [65, 4, 1, "", "isTrajectory"], [66, 4, 1, "", "isTrajectoryProfile"], [67, 4, 1, "", "is_2d_regular_grid"], [68, 4, 1, "", "is_2d_static_grid"], [69, 4, 1, "", "is_3d_regular_grid"], [70, 4, 1, "", "is_3d_static_grid"], [71, 4, 1, "", "is_cf_trajectory"], [72, 4, 1, "", "is_compression_coordinate"], [73, 4, 1, "", "is_coordinate_variable"], [74, 4, 1, "", "is_dataset_valid_ragged_array_repr_featureType"], [75, 4, 1, "", "is_dimensionless_standard_name"], [76, 4, 1, "", "is_geophysical"], [77, 4, 1, "", "is_mapped_grid"], [78, 4, 1, "", "is_multi_timeseries_incomplete"], [79, 4, 1, "", "is_multi_timeseries_orthogonal"], [80, 4, 1, "", "is_point"], [81, 4, 1, "", "is_profile_incomplete"], [82, 4, 1, "", "is_profile_orthogonal"], [83, 4, 1, "", "is_reduced_grid"], [84, 4, 1, "", "is_single_trajectory"], [85, 4, 1, "", "is_timeseries"], [86, 4, 1, "", "is_timeseries_profile_incomplete"], [87, 4, 1, "", "is_timeseries_profile_multi_ortho_time"], [88, 4, 1, "", "is_timeseries_profile_multi_station"], [89, 4, 1, "", "is_timeseries_profile_ortho_depth"], [90, 4, 1, "", "is_timeseries_profile_single_ortho_time"], [91, 4, 1, "", "is_timeseries_profile_single_station"], [92, 4, 1, "", "is_trajectory_profile_incomplete"], [93, 4, 1, "", "is_trajectory_profile_orthogonal"], [94, 4, 1, "", "is_unitless"], [95, 4, 1, "", "is_variable_valid_ragged_array_repr_featureType"], [96, 4, 1, "", "units_convertible"]], "compliance_checker.ioos": [[98, 1, 1, "", "IOOS0_1Check"], [99, 1, 1, "", "IOOS1_1Check"], [100, 1, 1, "", "IOOS1_2Check"], [101, 1, 1, "", "IOOS1_2_ConventionsValidator"], [102, 1, 1, "", "IOOS1_2_PlatformIDValidator"], [103, 1, 1, "", "IOOSBaseCheck"], [104, 1, 1, "", "IOOSBaseSOSCheck"], [105, 1, 1, "", "IOOSNCCheck"], [106, 1, 1, "", "IOOSSOSDSCheck"], [107, 1, 1, "", "IOOSSOSGCCheck"], [108, 1, 1, "", "NamingAuthorityValidator"]], "compliance_checker.ioos.IOOS0_1Check": [[98, 2, 1, "", "HIGH"], [98, 2, 1, "", "LOW"], [98, 2, 1, "", "MEDIUM"], [98, 3, 1, "", "__init__"], [98, 3, 1, "", "check_altitude_units"], [98, 3, 1, "", "check_global_attributes"], [98, 3, 1, "", "check_station_location_lat"], [98, 3, 1, "", "check_station_location_lon"], [98, 3, 1, "", "check_time_period"], [98, 3, 1, "", "check_variable_attributes"], [98, 3, 1, "", "check_variable_names"], [98, 3, 1, "", "check_variable_units"], [98, 3, 1, "", "get_test_ctx"], [98, 2, 1, "", "register_checker"], [98, 3, 1, "", "setup"], [98, 3, 1, "", "std_check"], [98, 3, 1, "", "std_check_in"], [98, 2, 1, "", "supported_ds"]], "compliance_checker.ioos.IOOS1_1Check": [[99, 2, 1, "", "HIGH"], [99, 2, 1, "", "LOW"], [99, 2, 1, "", "MEDIUM"], [99, 3, 1, "", "__init__"], [99, 3, 1, "", "check_geophysical_vars_fill_value"], [99, 3, 1, "", "check_geophysical_vars_standard_name"], [99, 3, 1, "", "check_high"], [99, 3, 1, "", "check_platform_variable_attributes"], [99, 3, 1, "", "check_platform_variables"], [99, 3, 1, "", "check_recommended"], [99, 3, 1, "", "check_station_location_lat"], [99, 3, 1, "", "check_station_location_lon"], [99, 3, 1, "", "check_time_period"], [99, 3, 1, "", "check_units"], [99, 3, 1, "", "get_test_ctx"], [99, 2, 1, "", "register_checker"], [99, 3, 1, "", "setup"], [99, 3, 1, "", "std_check"], [99, 3, 1, "", "std_check_in"], [99, 2, 1, "", "supported_ds"]], "compliance_checker.ioos.IOOS1_2Check": [[100, 2, 1, "", "HIGH"], [100, 2, 1, "", "LOW"], [100, 2, 1, "", "MEDIUM"], [100, 3, 1, "", "__init__"], [100, 3, 1, "", "check_accuracy"], [100, 3, 1, "", "check_cf_role_variables"], [100, 3, 1, "", "check_contributor_role_and_vocabulary"], [100, 3, 1, "", "check_creator_and_publisher_type"], [100, 3, 1, "", "check_feature_type"], [100, 3, 1, "", "check_geophysical_vars_have_attrs"], [100, 3, 1, "", "check_gts_ingest_global"], [100, 3, 1, "", "check_gts_ingest_requirements"], [100, 3, 1, "", "check_high"], [100, 3, 1, "", "check_instrument_make_model_calib_date"], [100, 3, 1, "", "check_instrument_variables"], [100, 3, 1, "", "check_ioos_ingest"], [100, 3, 1, "", "check_platform_global"], [100, 3, 1, "", "check_platform_vocabulary"], [100, 3, 1, "", "check_qartod_variables_flags"], [100, 3, 1, "", "check_qartod_variables_references"], [100, 3, 1, "", "check_recommended"], [100, 3, 1, "", "check_single_platform"], [100, 3, 1, "", "check_standard_name"], [100, 3, 1, "", "check_station_location_lat"], [100, 3, 1, "", "check_station_location_lon"], [100, 3, 1, "", "check_time_period"], [100, 3, 1, "", "check_units"], [100, 3, 1, "", "check_vertical_coordinates"], [100, 3, 1, "", "check_wmo_platform_code"], [100, 3, 1, "", "get_test_ctx"], [100, 2, 1, "", "register_checker"], [100, 3, 1, "", "setup"], [100, 3, 1, "", "std_check"], [100, 3, 1, "", "std_check_in"], [100, 2, 1, "", "supported_ds"]], "compliance_checker.ioos.IOOS1_2_ConventionsValidator": [[101, 3, 1, "", "__init__"], [101, 3, 1, "", "validate"], [101, 3, 1, "", "validate_type"], [101, 2, 1, "", "validator_fail_msg"], [101, 3, 1, "", "validator_func"], [101, 2, 1, "", "validator_regex"]], "compliance_checker.ioos.IOOS1_2_PlatformIDValidator": [[102, 3, 1, "", "__init__"], [102, 3, 1, "", "validate"], [102, 3, 1, "", "validate_type"], [102, 2, 1, "", "validator_fail_msg"], [102, 3, 1, "", "validator_func"], [102, 2, 1, "", "validator_regex"]], "compliance_checker.ioos.IOOSBaseCheck": [[103, 2, 1, "", "HIGH"], [103, 2, 1, "", "LOW"], [103, 2, 1, "", "MEDIUM"], [103, 3, 1, "", "__init__"], [103, 3, 1, "", "get_test_ctx"], [103, 3, 1, "", "setup"], [103, 2, 1, "", "supported_ds"]], "compliance_checker.ioos.IOOSBaseSOSCheck": [[104, 2, 1, "", "HIGH"], [104, 2, 1, "", "LOW"], [104, 2, 1, "", "MEDIUM"], [104, 3, 1, "", "__init__"], [104, 3, 1, "", "get_test_ctx"], [104, 2, 1, "", "register_checker"], [104, 3, 1, "", "setup"], [104, 2, 1, "", "supported_ds"]], "compliance_checker.ioos.IOOSNCCheck": [[105, 2, 1, "", "HIGH"], [105, 2, 1, "", "LOW"], [105, 2, 1, "", "MEDIUM"], [105, 3, 1, "", "__init__"], [105, 3, 1, "", "check_station_location_lat"], [105, 3, 1, "", "check_station_location_lon"], [105, 3, 1, "", "check_time_period"], [105, 3, 1, "", "get_test_ctx"], [105, 3, 1, "", "setup"], [105, 3, 1, "", "std_check"], [105, 3, 1, "", "std_check_in"], [105, 2, 1, "", "supported_ds"]], "compliance_checker.ioos.IOOSSOSDSCheck": [[106, 2, 1, "", "HIGH"], [106, 2, 1, "", "LOW"], [106, 2, 1, "", "MEDIUM"], [106, 3, 1, "", "__init__"], [106, 3, 1, "", "check_high"], [106, 3, 1, "", "check_recommended"], [106, 3, 1, "", "check_suggested"], [106, 3, 1, "", "get_test_ctx"], [106, 2, 1, "", "ns"], [106, 2, 1, "", "register_checker"], [106, 3, 1, "", "setup"], [106, 2, 1, "", "supported_ds"]], "compliance_checker.ioos.IOOSSOSGCCheck": [[107, 2, 1, "", "HIGH"], [107, 2, 1, "", "LOW"], [107, 2, 1, "", "MEDIUM"], [107, 3, 1, "", "__init__"], [107, 3, 1, "", "check_high"], [107, 3, 1, "", "check_recommended"], [107, 3, 1, "", "check_suggested"], [107, 3, 1, "", "get_test_ctx"], [107, 2, 1, "", "ns"], [107, 2, 1, "", "register_checker"], [107, 3, 1, "", "setup"], [107, 2, 1, "", "supported_ds"]], "compliance_checker.ioos.NamingAuthorityValidator": [[108, 3, 1, "", "__init__"], [108, 3, 1, "", "validate"], [108, 3, 1, "", "validate_type"], [108, 2, 1, "", "validator_fail_msg"], [108, 3, 1, "", "validator_func"]], "compliance_checker.runner": [[111, 1, 1, "", "ComplianceChecker"], [112, 4, 1, "", "stdout_redirector"]], "compliance_checker.runner.ComplianceChecker": [[111, 3, 1, "", "__init__"], [111, 3, 1, "", "check_errors"], [111, 3, 1, "", "html_output"], [111, 3, 1, "", "json_output"], [111, 3, 1, "", "run_checker"], [111, 3, 1, "", "stdout_output"]], "compliance_checker.suite": [[114, 1, 1, "", "CheckSuite"], [115, 4, 1, "", "extract_docstring_summary"]], "compliance_checker.suite.CheckSuite": [[114, 3, 1, "", "__init__"], [114, 3, 1, "", "add_plugin_args"], [114, 3, 1, "", "build_structure"], [114, 3, 1, "", "check_remote_netcdf"], [114, 3, 1, "", "checker_html_output"], [114, 2, 1, "", "checkers"], [114, 3, 1, "", "dict_output"], [114, 3, 1, "", "generate_dataset"], [114, 3, 1, "", "get_points"], [114, 3, 1, "", "html_output"], [114, 3, 1, "", "load_all_available_checkers"], [114, 3, 1, "", "load_dataset"], [114, 3, 1, "", "load_generated_checkers"], [114, 3, 1, "", "load_local_dataset"], [114, 3, 1, "", "load_remote_dataset"], [114, 3, 1, "", "passtree"], [114, 3, 1, "", "process_doc"], [114, 3, 1, "", "reasoning_routine"], [114, 3, 1, "", "run"], [114, 3, 1, "", "run_all"], [114, 3, 1, "", "scores"], [114, 3, 1, "", "serialize"], [114, 3, 1, "", "standard_output"], [114, 3, 1, "", "standard_output_generation"], [114, 2, 1, "", "templates_root"]], "compliance_checker.util": [[117, 4, 1, "", "dateparse"], [118, 4, 1, "", "datetime_is_iso"], [119, 4, 1, "", "kvp_convert"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"]}, "titleterms": {"api": [0, 1, 121], "frequent": 1, "ask": 1, "question": 1, "what": 1, "i": 1, "complianc": [1, 121], "checker": [1, 121], "doe": 1, "check": [1, 121], "can": 1, "test": [1, 121], "an": 1, "erddap": [1, 121], "dataset": [1, 121], "version": 1, "run": 1, "ioo": [1, 97, 121], "u": 1, "where": 1, "find": 1, "more": 1, "inform": 1, "about": 1, "disclaim": [1, 121], "acdd": [2, 121], "compliance_check": [2, 7, 30, 33, 97, 109, 110, 113, 116, 120], "acdd1_1check": 3, "acdd1_3check": 4, "acddbasecheck": 5, "acddnccheck": 6, "base": 7, "basecheck": 8, "basenccheck": 9, "basesosdscheck": 10, "basesosgccheck": 11, "emailvalid": 12, "genericfil": 13, "regexvalid": 14, "result": [15, 121], "testctx": 16, "urlvalid": 17, "validationobject": 18, "attr_check": 19, "check_ha": 20, "csv_splitter": 21, "fix_return_valu": 22, "get_namespac": 23, "maybe_get_global_attr": 24, "ratable_result": 25, "score_group": 26, "std_check": 27, "std_check_in": 28, "xpath_check": 29, "cf": [30, 121], "cf1_6check": 31, "cf1_7check": 32, "cfutil": 33, "attr_membership": 34, "coordinate_dimension_matrix": 35, "get_auxiliary_coordinate_vari": 36, "get_axis_map": 37, "get_axis_vari": 38, "get_bounds_vari": 39, "get_cell_boundary_map": 40, "get_cell_boundary_vari": 41, "get_climatology_vari": 42, "get_coordinate_vari": 43, "get_flag_vari": 44, "get_forecast_metadata_vari": 45, "get_geophysical_vari": 46, "get_grid_mapping_vari": 47, "get_instrument_vari": 48, "get_lat_vari": 49, "get_latitude_vari": 50, "get_lon_vari": 51, "get_longitude_vari": 52, "get_platform_vari": 53, "get_sea_nam": 54, "get_time_vari": [55, 56], "get_true_latitude_vari": 57, "get_true_longitude_vari": 58, "get_z_vari": [59, 60], "guess_feature_typ": 61, "isprofil": 62, "istimeseri": 63, "istimeseriesprofil": 64, "istrajectori": 65, "istrajectoryprofil": 66, "is_2d_regular_grid": 67, "is_2d_static_grid": 68, "is_3d_regular_grid": 69, "is_3d_static_grid": 70, "is_cf_trajectori": 71, "is_compression_coordin": 72, "is_coordinate_vari": 73, "is_dataset_valid_ragged_array_repr_featuretyp": 74, "is_dimensionless_standard_nam": 75, "is_geophys": 76, "is_mapped_grid": 77, "is_multi_timeseries_incomplet": 78, "is_multi_timeseries_orthogon": 79, "is_point": 80, "is_profile_incomplet": 81, "is_profile_orthogon": 82, "is_reduced_grid": 83, "is_single_trajectori": 84, "is_timeseri": 85, "is_timeseries_profile_incomplet": 86, "is_timeseries_profile_multi_ortho_tim": 87, "is_timeseries_profile_multi_st": 88, "is_timeseries_profile_ortho_depth": 89, "is_timeseries_profile_single_ortho_tim": 90, "is_timeseries_profile_single_st": 91, "is_trajectory_profile_incomplet": 92, "is_trajectory_profile_orthogon": 93, "is_unitless": 94, "is_variable_valid_ragged_array_repr_featuretyp": 95, "units_convert": 96, "ioos0_1check": 98, "ioos1_1check": 99, "ioos1_2check": 100, "ioos1_2_conventionsvalid": 101, "ioos1_2_platformidvalid": 102, "ioosbasecheck": 103, "ioosbasesoscheck": 104, "ioosnccheck": 105, "ioossosdscheck": 106, "ioossosgccheck": 107, "namingauthorityvalid": 108, "protocol": 109, "runner": 110, "compliancecheck": 111, "stdout_redirector": 112, "suit": 113, "checksuit": 114, "extract_docstring_summari": 115, "util": 116, "datepars": 117, "datetime_is_iso": 118, "kvp_convert": 119, "content": 120, "indic": 120, "tabl": [120, 121], "advic": 121, "data": 121, "provid": 121, "The": 121, "web": 121, "tool": 121, "usag": 121, "command": 121, "line": 121, "concept": 121, "terminologi": 121, "instal": 121, "exampl": 121, "local": 121, "file": 121, "against": 121, "1": 121, "6": 121, "remot": 121, "3": 121, "write": 121, "text": 121, "json": 121, "html": 121, "output": 121, "from": 121, "multipl": 121, "input": 121, "one": 121, "part": 121, "2": 121, "download": 121, "particular": 121, "standard": 121, "name": 121, "us": 121, "python": 121, "plug": 121, "Ins": 121, "current": 121, "releas": 121, "how": 121, "miscellan": 121, "acknowledg": 121, "contributor": 121}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"API": [[0, "api"], [121, "api"]], "Frequently Asked Questions": [[1, "frequently-asked-questions"]], "What is the Compliance Checker?": [[1, "what-is-the-compliance-checker"]], "What does the Compliance Checker check?": [[1, "what-does-the-compliance-checker-check"]], "Can I test an ERDDAP dataset with the Compliance Checker?": [[1, "can-i-test-an-erddap-dataset-with-the-compliance-checker"]], "What version of the Compliance Checker is run on compliance.ioos.us?": [[1, "what-version-of-the-compliance-checker-is-run-on-compliance-ioos-us"]], "Is there an API?": [[1, "is-there-an-api"]], "Where can I find more information about the Compliance Checker?": [[1, "where-can-i-find-more-information-about-the-compliance-checker"]], "Disclaimer": [[1, "disclaimer"], [121, "disclaimer"]], "Acdd (compliance_checker.acdd)": [[2, "module-compliance_checker.acdd"]], "ACDD1_1Check": [[3, "acdd1-1check"]], "ACDD1_3Check": [[4, "acdd1-3check"]], "ACDDBaseCheck": [[5, "acddbasecheck"]], "ACDDNCCheck": [[6, "acddnccheck"]], "Base (compliance_checker.base)": [[7, "module-compliance_checker.base"]], "BaseCheck": [[8, "basecheck"]], "BaseNCCheck": [[9, "basenccheck"]], "BaseSOSDSCheck": [[10, "basesosdscheck"]], "BaseSOSGCCheck": [[11, "basesosgccheck"]], "EmailValidator": [[12, "emailvalidator"]], "GenericFile": [[13, "genericfile"]], "RegexValidator": [[14, "regexvalidator"]], "Result": [[15, "result"]], "TestCtx": [[16, "testctx"]], "UrlValidator": [[17, "urlvalidator"]], "ValidationObject": [[18, "validationobject"]], "attr_check": [[19, "attr-check"]], "check_has": [[20, "check-has"]], "csv_splitter": [[21, "csv-splitter"]], "fix_return_value": [[22, "fix-return-value"]], "get_namespaces": [[23, "get-namespaces"]], "maybe_get_global_attr": [[24, "maybe-get-global-attr"]], "ratable_result": [[25, "ratable-result"]], "score_group": [[26, "score-group"]], "std_check": [[27, "std-check"]], "std_check_in": [[28, "std-check-in"]], "xpath_check": [[29, "xpath-check"]], "Cf (compliance_checker.cf)": [[30, "module-compliance_checker.cf"]], "CF1_6Check": [[31, "cf1-6check"]], "CF1_7Check": [[32, "cf1-7check"]], "Cfutil (compliance_checker.cfutil)": [[33, "module-compliance_checker.cfutil"]], "attr_membership": [[34, "attr-membership"]], "coordinate_dimension_matrix": [[35, "coordinate-dimension-matrix"]], "get_auxiliary_coordinate_variables": [[36, "get-auxiliary-coordinate-variables"]], "get_axis_map": [[37, "get-axis-map"]], "get_axis_variables": [[38, "get-axis-variables"]], "get_bounds_variables": [[39, "get-bounds-variables"]], "get_cell_boundary_map": [[40, "get-cell-boundary-map"]], "get_cell_boundary_variables": [[41, "get-cell-boundary-variables"]], "get_climatology_variable": [[42, "get-climatology-variable"]], "get_coordinate_variables": [[43, "get-coordinate-variables"]], "get_flag_variables": [[44, "get-flag-variables"]], "get_forecast_metadata_variables": [[45, "get-forecast-metadata-variables"]], "get_geophysical_variables": [[46, "get-geophysical-variables"]], "get_grid_mapping_variables": [[47, "get-grid-mapping-variables"]], "get_instrument_variables": [[48, "get-instrument-variables"]], "get_lat_variable": [[49, "get-lat-variable"]], "get_latitude_variables": [[50, "get-latitude-variables"]], "get_lon_variable": [[51, "get-lon-variable"]], "get_longitude_variables": [[52, "get-longitude-variables"]], "get_platform_variables": [[53, "get-platform-variables"]], "get_sea_names": [[54, "get-sea-names"]], "get_time_variable": [[55, "get-time-variable"]], "get_time_variables": [[56, "get-time-variables"]], "get_true_latitude_variables": [[57, "get-true-latitude-variables"]], "get_true_longitude_variables": [[58, "get-true-longitude-variables"]], "get_z_variable": [[59, "get-z-variable"]], "get_z_variables": [[60, "get-z-variables"]], "guess_feature_type": [[61, "guess-feature-type"]], "isProfile": [[62, "isprofile"]], "isTimeSeries": [[63, "istimeseries"]], "isTimeSeriesProfile": [[64, "istimeseriesprofile"]], "isTrajectory": [[65, "istrajectory"]], "isTrajectoryProfile": [[66, "istrajectoryprofile"]], "is_2d_regular_grid": [[67, "is-2d-regular-grid"]], "is_2d_static_grid": [[68, "is-2d-static-grid"]], "is_3d_regular_grid": [[69, "is-3d-regular-grid"]], "is_3d_static_grid": [[70, "is-3d-static-grid"]], "is_cf_trajectory": [[71, "is-cf-trajectory"]], "is_compression_coordinate": [[72, "is-compression-coordinate"]], "is_coordinate_variable": [[73, "is-coordinate-variable"]], "is_dataset_valid_ragged_array_repr_featureType": [[74, "is-dataset-valid-ragged-array-repr-featuretype"]], "is_dimensionless_standard_name": [[75, "is-dimensionless-standard-name"]], "is_geophysical": [[76, "is-geophysical"]], "is_mapped_grid": [[77, "is-mapped-grid"]], "is_multi_timeseries_incomplete": [[78, "is-multi-timeseries-incomplete"]], "is_multi_timeseries_orthogonal": [[79, "is-multi-timeseries-orthogonal"]], "is_point": [[80, "is-point"]], "is_profile_incomplete": [[81, "is-profile-incomplete"]], "is_profile_orthogonal": [[82, "is-profile-orthogonal"]], "is_reduced_grid": [[83, "is-reduced-grid"]], "is_single_trajectory": [[84, "is-single-trajectory"]], "is_timeseries": [[85, "is-timeseries"]], "is_timeseries_profile_incomplete": [[86, "is-timeseries-profile-incomplete"]], "is_timeseries_profile_multi_ortho_time": [[87, "is-timeseries-profile-multi-ortho-time"]], "is_timeseries_profile_multi_station": [[88, "is-timeseries-profile-multi-station"]], "is_timeseries_profile_ortho_depth": [[89, "is-timeseries-profile-ortho-depth"]], "is_timeseries_profile_single_ortho_time": [[90, "is-timeseries-profile-single-ortho-time"]], "is_timeseries_profile_single_station": [[91, "is-timeseries-profile-single-station"]], "is_trajectory_profile_incomplete": [[92, "is-trajectory-profile-incomplete"]], "is_trajectory_profile_orthogonal": [[93, "is-trajectory-profile-orthogonal"]], "is_unitless": [[94, "is-unitless"]], "is_variable_valid_ragged_array_repr_featureType": [[95, "is-variable-valid-ragged-array-repr-featuretype"]], "units_convertible": [[96, "units-convertible"]], "Ioos (compliance_checker.ioos)": [[97, "module-compliance_checker.ioos"]], "IOOS0_1Check": [[98, "ioos0-1check"]], "IOOS1_1Check": [[99, "ioos1-1check"]], "IOOS1_2Check": [[100, "ioos1-2check"]], "IOOS1_2_ConventionsValidator": [[101, "ioos1-2-conventionsvalidator"]], "IOOS1_2_PlatformIDValidator": [[102, "ioos1-2-platformidvalidator"]], "IOOSBaseCheck": [[103, "ioosbasecheck"]], "IOOSBaseSOSCheck": [[104, "ioosbasesoscheck"]], "IOOSNCCheck": [[105, "ioosnccheck"]], "IOOSSOSDSCheck": [[106, "ioossosdscheck"]], "IOOSSOSGCCheck": [[107, "ioossosgccheck"]], "NamingAuthorityValidator": [[108, "namingauthorityvalidator"]], "Protocols (compliance_checker.protocols)": [[109, "module-compliance_checker.protocols"]], "Runner (compliance_checker.runner)": [[110, "module-compliance_checker.runner"]], "ComplianceChecker": [[111, "compliancechecker"]], "stdout_redirector": [[112, "stdout-redirector"]], "Suite (compliance_checker.suite)": [[113, "module-compliance_checker.suite"]], "CheckSuite": [[114, "checksuite"]], "extract_docstring_summary": [[115, "extract-docstring-summary"]], "Util (compliance_checker.util)": [[116, "module-compliance_checker.util"]], "dateparse": [[117, "dateparse"]], "datetime_is_iso": [[118, "datetime-is-iso"]], "kvp_convert": [[119, "kvp-convert"]], "compliance_checker": [[120, "compliance-checker"]], "Contents:": [[120, null]], "Indices and tables": [[120, "indices-and-tables"]], "IOOS Compliance Checker": [[121, "ioos-compliance-checker"]], "Advice to data providers": [[121, "advice-to-data-providers"]], "The Compliance Checker Web Tool": [[121, "the-compliance-checker-web-tool"]], "Usage": [[121, "usage"]], "The Compliance Checker Command Line Tool": [[121, "the-compliance-checker-command-line-tool"]], "Concepts & Terminology": [[121, "concepts-terminology"]], "Installation": [[121, "installation"]], "Command Line Usage": [[121, "command-line-usage"]], "Examples": [[121, "examples"]], "Check a local file against CF 1.6": [[121, "check-a-local-file-against-cf-1-6"]], "Check a remote file against ACDD 1.3": [[121, "check-a-remote-file-against-acdd-1-3"]], "Checking against remote ERDDAP Datasets": [[121, "checking-against-remote-erddap-datasets"]], "Write results to text file": [[121, "write-results-to-text-file"]], "Write results to JSON file": [[121, "write-results-to-json-file"]], "Write results to HTML file": [[121, "write-results-to-html-file"]], "Output text from multiple input files to one output file": [[121, "output-text-from-multiple-input-files-to-one-output-file"]], "Output html and text files from multiple input files (part 1)": [[121, "output-html-and-text-files-from-multiple-input-files-part-1"]], "Output html and text files from multiple input files (part 2)": [[121, "output-html-and-text-files-from-multiple-input-files-part-2"]], "Download a particular CF standard names table for use in the test": [[121, "download-a-particular-cf-standard-names-table-for-use-in-the-test"]], "Python Usage": [[121, "python-usage"]], "Compliance Checker Plug-Ins": [[121, "compliance-checker-plug-ins"]], "Current Plug-in Releases:": [[121, "current-plug-in-releases"]], "Examples of how to use the Plug-Ins": [[121, "examples-of-how-to-use-the-plug-ins"]], "Miscellaneous/Acknowledgements": [[121, "miscellaneous-acknowledgements"]], "Contributors": [[121, "contributors"]]}, "indexentries": {"compliance_checker.acdd": [[2, "module-compliance_checker.acdd"]], "module": [[2, "module-compliance_checker.acdd"], [7, "module-compliance_checker.base"], [30, "module-compliance_checker.cf"], [33, "module-compliance_checker.cfutil"], [97, "module-compliance_checker.ioos"], [109, "module-compliance_checker.protocols"], [110, "module-compliance_checker.runner"], [113, "module-compliance_checker.suite"], [116, "module-compliance_checker.util"]], "acdd1_1check (class in compliance_checker.acdd)": [[3, "compliance_checker.acdd.ACDD1_1Check"]], "high (compliance_checker.acdd.acdd1_1check attribute)": [[3, "compliance_checker.acdd.ACDD1_1Check.HIGH"]], "low (compliance_checker.acdd.acdd1_1check attribute)": [[3, "compliance_checker.acdd.ACDD1_1Check.LOW"]], "medium (compliance_checker.acdd.acdd1_1check attribute)": [[3, "compliance_checker.acdd.ACDD1_1Check.MEDIUM"]], "__init__() (compliance_checker.acdd.acdd1_1check method)": [[3, "compliance_checker.acdd.ACDD1_1Check.__init__"]], "check_acknowledgment() (compliance_checker.acdd.acdd1_1check method)": [[3, "compliance_checker.acdd.ACDD1_1Check.check_acknowledgment"]], "check_high() (compliance_checker.acdd.acdd1_1check method)": [[3, "compliance_checker.acdd.ACDD1_1Check.check_high"]], "check_lat_extents() (compliance_checker.acdd.acdd1_1check method)": [[3, "compliance_checker.acdd.ACDD1_1Check.check_lat_extents"]], "check_lon_extents() (compliance_checker.acdd.acdd1_1check method)": [[3, "compliance_checker.acdd.ACDD1_1Check.check_lon_extents"]], "check_recommended() (compliance_checker.acdd.acdd1_1check method)": [[3, "compliance_checker.acdd.ACDD1_1Check.check_recommended"]], "check_suggested() (compliance_checker.acdd.acdd1_1check method)": [[3, "compliance_checker.acdd.ACDD1_1Check.check_suggested"]], "check_time_extents() (compliance_checker.acdd.acdd1_1check method)": [[3, "compliance_checker.acdd.ACDD1_1Check.check_time_extents"]], "check_var_long_name() (compliance_checker.acdd.acdd1_1check method)": [[3, "compliance_checker.acdd.ACDD1_1Check.check_var_long_name"]], "check_var_standard_name() (compliance_checker.acdd.acdd1_1check method)": [[3, "compliance_checker.acdd.ACDD1_1Check.check_var_standard_name"]], "check_var_units() (compliance_checker.acdd.acdd1_1check method)": [[3, "compliance_checker.acdd.ACDD1_1Check.check_var_units"]], "check_vertical_extents() (compliance_checker.acdd.acdd1_1check method)": [[3, "compliance_checker.acdd.ACDD1_1Check.check_vertical_extents"]], "get_applicable_variables() (compliance_checker.acdd.acdd1_1check method)": [[3, "compliance_checker.acdd.ACDD1_1Check.get_applicable_variables"]], "get_test_ctx() (compliance_checker.acdd.acdd1_1check method)": [[3, "compliance_checker.acdd.ACDD1_1Check.get_test_ctx"]], "register_checker (compliance_checker.acdd.acdd1_1check attribute)": [[3, "compliance_checker.acdd.ACDD1_1Check.register_checker"]], "setup() (compliance_checker.acdd.acdd1_1check method)": [[3, "compliance_checker.acdd.ACDD1_1Check.setup"]], "std_check() (compliance_checker.acdd.acdd1_1check class method)": [[3, "compliance_checker.acdd.ACDD1_1Check.std_check"]], "std_check_in() (compliance_checker.acdd.acdd1_1check class method)": [[3, "compliance_checker.acdd.ACDD1_1Check.std_check_in"]], "supported_ds (compliance_checker.acdd.acdd1_1check attribute)": [[3, "compliance_checker.acdd.ACDD1_1Check.supported_ds"]], "verify_convention_version() (compliance_checker.acdd.acdd1_1check method)": [[3, "compliance_checker.acdd.ACDD1_1Check.verify_convention_version"]], "verify_geospatial_bounds() (compliance_checker.acdd.acdd1_1check method)": [[3, "compliance_checker.acdd.ACDD1_1Check.verify_geospatial_bounds"]], "acdd1_3check (class in compliance_checker.acdd)": [[4, "compliance_checker.acdd.ACDD1_3Check"]], "high (compliance_checker.acdd.acdd1_3check attribute)": [[4, "compliance_checker.acdd.ACDD1_3Check.HIGH"]], "low (compliance_checker.acdd.acdd1_3check attribute)": [[4, "compliance_checker.acdd.ACDD1_3Check.LOW"]], "medium (compliance_checker.acdd.acdd1_3check attribute)": [[4, "compliance_checker.acdd.ACDD1_3Check.MEDIUM"]], "__init__() (compliance_checker.acdd.acdd1_3check method)": [[4, "compliance_checker.acdd.ACDD1_3Check.__init__"]], "check_acknowledgment() (compliance_checker.acdd.acdd1_3check method)": [[4, "compliance_checker.acdd.ACDD1_3Check.check_acknowledgment"]], "check_high() (compliance_checker.acdd.acdd1_3check method)": [[4, "compliance_checker.acdd.ACDD1_3Check.check_high"]], "check_id_has_no_blanks() (compliance_checker.acdd.acdd1_3check method)": [[4, "compliance_checker.acdd.ACDD1_3Check.check_id_has_no_blanks"]], "check_lat_extents() (compliance_checker.acdd.acdd1_3check method)": [[4, "compliance_checker.acdd.ACDD1_3Check.check_lat_extents"]], "check_lon_extents() (compliance_checker.acdd.acdd1_3check method)": [[4, "compliance_checker.acdd.ACDD1_3Check.check_lon_extents"]], "check_metadata_link() (compliance_checker.acdd.acdd1_3check method)": [[4, "compliance_checker.acdd.ACDD1_3Check.check_metadata_link"]], "check_recommended() (compliance_checker.acdd.acdd1_3check method)": [[4, "compliance_checker.acdd.ACDD1_3Check.check_recommended"]], "check_suggested() (compliance_checker.acdd.acdd1_3check method)": [[4, "compliance_checker.acdd.ACDD1_3Check.check_suggested"]], "check_time_extents() (compliance_checker.acdd.acdd1_3check method)": [[4, "compliance_checker.acdd.ACDD1_3Check.check_time_extents"]], "check_var_coverage_content_type() (compliance_checker.acdd.acdd1_3check method)": [[4, "compliance_checker.acdd.ACDD1_3Check.check_var_coverage_content_type"]], "check_var_long_name() (compliance_checker.acdd.acdd1_3check method)": [[4, "compliance_checker.acdd.ACDD1_3Check.check_var_long_name"]], "check_var_standard_name() (compliance_checker.acdd.acdd1_3check method)": [[4, "compliance_checker.acdd.ACDD1_3Check.check_var_standard_name"]], "check_var_units() (compliance_checker.acdd.acdd1_3check method)": [[4, "compliance_checker.acdd.ACDD1_3Check.check_var_units"]], "check_vertical_extents() (compliance_checker.acdd.acdd1_3check method)": [[4, "compliance_checker.acdd.ACDD1_3Check.check_vertical_extents"]], "get_applicable_variables() (compliance_checker.acdd.acdd1_3check method)": [[4, "compliance_checker.acdd.ACDD1_3Check.get_applicable_variables"]], "get_test_ctx() (compliance_checker.acdd.acdd1_3check method)": [[4, "compliance_checker.acdd.ACDD1_3Check.get_test_ctx"]], "register_checker (compliance_checker.acdd.acdd1_3check attribute)": [[4, "compliance_checker.acdd.ACDD1_3Check.register_checker"]], "setup() (compliance_checker.acdd.acdd1_3check method)": [[4, "compliance_checker.acdd.ACDD1_3Check.setup"]], "std_check() (compliance_checker.acdd.acdd1_3check class method)": [[4, "compliance_checker.acdd.ACDD1_3Check.std_check"]], "std_check_in() (compliance_checker.acdd.acdd1_3check class method)": [[4, "compliance_checker.acdd.ACDD1_3Check.std_check_in"]], "supported_ds (compliance_checker.acdd.acdd1_3check attribute)": [[4, "compliance_checker.acdd.ACDD1_3Check.supported_ds"]], "verify_convention_version() (compliance_checker.acdd.acdd1_3check method)": [[4, "compliance_checker.acdd.ACDD1_3Check.verify_convention_version"]], "verify_geospatial_bounds() (compliance_checker.acdd.acdd1_3check method)": [[4, "compliance_checker.acdd.ACDD1_3Check.verify_geospatial_bounds"]], "acddbasecheck (class in compliance_checker.acdd)": [[5, "compliance_checker.acdd.ACDDBaseCheck"]], "high (compliance_checker.acdd.acddbasecheck attribute)": [[5, "compliance_checker.acdd.ACDDBaseCheck.HIGH"]], "low (compliance_checker.acdd.acddbasecheck attribute)": [[5, "compliance_checker.acdd.ACDDBaseCheck.LOW"]], "medium (compliance_checker.acdd.acddbasecheck attribute)": [[5, "compliance_checker.acdd.ACDDBaseCheck.MEDIUM"]], "__init__() (compliance_checker.acdd.acddbasecheck method)": [[5, "compliance_checker.acdd.ACDDBaseCheck.__init__"]], "check_acknowledgment() (compliance_checker.acdd.acddbasecheck method)": [[5, "compliance_checker.acdd.ACDDBaseCheck.check_acknowledgment"]], "check_high() (compliance_checker.acdd.acddbasecheck method)": [[5, "compliance_checker.acdd.ACDDBaseCheck.check_high"]], "check_lat_extents() (compliance_checker.acdd.acddbasecheck method)": [[5, "compliance_checker.acdd.ACDDBaseCheck.check_lat_extents"]], "check_lon_extents() (compliance_checker.acdd.acddbasecheck method)": [[5, "compliance_checker.acdd.ACDDBaseCheck.check_lon_extents"]], "check_recommended() (compliance_checker.acdd.acddbasecheck method)": [[5, "compliance_checker.acdd.ACDDBaseCheck.check_recommended"]], "check_suggested() (compliance_checker.acdd.acddbasecheck method)": [[5, "compliance_checker.acdd.ACDDBaseCheck.check_suggested"]], "check_time_extents() (compliance_checker.acdd.acddbasecheck method)": [[5, "compliance_checker.acdd.ACDDBaseCheck.check_time_extents"]], "check_var_long_name() (compliance_checker.acdd.acddbasecheck method)": [[5, "compliance_checker.acdd.ACDDBaseCheck.check_var_long_name"]], "check_var_standard_name() (compliance_checker.acdd.acddbasecheck method)": [[5, "compliance_checker.acdd.ACDDBaseCheck.check_var_standard_name"]], "check_var_units() (compliance_checker.acdd.acddbasecheck method)": [[5, "compliance_checker.acdd.ACDDBaseCheck.check_var_units"]], "check_vertical_extents() (compliance_checker.acdd.acddbasecheck method)": [[5, "compliance_checker.acdd.ACDDBaseCheck.check_vertical_extents"]], "get_applicable_variables() (compliance_checker.acdd.acddbasecheck method)": [[5, "compliance_checker.acdd.ACDDBaseCheck.get_applicable_variables"]], "get_test_ctx() (compliance_checker.acdd.acddbasecheck method)": [[5, "compliance_checker.acdd.ACDDBaseCheck.get_test_ctx"]], "setup() (compliance_checker.acdd.acddbasecheck method)": [[5, "compliance_checker.acdd.ACDDBaseCheck.setup"]], "supported_ds (compliance_checker.acdd.acddbasecheck attribute)": [[5, "compliance_checker.acdd.ACDDBaseCheck.supported_ds"]], "verify_convention_version() (compliance_checker.acdd.acddbasecheck method)": [[5, "compliance_checker.acdd.ACDDBaseCheck.verify_convention_version"]], "verify_geospatial_bounds() (compliance_checker.acdd.acddbasecheck method)": [[5, "compliance_checker.acdd.ACDDBaseCheck.verify_geospatial_bounds"]], "acddnccheck (class in compliance_checker.acdd)": [[6, "compliance_checker.acdd.ACDDNCCheck"]], "high (compliance_checker.acdd.acddnccheck attribute)": [[6, "compliance_checker.acdd.ACDDNCCheck.HIGH"]], "low (compliance_checker.acdd.acddnccheck attribute)": [[6, "compliance_checker.acdd.ACDDNCCheck.LOW"]], "medium (compliance_checker.acdd.acddnccheck attribute)": [[6, "compliance_checker.acdd.ACDDNCCheck.MEDIUM"]], "__init__() (compliance_checker.acdd.acddnccheck method)": [[6, "compliance_checker.acdd.ACDDNCCheck.__init__"]], "check_acknowledgment() (compliance_checker.acdd.acddnccheck method)": [[6, "compliance_checker.acdd.ACDDNCCheck.check_acknowledgment"]], "check_high() (compliance_checker.acdd.acddnccheck method)": [[6, "compliance_checker.acdd.ACDDNCCheck.check_high"]], "check_lat_extents() (compliance_checker.acdd.acddnccheck method)": [[6, "compliance_checker.acdd.ACDDNCCheck.check_lat_extents"]], "check_lon_extents() (compliance_checker.acdd.acddnccheck method)": [[6, "compliance_checker.acdd.ACDDNCCheck.check_lon_extents"]], "check_recommended() (compliance_checker.acdd.acddnccheck method)": [[6, "compliance_checker.acdd.ACDDNCCheck.check_recommended"]], "check_suggested() (compliance_checker.acdd.acddnccheck method)": [[6, "compliance_checker.acdd.ACDDNCCheck.check_suggested"]], "check_time_extents() (compliance_checker.acdd.acddnccheck method)": [[6, "compliance_checker.acdd.ACDDNCCheck.check_time_extents"]], "check_var_long_name() (compliance_checker.acdd.acddnccheck method)": [[6, "compliance_checker.acdd.ACDDNCCheck.check_var_long_name"]], "check_var_standard_name() (compliance_checker.acdd.acddnccheck method)": [[6, "compliance_checker.acdd.ACDDNCCheck.check_var_standard_name"]], "check_var_units() (compliance_checker.acdd.acddnccheck method)": [[6, "compliance_checker.acdd.ACDDNCCheck.check_var_units"]], "check_vertical_extents() (compliance_checker.acdd.acddnccheck method)": [[6, "compliance_checker.acdd.ACDDNCCheck.check_vertical_extents"]], "get_applicable_variables() (compliance_checker.acdd.acddnccheck method)": [[6, "compliance_checker.acdd.ACDDNCCheck.get_applicable_variables"]], "get_test_ctx() (compliance_checker.acdd.acddnccheck method)": [[6, "compliance_checker.acdd.ACDDNCCheck.get_test_ctx"]], "setup() (compliance_checker.acdd.acddnccheck method)": [[6, "compliance_checker.acdd.ACDDNCCheck.setup"]], "std_check() (compliance_checker.acdd.acddnccheck class method)": [[6, "compliance_checker.acdd.ACDDNCCheck.std_check"]], "std_check_in() (compliance_checker.acdd.acddnccheck class method)": [[6, "compliance_checker.acdd.ACDDNCCheck.std_check_in"]], "supported_ds (compliance_checker.acdd.acddnccheck attribute)": [[6, "compliance_checker.acdd.ACDDNCCheck.supported_ds"]], "verify_convention_version() (compliance_checker.acdd.acddnccheck method)": [[6, "compliance_checker.acdd.ACDDNCCheck.verify_convention_version"]], "verify_geospatial_bounds() (compliance_checker.acdd.acddnccheck method)": [[6, "compliance_checker.acdd.ACDDNCCheck.verify_geospatial_bounds"]], "compliance_checker.base": [[7, "module-compliance_checker.base"]], "basecheck (class in compliance_checker.base)": [[8, "compliance_checker.base.BaseCheck"]], "high (compliance_checker.base.basecheck attribute)": [[8, "compliance_checker.base.BaseCheck.HIGH"]], "low (compliance_checker.base.basecheck attribute)": [[8, "compliance_checker.base.BaseCheck.LOW"]], "medium (compliance_checker.base.basecheck attribute)": [[8, "compliance_checker.base.BaseCheck.MEDIUM"]], "__init__() (compliance_checker.base.basecheck method)": [[8, "compliance_checker.base.BaseCheck.__init__"]], "get_test_ctx() (compliance_checker.base.basecheck method)": [[8, "compliance_checker.base.BaseCheck.get_test_ctx"]], "setup() (compliance_checker.base.basecheck method)": [[8, "compliance_checker.base.BaseCheck.setup"]], "supported_ds (compliance_checker.base.basecheck attribute)": [[8, "compliance_checker.base.BaseCheck.supported_ds"]], "basenccheck (class in compliance_checker.base)": [[9, "compliance_checker.base.BaseNCCheck"]], "__init__() (compliance_checker.base.basenccheck method)": [[9, "compliance_checker.base.BaseNCCheck.__init__"]], "std_check() (compliance_checker.base.basenccheck class method)": [[9, "compliance_checker.base.BaseNCCheck.std_check"]], "std_check_in() (compliance_checker.base.basenccheck class method)": [[9, "compliance_checker.base.BaseNCCheck.std_check_in"]], "supported_ds (compliance_checker.base.basenccheck attribute)": [[9, "compliance_checker.base.BaseNCCheck.supported_ds"]], "basesosdscheck (class in compliance_checker.base)": [[10, "compliance_checker.base.BaseSOSDSCheck"]], "__init__() (compliance_checker.base.basesosdscheck method)": [[10, "compliance_checker.base.BaseSOSDSCheck.__init__"]], "supported_ds (compliance_checker.base.basesosdscheck attribute)": [[10, "compliance_checker.base.BaseSOSDSCheck.supported_ds"]], "basesosgccheck (class in compliance_checker.base)": [[11, "compliance_checker.base.BaseSOSGCCheck"]], "__init__() (compliance_checker.base.basesosgccheck method)": [[11, "compliance_checker.base.BaseSOSGCCheck.__init__"]], "supported_ds (compliance_checker.base.basesosgccheck attribute)": [[11, "compliance_checker.base.BaseSOSGCCheck.supported_ds"]], "emailvalidator (class in compliance_checker.base)": [[12, "compliance_checker.base.EmailValidator"]], "__init__() (compliance_checker.base.emailvalidator method)": [[12, "compliance_checker.base.EmailValidator.__init__"]], "validate() (compliance_checker.base.emailvalidator method)": [[12, "compliance_checker.base.EmailValidator.validate"]], "validate_type() (compliance_checker.base.emailvalidator method)": [[12, "compliance_checker.base.EmailValidator.validate_type"]], "validator_fail_msg (compliance_checker.base.emailvalidator attribute)": [[12, "compliance_checker.base.EmailValidator.validator_fail_msg"]], "validator_func() (compliance_checker.base.emailvalidator method)": [[12, "compliance_checker.base.EmailValidator.validator_func"]], "genericfile (class in compliance_checker.base)": [[13, "compliance_checker.base.GenericFile"]], "__init__() (compliance_checker.base.genericfile method)": [[13, "compliance_checker.base.GenericFile.__init__"]], "filepath() (compliance_checker.base.genericfile method)": [[13, "compliance_checker.base.GenericFile.filepath"]], "regexvalidator (class in compliance_checker.base)": [[14, "compliance_checker.base.RegexValidator"]], "__init__() (compliance_checker.base.regexvalidator method)": [[14, "compliance_checker.base.RegexValidator.__init__"]], "validate() (compliance_checker.base.regexvalidator method)": [[14, "compliance_checker.base.RegexValidator.validate"]], "validate_type() (compliance_checker.base.regexvalidator method)": [[14, "compliance_checker.base.RegexValidator.validate_type"]], "validator_fail_msg (compliance_checker.base.regexvalidator attribute)": [[14, "compliance_checker.base.RegexValidator.validator_fail_msg"]], "validator_func() (compliance_checker.base.regexvalidator method)": [[14, "compliance_checker.base.RegexValidator.validator_func"]], "validator_regex (compliance_checker.base.regexvalidator attribute)": [[14, "compliance_checker.base.RegexValidator.validator_regex"]], "result (class in compliance_checker.base)": [[15, "compliance_checker.base.Result"]], "__init__() (compliance_checker.base.result method)": [[15, "compliance_checker.base.Result.__init__"]], "serialize() (compliance_checker.base.result method)": [[15, "compliance_checker.base.Result.serialize"]], "testctx (class in compliance_checker.base)": [[16, "compliance_checker.base.TestCtx"]], "__init__() (compliance_checker.base.testctx method)": [[16, "compliance_checker.base.TestCtx.__init__"]], "add_failure() (compliance_checker.base.testctx method)": [[16, "compliance_checker.base.TestCtx.add_failure"]], "add_pass() (compliance_checker.base.testctx method)": [[16, "compliance_checker.base.TestCtx.add_pass"]], "assert_true() (compliance_checker.base.testctx method)": [[16, "compliance_checker.base.TestCtx.assert_true"]], "to_result() (compliance_checker.base.testctx method)": [[16, "compliance_checker.base.TestCtx.to_result"]], "urlvalidator (class in compliance_checker.base)": [[17, "compliance_checker.base.UrlValidator"]], "__init__() (compliance_checker.base.urlvalidator method)": [[17, "compliance_checker.base.UrlValidator.__init__"]], "validate() (compliance_checker.base.urlvalidator method)": [[17, "compliance_checker.base.UrlValidator.validate"]], "validate_type() (compliance_checker.base.urlvalidator method)": [[17, "compliance_checker.base.UrlValidator.validate_type"]], "validator_fail_msg (compliance_checker.base.urlvalidator attribute)": [[17, "compliance_checker.base.UrlValidator.validator_fail_msg"]], "validator_func() (compliance_checker.base.urlvalidator method)": [[17, "compliance_checker.base.UrlValidator.validator_func"]], "validationobject (class in compliance_checker.base)": [[18, "compliance_checker.base.ValidationObject"]], "__init__() (compliance_checker.base.validationobject method)": [[18, "compliance_checker.base.ValidationObject.__init__"]], "expected_type (compliance_checker.base.validationobject attribute)": [[18, "compliance_checker.base.ValidationObject.expected_type"]], "validate() (compliance_checker.base.validationobject method)": [[18, "compliance_checker.base.ValidationObject.validate"]], "validate_type() (compliance_checker.base.validationobject method)": [[18, "compliance_checker.base.ValidationObject.validate_type"]], "validator_fail_msg (compliance_checker.base.validationobject attribute)": [[18, "compliance_checker.base.ValidationObject.validator_fail_msg"]], "validator_func() (compliance_checker.base.validationobject method)": [[18, "compliance_checker.base.ValidationObject.validator_func"]], "attr_check() (in module compliance_checker.base)": [[19, "compliance_checker.base.attr_check"]], "check_has() (in module compliance_checker.base)": [[20, "compliance_checker.base.check_has"]], "csv_splitter() (in module compliance_checker.base)": [[21, "compliance_checker.base.csv_splitter"]], "fix_return_value() (in module compliance_checker.base)": [[22, "compliance_checker.base.fix_return_value"]], "get_namespaces() (in module compliance_checker.base)": [[23, "compliance_checker.base.get_namespaces"]], "maybe_get_global_attr() (in module compliance_checker.base)": [[24, "compliance_checker.base.maybe_get_global_attr"]], "ratable_result() (in module compliance_checker.base)": [[25, "compliance_checker.base.ratable_result"]], "score_group() (in module compliance_checker.base)": [[26, "compliance_checker.base.score_group"]], "std_check() (in module compliance_checker.base)": [[27, "compliance_checker.base.std_check"]], "std_check_in() (in module compliance_checker.base)": [[28, "compliance_checker.base.std_check_in"]], "xpath_check() (in module compliance_checker.base)": [[29, "compliance_checker.base.xpath_check"]], "compliance_checker.cf": [[30, "module-compliance_checker.cf"]], "cf1_6check (class in compliance_checker.cf)": [[31, "compliance_checker.cf.CF1_6Check"]], "high (compliance_checker.cf.cf1_6check attribute)": [[31, "compliance_checker.cf.CF1_6Check.HIGH"]], "low (compliance_checker.cf.cf1_6check attribute)": [[31, "compliance_checker.cf.CF1_6Check.LOW"]], "medium (compliance_checker.cf.cf1_6check attribute)": [[31, "compliance_checker.cf.CF1_6Check.MEDIUM"]], "__init__() (compliance_checker.cf.cf1_6check method)": [[31, "compliance_checker.cf.CF1_6Check.__init__"]], "appendix_a (compliance_checker.cf.cf1_6check attribute)": [[31, "compliance_checker.cf.CF1_6Check.appendix_a"]], "appendix_d_parametric_coords (compliance_checker.cf.cf1_6check attribute)": [[31, "compliance_checker.cf.CF1_6Check.appendix_d_parametric_coords"]], "check_add_offset_scale_factor_type() (compliance_checker.cf.cf1_6check method)": [[31, "compliance_checker.cf.CF1_6Check.check_add_offset_scale_factor_type"]], "check_ancillary_variables() (compliance_checker.cf.cf1_6check method)": [[31, "compliance_checker.cf.CF1_6Check.check_ancillary_variables"]], "check_appendix_a() (compliance_checker.cf.cf1_6check method)": [[31, "compliance_checker.cf.CF1_6Check.check_appendix_a"]], "check_aux_coordinates() (compliance_checker.cf.cf1_6check method)": [[31, "compliance_checker.cf.CF1_6Check.check_aux_coordinates"]], "check_calendar() (compliance_checker.cf.cf1_6check method)": [[31, "compliance_checker.cf.CF1_6Check.check_calendar"]], "check_cell_boundaries() (compliance_checker.cf.cf1_6check method)": [[31, "compliance_checker.cf.CF1_6Check.check_cell_boundaries"]], "check_cell_measures() (compliance_checker.cf.cf1_6check method)": [[31, "compliance_checker.cf.CF1_6Check.check_cell_measures"]], "check_cell_methods() (compliance_checker.cf.cf1_6check method)": [[31, "compliance_checker.cf.CF1_6Check.check_cell_methods"]], "check_cf_role() (compliance_checker.cf.cf1_6check method)": [[31, "compliance_checker.cf.CF1_6Check.check_cf_role"]], "check_child_attr_data_types() (compliance_checker.cf.cf1_6check method)": [[31, "compliance_checker.cf.CF1_6Check.check_child_attr_data_types"]], "check_climatological_statistics() (compliance_checker.cf.cf1_6check method)": [[31, "compliance_checker.cf.CF1_6Check.check_climatological_statistics"]], "check_compression_gathering() (compliance_checker.cf.cf1_6check method)": [[31, "compliance_checker.cf.CF1_6Check.check_compression_gathering"]], "check_convention_globals() (compliance_checker.cf.cf1_6check method)": [[31, "compliance_checker.cf.CF1_6Check.check_convention_globals"]], "check_convention_possibly_var_attrs() (compliance_checker.cf.cf1_6check method)": [[31, "compliance_checker.cf.CF1_6Check.check_convention_possibly_var_attrs"]], "check_conventions_version() (compliance_checker.cf.cf1_6check method)": [[31, "compliance_checker.cf.CF1_6Check.check_conventions_version"]], "check_coordinate_types() (compliance_checker.cf.cf1_6check method)": [[31, "compliance_checker.cf.CF1_6Check.check_coordinate_types"]], "check_coordinate_variables_strict_monotonicity() (compliance_checker.cf.cf1_6check method)": [[31, "compliance_checker.cf.CF1_6Check.check_coordinate_variables_strict_monotonicity"]], "check_data_types() (compliance_checker.cf.cf1_6check method)": [[31, "compliance_checker.cf.CF1_6Check.check_data_types"]], "check_dimension_names() (compliance_checker.cf.cf1_6check method)": [[31, "compliance_checker.cf.CF1_6Check.check_dimension_names"]], "check_dimension_order() (compliance_checker.cf.cf1_6check method)": [[31, "compliance_checker.cf.CF1_6Check.check_dimension_order"]], "check_dimensional_vertical_coordinate() (compliance_checker.cf.cf1_6check method)": [[31, "compliance_checker.cf.CF1_6Check.check_dimensional_vertical_coordinate"]], "check_dimensionless_vertical_coordinates() (compliance_checker.cf.cf1_6check method)": [[31, "compliance_checker.cf.CF1_6Check.check_dimensionless_vertical_coordinates"]], "check_duplicate_axis() (compliance_checker.cf.cf1_6check method)": [[31, "compliance_checker.cf.CF1_6Check.check_duplicate_axis"]], "check_feature_type() (compliance_checker.cf.cf1_6check method)": [[31, "compliance_checker.cf.CF1_6Check.check_feature_type"]], "check_filename() (compliance_checker.cf.cf1_6check method)": [[31, "compliance_checker.cf.CF1_6Check.check_filename"]], "check_fill_value_equal_missing_value() (compliance_checker.cf.cf1_6check method)": [[31, "compliance_checker.cf.CF1_6Check.check_fill_value_equal_missing_value"]], "check_fill_value_outside_valid_range() (compliance_checker.cf.cf1_6check method)": [[31, "compliance_checker.cf.CF1_6Check.check_fill_value_outside_valid_range"]], "check_flags() (compliance_checker.cf.cf1_6check method)": [[31, "compliance_checker.cf.CF1_6Check.check_flags"]], "check_geographic_region() (compliance_checker.cf.cf1_6check method)": [[31, "compliance_checker.cf.CF1_6Check.check_geographic_region"]], "check_grid_coordinates() (compliance_checker.cf.cf1_6check method)": [[31, "compliance_checker.cf.CF1_6Check.check_grid_coordinates"]], "check_grid_mapping() (compliance_checker.cf.cf1_6check method)": [[31, "compliance_checker.cf.CF1_6Check.check_grid_mapping"]], "check_hints() (compliance_checker.cf.cf1_6check method)": [[31, "compliance_checker.cf.CF1_6Check.check_hints"]], "check_latitude() (compliance_checker.cf.cf1_6check method)": [[31, "compliance_checker.cf.CF1_6Check.check_latitude"]], "check_longitude() (compliance_checker.cf.cf1_6check method)": [[31, "compliance_checker.cf.CF1_6Check.check_longitude"]], "check_multi_dimensional_coords() (compliance_checker.cf.cf1_6check method)": [[31, "compliance_checker.cf.CF1_6Check.check_multi_dimensional_coords"]], "check_names_unique() (compliance_checker.cf.cf1_6check method)": [[31, "compliance_checker.cf.CF1_6Check.check_names_unique"]], "check_naming_conventions() (compliance_checker.cf.cf1_6check method)": [[31, "compliance_checker.cf.CF1_6Check.check_naming_conventions"]], "check_packed_data() (compliance_checker.cf.cf1_6check method)": [[31, "compliance_checker.cf.CF1_6Check.check_packed_data"]], "check_reduced_horizontal_grid() (compliance_checker.cf.cf1_6check method)": [[31, "compliance_checker.cf.CF1_6Check.check_reduced_horizontal_grid"]], "check_standard_name() (compliance_checker.cf.cf1_6check method)": [[31, "compliance_checker.cf.CF1_6Check.check_standard_name"]], "check_time_coordinate() (compliance_checker.cf.cf1_6check method)": [[31, "compliance_checker.cf.CF1_6Check.check_time_coordinate"]], "check_units() (compliance_checker.cf.cf1_6check method)": [[31, "compliance_checker.cf.CF1_6Check.check_units"]], "check_valid_range_or_valid_min_max_present() (compliance_checker.cf.cf1_6check method)": [[31, "compliance_checker.cf.CF1_6Check.check_valid_range_or_valid_min_max_present"]], "check_variable_features() (compliance_checker.cf.cf1_6check method)": [[31, "compliance_checker.cf.CF1_6Check.check_variable_features"]], "get_test_ctx() (compliance_checker.cf.cf1_6check method)": [[31, "compliance_checker.cf.CF1_6Check.get_test_ctx"]], "register_checker (compliance_checker.cf.cf1_6check attribute)": [[31, "compliance_checker.cf.CF1_6Check.register_checker"]], "setup() (compliance_checker.cf.cf1_6check method)": [[31, "compliance_checker.cf.CF1_6Check.setup"]], "std_check() (compliance_checker.cf.cf1_6check class method)": [[31, "compliance_checker.cf.CF1_6Check.std_check"]], "std_check_in() (compliance_checker.cf.cf1_6check class method)": [[31, "compliance_checker.cf.CF1_6Check.std_check_in"]], "supported_ds (compliance_checker.cf.cf1_6check attribute)": [[31, "compliance_checker.cf.CF1_6Check.supported_ds"]], "cf1_7check (class in compliance_checker.cf)": [[32, "compliance_checker.cf.CF1_7Check"]], "high (compliance_checker.cf.cf1_7check attribute)": [[32, "compliance_checker.cf.CF1_7Check.HIGH"]], "low (compliance_checker.cf.cf1_7check attribute)": [[32, "compliance_checker.cf.CF1_7Check.LOW"]], "medium (compliance_checker.cf.cf1_7check attribute)": [[32, "compliance_checker.cf.CF1_7Check.MEDIUM"]], "__init__() (compliance_checker.cf.cf1_7check method)": [[32, "compliance_checker.cf.CF1_7Check.__init__"]], "appendix_a (compliance_checker.cf.cf1_7check attribute)": [[32, "compliance_checker.cf.CF1_7Check.appendix_a"]], "appendix_d_parametric_coords (compliance_checker.cf.cf1_7check attribute)": [[32, "compliance_checker.cf.CF1_7Check.appendix_d_parametric_coords"]], "check_actual_range() (compliance_checker.cf.cf1_7check method)": [[32, "compliance_checker.cf.CF1_7Check.check_actual_range"]], "check_add_offset_scale_factor_type() (compliance_checker.cf.cf1_7check method)": [[32, "compliance_checker.cf.CF1_7Check.check_add_offset_scale_factor_type"]], "check_ancillary_variables() (compliance_checker.cf.cf1_7check method)": [[32, "compliance_checker.cf.CF1_7Check.check_ancillary_variables"]], "check_appendix_a() (compliance_checker.cf.cf1_7check method)": [[32, "compliance_checker.cf.CF1_7Check.check_appendix_a"]], "check_aux_coordinates() (compliance_checker.cf.cf1_7check method)": [[32, "compliance_checker.cf.CF1_7Check.check_aux_coordinates"]], "check_calendar() (compliance_checker.cf.cf1_7check method)": [[32, "compliance_checker.cf.CF1_7Check.check_calendar"]], "check_cell_boundaries() (compliance_checker.cf.cf1_7check method)": [[32, "compliance_checker.cf.CF1_7Check.check_cell_boundaries"]], "check_cell_boundaries_interval() (compliance_checker.cf.cf1_7check method)": [[32, "compliance_checker.cf.CF1_7Check.check_cell_boundaries_interval"]], "check_cell_measures() (compliance_checker.cf.cf1_7check method)": [[32, "compliance_checker.cf.CF1_7Check.check_cell_measures"]], "check_cell_methods() (compliance_checker.cf.cf1_7check method)": [[32, "compliance_checker.cf.CF1_7Check.check_cell_methods"]], "check_cf_role() (compliance_checker.cf.cf1_7check method)": [[32, "compliance_checker.cf.CF1_7Check.check_cf_role"]], "check_child_attr_data_types() (compliance_checker.cf.cf1_7check method)": [[32, "compliance_checker.cf.CF1_7Check.check_child_attr_data_types"]], "check_climatological_statistics() (compliance_checker.cf.cf1_7check method)": [[32, "compliance_checker.cf.CF1_7Check.check_climatological_statistics"]], "check_compression_gathering() (compliance_checker.cf.cf1_7check method)": [[32, "compliance_checker.cf.CF1_7Check.check_compression_gathering"]], "check_convention_globals() (compliance_checker.cf.cf1_7check method)": [[32, "compliance_checker.cf.CF1_7Check.check_convention_globals"]], "check_convention_possibly_var_attrs() (compliance_checker.cf.cf1_7check method)": [[32, "compliance_checker.cf.CF1_7Check.check_convention_possibly_var_attrs"]], "check_conventions_version() (compliance_checker.cf.cf1_7check method)": [[32, "compliance_checker.cf.CF1_7Check.check_conventions_version"]], "check_coordinate_types() (compliance_checker.cf.cf1_7check method)": [[32, "compliance_checker.cf.CF1_7Check.check_coordinate_types"]], "check_coordinate_variables_strict_monotonicity() (compliance_checker.cf.cf1_7check method)": [[32, "compliance_checker.cf.CF1_7Check.check_coordinate_variables_strict_monotonicity"]], "check_data_types() (compliance_checker.cf.cf1_7check method)": [[32, "compliance_checker.cf.CF1_7Check.check_data_types"]], "check_dimension_names() (compliance_checker.cf.cf1_7check method)": [[32, "compliance_checker.cf.CF1_7Check.check_dimension_names"]], "check_dimension_order() (compliance_checker.cf.cf1_7check method)": [[32, "compliance_checker.cf.CF1_7Check.check_dimension_order"]], "check_dimensional_vertical_coordinate() (compliance_checker.cf.cf1_7check method)": [[32, "compliance_checker.cf.CF1_7Check.check_dimensional_vertical_coordinate"]], "check_dimensionless_vertical_coordinates() (compliance_checker.cf.cf1_7check method)": [[32, "compliance_checker.cf.CF1_7Check.check_dimensionless_vertical_coordinates"]], "check_duplicate_axis() (compliance_checker.cf.cf1_7check method)": [[32, "compliance_checker.cf.CF1_7Check.check_duplicate_axis"]], "check_external_variables() (compliance_checker.cf.cf1_7check method)": [[32, "compliance_checker.cf.CF1_7Check.check_external_variables"]], "check_feature_type() (compliance_checker.cf.cf1_7check method)": [[32, "compliance_checker.cf.CF1_7Check.check_feature_type"]], "check_filename() (compliance_checker.cf.cf1_7check method)": [[32, "compliance_checker.cf.CF1_7Check.check_filename"]], "check_fill_value_equal_missing_value() (compliance_checker.cf.cf1_7check method)": [[32, "compliance_checker.cf.CF1_7Check.check_fill_value_equal_missing_value"]], "check_fill_value_outside_valid_range() (compliance_checker.cf.cf1_7check method)": [[32, "compliance_checker.cf.CF1_7Check.check_fill_value_outside_valid_range"]], "check_flags() (compliance_checker.cf.cf1_7check method)": [[32, "compliance_checker.cf.CF1_7Check.check_flags"]], "check_geographic_region() (compliance_checker.cf.cf1_7check method)": [[32, "compliance_checker.cf.CF1_7Check.check_geographic_region"]], "check_grid_coordinates() (compliance_checker.cf.cf1_7check method)": [[32, "compliance_checker.cf.CF1_7Check.check_grid_coordinates"]], "check_grid_mapping() (compliance_checker.cf.cf1_7check method)": [[32, "compliance_checker.cf.CF1_7Check.check_grid_mapping"]], "check_hints() (compliance_checker.cf.cf1_7check method)": [[32, "compliance_checker.cf.CF1_7Check.check_hints"]], "check_latitude() (compliance_checker.cf.cf1_7check method)": [[32, "compliance_checker.cf.CF1_7Check.check_latitude"]], "check_longitude() (compliance_checker.cf.cf1_7check method)": [[32, "compliance_checker.cf.CF1_7Check.check_longitude"]], "check_multi_dimensional_coords() (compliance_checker.cf.cf1_7check method)": [[32, "compliance_checker.cf.CF1_7Check.check_multi_dimensional_coords"]], "check_names_unique() (compliance_checker.cf.cf1_7check method)": [[32, "compliance_checker.cf.CF1_7Check.check_names_unique"]], "check_naming_conventions() (compliance_checker.cf.cf1_7check method)": [[32, "compliance_checker.cf.CF1_7Check.check_naming_conventions"]], "check_packed_data() (compliance_checker.cf.cf1_7check method)": [[32, "compliance_checker.cf.CF1_7Check.check_packed_data"]], "check_reduced_horizontal_grid() (compliance_checker.cf.cf1_7check method)": [[32, "compliance_checker.cf.CF1_7Check.check_reduced_horizontal_grid"]], "check_standard_name() (compliance_checker.cf.cf1_7check method)": [[32, "compliance_checker.cf.CF1_7Check.check_standard_name"]], "check_standard_name_deprecated_modifiers() (compliance_checker.cf.cf1_7check method)": [[32, "compliance_checker.cf.CF1_7Check.check_standard_name_deprecated_modifiers"]], "check_time_coordinate() (compliance_checker.cf.cf1_7check method)": [[32, "compliance_checker.cf.CF1_7Check.check_time_coordinate"]], "check_units() (compliance_checker.cf.cf1_7check method)": [[32, "compliance_checker.cf.CF1_7Check.check_units"]], "check_valid_range_or_valid_min_max_present() (compliance_checker.cf.cf1_7check method)": [[32, "compliance_checker.cf.CF1_7Check.check_valid_range_or_valid_min_max_present"]], "check_variable_features() (compliance_checker.cf.cf1_7check method)": [[32, "compliance_checker.cf.CF1_7Check.check_variable_features"]], "get_test_ctx() (compliance_checker.cf.cf1_7check method)": [[32, "compliance_checker.cf.CF1_7Check.get_test_ctx"]], "register_checker (compliance_checker.cf.cf1_7check attribute)": [[32, "compliance_checker.cf.CF1_7Check.register_checker"]], "setup() (compliance_checker.cf.cf1_7check method)": [[32, "compliance_checker.cf.CF1_7Check.setup"]], "std_check() (compliance_checker.cf.cf1_7check class method)": [[32, "compliance_checker.cf.CF1_7Check.std_check"]], "std_check_in() (compliance_checker.cf.cf1_7check class method)": [[32, "compliance_checker.cf.CF1_7Check.std_check_in"]], "supported_ds (compliance_checker.cf.cf1_7check attribute)": [[32, "compliance_checker.cf.CF1_7Check.supported_ds"]], "compliance_checker.cfutil": [[33, "module-compliance_checker.cfutil"]], "attr_membership() (in module compliance_checker.cfutil)": [[34, "compliance_checker.cfutil.attr_membership"]], "coordinate_dimension_matrix() (in module compliance_checker.cfutil)": [[35, "compliance_checker.cfutil.coordinate_dimension_matrix"]], "get_auxiliary_coordinate_variables() (in module compliance_checker.cfutil)": [[36, "compliance_checker.cfutil.get_auxiliary_coordinate_variables"]], "get_axis_map() (in module compliance_checker.cfutil)": [[37, "compliance_checker.cfutil.get_axis_map"]], "get_axis_variables() (in module compliance_checker.cfutil)": [[38, "compliance_checker.cfutil.get_axis_variables"]], "get_bounds_variables() (in module compliance_checker.cfutil)": [[39, "compliance_checker.cfutil.get_bounds_variables"]], "get_cell_boundary_map() (in module compliance_checker.cfutil)": [[40, "compliance_checker.cfutil.get_cell_boundary_map"]], "get_cell_boundary_variables() (in module compliance_checker.cfutil)": [[41, "compliance_checker.cfutil.get_cell_boundary_variables"]], "get_climatology_variable() (in module compliance_checker.cfutil)": [[42, "compliance_checker.cfutil.get_climatology_variable"]], "get_coordinate_variables() (in module compliance_checker.cfutil)": [[43, "compliance_checker.cfutil.get_coordinate_variables"]], "get_flag_variables() (in module compliance_checker.cfutil)": [[44, "compliance_checker.cfutil.get_flag_variables"]], "get_forecast_metadata_variables() (in module compliance_checker.cfutil)": [[45, "compliance_checker.cfutil.get_forecast_metadata_variables"]], "get_geophysical_variables() (in module compliance_checker.cfutil)": [[46, "compliance_checker.cfutil.get_geophysical_variables"]], "get_grid_mapping_variables() (in module compliance_checker.cfutil)": [[47, "compliance_checker.cfutil.get_grid_mapping_variables"]], "get_instrument_variables() (in module compliance_checker.cfutil)": [[48, "compliance_checker.cfutil.get_instrument_variables"]], "get_lat_variable() (in module compliance_checker.cfutil)": [[49, "compliance_checker.cfutil.get_lat_variable"]], "get_latitude_variables() (in module compliance_checker.cfutil)": [[50, "compliance_checker.cfutil.get_latitude_variables"]], "get_lon_variable() (in module compliance_checker.cfutil)": [[51, "compliance_checker.cfutil.get_lon_variable"]], "get_longitude_variables() (in module compliance_checker.cfutil)": [[52, "compliance_checker.cfutil.get_longitude_variables"]], "get_platform_variables() (in module compliance_checker.cfutil)": [[53, "compliance_checker.cfutil.get_platform_variables"]], "get_sea_names() (in module compliance_checker.cfutil)": [[54, "compliance_checker.cfutil.get_sea_names"]], "get_time_variable() (in module compliance_checker.cfutil)": [[55, "compliance_checker.cfutil.get_time_variable"]], "get_time_variables() (in module compliance_checker.cfutil)": [[56, "compliance_checker.cfutil.get_time_variables"]], "get_true_latitude_variables() (in module compliance_checker.cfutil)": [[57, "compliance_checker.cfutil.get_true_latitude_variables"]], "get_true_longitude_variables() (in module compliance_checker.cfutil)": [[58, "compliance_checker.cfutil.get_true_longitude_variables"]], "get_z_variable() (in module compliance_checker.cfutil)": [[59, "compliance_checker.cfutil.get_z_variable"]], "get_z_variables() (in module compliance_checker.cfutil)": [[60, "compliance_checker.cfutil.get_z_variables"]], "guess_feature_type() (in module compliance_checker.cfutil)": [[61, "compliance_checker.cfutil.guess_feature_type"]], "isprofile() (in module compliance_checker.cfutil)": [[62, "compliance_checker.cfutil.isProfile"]], "istimeseries() (in module compliance_checker.cfutil)": [[63, "compliance_checker.cfutil.isTimeSeries"]], "istimeseriesprofile() (in module compliance_checker.cfutil)": [[64, "compliance_checker.cfutil.isTimeSeriesProfile"]], "istrajectory() (in module compliance_checker.cfutil)": [[65, "compliance_checker.cfutil.isTrajectory"]], "istrajectoryprofile() (in module compliance_checker.cfutil)": [[66, "compliance_checker.cfutil.isTrajectoryProfile"]], "is_2d_regular_grid() (in module compliance_checker.cfutil)": [[67, "compliance_checker.cfutil.is_2d_regular_grid"]], "is_2d_static_grid() (in module compliance_checker.cfutil)": [[68, "compliance_checker.cfutil.is_2d_static_grid"]], "is_3d_regular_grid() (in module compliance_checker.cfutil)": [[69, "compliance_checker.cfutil.is_3d_regular_grid"]], "is_3d_static_grid() (in module compliance_checker.cfutil)": [[70, "compliance_checker.cfutil.is_3d_static_grid"]], "is_cf_trajectory() (in module compliance_checker.cfutil)": [[71, "compliance_checker.cfutil.is_cf_trajectory"]], "is_compression_coordinate() (in module compliance_checker.cfutil)": [[72, "compliance_checker.cfutil.is_compression_coordinate"]], "is_coordinate_variable() (in module compliance_checker.cfutil)": [[73, "compliance_checker.cfutil.is_coordinate_variable"]], "is_dataset_valid_ragged_array_repr_featuretype() (in module compliance_checker.cfutil)": [[74, "compliance_checker.cfutil.is_dataset_valid_ragged_array_repr_featureType"]], "is_dimensionless_standard_name() (in module compliance_checker.cfutil)": [[75, "compliance_checker.cfutil.is_dimensionless_standard_name"]], "is_geophysical() (in module compliance_checker.cfutil)": [[76, "compliance_checker.cfutil.is_geophysical"]], "is_mapped_grid() (in module compliance_checker.cfutil)": [[77, "compliance_checker.cfutil.is_mapped_grid"]], "is_multi_timeseries_incomplete() (in module compliance_checker.cfutil)": [[78, "compliance_checker.cfutil.is_multi_timeseries_incomplete"]], "is_multi_timeseries_orthogonal() (in module compliance_checker.cfutil)": [[79, "compliance_checker.cfutil.is_multi_timeseries_orthogonal"]], "is_point() (in module compliance_checker.cfutil)": [[80, "compliance_checker.cfutil.is_point"]], "is_profile_incomplete() (in module compliance_checker.cfutil)": [[81, "compliance_checker.cfutil.is_profile_incomplete"]], "is_profile_orthogonal() (in module compliance_checker.cfutil)": [[82, "compliance_checker.cfutil.is_profile_orthogonal"]], "is_reduced_grid() (in module compliance_checker.cfutil)": [[83, "compliance_checker.cfutil.is_reduced_grid"]], "is_single_trajectory() (in module compliance_checker.cfutil)": [[84, "compliance_checker.cfutil.is_single_trajectory"]], "is_timeseries() (in module compliance_checker.cfutil)": [[85, "compliance_checker.cfutil.is_timeseries"]], "is_timeseries_profile_incomplete() (in module compliance_checker.cfutil)": [[86, "compliance_checker.cfutil.is_timeseries_profile_incomplete"]], "is_timeseries_profile_multi_ortho_time() (in module compliance_checker.cfutil)": [[87, "compliance_checker.cfutil.is_timeseries_profile_multi_ortho_time"]], "is_timeseries_profile_multi_station() (in module compliance_checker.cfutil)": [[88, "compliance_checker.cfutil.is_timeseries_profile_multi_station"]], "is_timeseries_profile_ortho_depth() (in module compliance_checker.cfutil)": [[89, "compliance_checker.cfutil.is_timeseries_profile_ortho_depth"]], "is_timeseries_profile_single_ortho_time() (in module compliance_checker.cfutil)": [[90, "compliance_checker.cfutil.is_timeseries_profile_single_ortho_time"]], "is_timeseries_profile_single_station() (in module compliance_checker.cfutil)": [[91, "compliance_checker.cfutil.is_timeseries_profile_single_station"]], "is_trajectory_profile_incomplete() (in module compliance_checker.cfutil)": [[92, "compliance_checker.cfutil.is_trajectory_profile_incomplete"]], "is_trajectory_profile_orthogonal() (in module compliance_checker.cfutil)": [[93, "compliance_checker.cfutil.is_trajectory_profile_orthogonal"]], "is_unitless() (in module compliance_checker.cfutil)": [[94, "compliance_checker.cfutil.is_unitless"]], "is_variable_valid_ragged_array_repr_featuretype() (in module compliance_checker.cfutil)": [[95, "compliance_checker.cfutil.is_variable_valid_ragged_array_repr_featureType"]], "units_convertible() (in module compliance_checker.cfutil)": [[96, "compliance_checker.cfutil.units_convertible"]], "compliance_checker.ioos": [[97, "module-compliance_checker.ioos"]], "high (compliance_checker.ioos.ioos0_1check attribute)": [[98, "compliance_checker.ioos.IOOS0_1Check.HIGH"]], "ioos0_1check (class in compliance_checker.ioos)": [[98, "compliance_checker.ioos.IOOS0_1Check"]], "low (compliance_checker.ioos.ioos0_1check attribute)": [[98, "compliance_checker.ioos.IOOS0_1Check.LOW"]], "medium (compliance_checker.ioos.ioos0_1check attribute)": [[98, "compliance_checker.ioos.IOOS0_1Check.MEDIUM"]], "__init__() (compliance_checker.ioos.ioos0_1check method)": [[98, "compliance_checker.ioos.IOOS0_1Check.__init__"]], "check_altitude_units() (compliance_checker.ioos.ioos0_1check method)": [[98, "compliance_checker.ioos.IOOS0_1Check.check_altitude_units"]], "check_global_attributes() (compliance_checker.ioos.ioos0_1check method)": [[98, "compliance_checker.ioos.IOOS0_1Check.check_global_attributes"]], "check_station_location_lat() (compliance_checker.ioos.ioos0_1check method)": [[98, "compliance_checker.ioos.IOOS0_1Check.check_station_location_lat"]], "check_station_location_lon() (compliance_checker.ioos.ioos0_1check method)": [[98, "compliance_checker.ioos.IOOS0_1Check.check_station_location_lon"]], "check_time_period() (compliance_checker.ioos.ioos0_1check method)": [[98, "compliance_checker.ioos.IOOS0_1Check.check_time_period"]], "check_variable_attributes() (compliance_checker.ioos.ioos0_1check method)": [[98, "compliance_checker.ioos.IOOS0_1Check.check_variable_attributes"]], "check_variable_names() (compliance_checker.ioos.ioos0_1check method)": [[98, "compliance_checker.ioos.IOOS0_1Check.check_variable_names"]], "check_variable_units() (compliance_checker.ioos.ioos0_1check method)": [[98, "compliance_checker.ioos.IOOS0_1Check.check_variable_units"]], "get_test_ctx() (compliance_checker.ioos.ioos0_1check method)": [[98, "compliance_checker.ioos.IOOS0_1Check.get_test_ctx"]], "register_checker (compliance_checker.ioos.ioos0_1check attribute)": [[98, "compliance_checker.ioos.IOOS0_1Check.register_checker"]], "setup() (compliance_checker.ioos.ioos0_1check method)": [[98, "compliance_checker.ioos.IOOS0_1Check.setup"]], "std_check() (compliance_checker.ioos.ioos0_1check class method)": [[98, "compliance_checker.ioos.IOOS0_1Check.std_check"]], "std_check_in() (compliance_checker.ioos.ioos0_1check class method)": [[98, "compliance_checker.ioos.IOOS0_1Check.std_check_in"]], "supported_ds (compliance_checker.ioos.ioos0_1check attribute)": [[98, "compliance_checker.ioos.IOOS0_1Check.supported_ds"]], "high (compliance_checker.ioos.ioos1_1check attribute)": [[99, "compliance_checker.ioos.IOOS1_1Check.HIGH"]], "ioos1_1check (class in compliance_checker.ioos)": [[99, "compliance_checker.ioos.IOOS1_1Check"]], "low (compliance_checker.ioos.ioos1_1check attribute)": [[99, "compliance_checker.ioos.IOOS1_1Check.LOW"]], "medium (compliance_checker.ioos.ioos1_1check attribute)": [[99, "compliance_checker.ioos.IOOS1_1Check.MEDIUM"]], "__init__() (compliance_checker.ioos.ioos1_1check method)": [[99, "compliance_checker.ioos.IOOS1_1Check.__init__"]], "check_geophysical_vars_fill_value() (compliance_checker.ioos.ioos1_1check method)": [[99, "compliance_checker.ioos.IOOS1_1Check.check_geophysical_vars_fill_value"]], "check_geophysical_vars_standard_name() (compliance_checker.ioos.ioos1_1check method)": [[99, "compliance_checker.ioos.IOOS1_1Check.check_geophysical_vars_standard_name"]], "check_high() (compliance_checker.ioos.ioos1_1check method)": [[99, "compliance_checker.ioos.IOOS1_1Check.check_high"]], "check_platform_variable_attributes() (compliance_checker.ioos.ioos1_1check method)": [[99, "compliance_checker.ioos.IOOS1_1Check.check_platform_variable_attributes"]], "check_platform_variables() (compliance_checker.ioos.ioos1_1check method)": [[99, "compliance_checker.ioos.IOOS1_1Check.check_platform_variables"]], "check_recommended() (compliance_checker.ioos.ioos1_1check method)": [[99, "compliance_checker.ioos.IOOS1_1Check.check_recommended"]], "check_station_location_lat() (compliance_checker.ioos.ioos1_1check method)": [[99, "compliance_checker.ioos.IOOS1_1Check.check_station_location_lat"]], "check_station_location_lon() (compliance_checker.ioos.ioos1_1check method)": [[99, "compliance_checker.ioos.IOOS1_1Check.check_station_location_lon"]], "check_time_period() (compliance_checker.ioos.ioos1_1check method)": [[99, "compliance_checker.ioos.IOOS1_1Check.check_time_period"]], "check_units() (compliance_checker.ioos.ioos1_1check method)": [[99, "compliance_checker.ioos.IOOS1_1Check.check_units"]], "get_test_ctx() (compliance_checker.ioos.ioos1_1check method)": [[99, "compliance_checker.ioos.IOOS1_1Check.get_test_ctx"]], "register_checker (compliance_checker.ioos.ioos1_1check attribute)": [[99, "compliance_checker.ioos.IOOS1_1Check.register_checker"]], "setup() (compliance_checker.ioos.ioos1_1check method)": [[99, "compliance_checker.ioos.IOOS1_1Check.setup"]], "std_check() (compliance_checker.ioos.ioos1_1check class method)": [[99, "compliance_checker.ioos.IOOS1_1Check.std_check"]], "std_check_in() (compliance_checker.ioos.ioos1_1check class method)": [[99, "compliance_checker.ioos.IOOS1_1Check.std_check_in"]], "supported_ds (compliance_checker.ioos.ioos1_1check attribute)": [[99, "compliance_checker.ioos.IOOS1_1Check.supported_ds"]], "high (compliance_checker.ioos.ioos1_2check attribute)": [[100, "compliance_checker.ioos.IOOS1_2Check.HIGH"]], "ioos1_2check (class in compliance_checker.ioos)": [[100, "compliance_checker.ioos.IOOS1_2Check"]], "low (compliance_checker.ioos.ioos1_2check attribute)": [[100, "compliance_checker.ioos.IOOS1_2Check.LOW"]], "medium (compliance_checker.ioos.ioos1_2check attribute)": [[100, "compliance_checker.ioos.IOOS1_2Check.MEDIUM"]], "__init__() (compliance_checker.ioos.ioos1_2check method)": [[100, "compliance_checker.ioos.IOOS1_2Check.__init__"]], "check_accuracy() (compliance_checker.ioos.ioos1_2check method)": [[100, "compliance_checker.ioos.IOOS1_2Check.check_accuracy"]], "check_cf_role_variables() (compliance_checker.ioos.ioos1_2check method)": [[100, "compliance_checker.ioos.IOOS1_2Check.check_cf_role_variables"]], "check_contributor_role_and_vocabulary() (compliance_checker.ioos.ioos1_2check method)": [[100, "compliance_checker.ioos.IOOS1_2Check.check_contributor_role_and_vocabulary"]], "check_creator_and_publisher_type() (compliance_checker.ioos.ioos1_2check method)": [[100, "compliance_checker.ioos.IOOS1_2Check.check_creator_and_publisher_type"]], "check_feature_type() (compliance_checker.ioos.ioos1_2check method)": [[100, "compliance_checker.ioos.IOOS1_2Check.check_feature_type"]], "check_geophysical_vars_have_attrs() (compliance_checker.ioos.ioos1_2check method)": [[100, "compliance_checker.ioos.IOOS1_2Check.check_geophysical_vars_have_attrs"]], "check_gts_ingest_global() (compliance_checker.ioos.ioos1_2check method)": [[100, "compliance_checker.ioos.IOOS1_2Check.check_gts_ingest_global"]], "check_gts_ingest_requirements() (compliance_checker.ioos.ioos1_2check method)": [[100, "compliance_checker.ioos.IOOS1_2Check.check_gts_ingest_requirements"]], "check_high() (compliance_checker.ioos.ioos1_2check method)": [[100, "compliance_checker.ioos.IOOS1_2Check.check_high"]], "check_instrument_make_model_calib_date() (compliance_checker.ioos.ioos1_2check method)": [[100, "compliance_checker.ioos.IOOS1_2Check.check_instrument_make_model_calib_date"]], "check_instrument_variables() (compliance_checker.ioos.ioos1_2check method)": [[100, "compliance_checker.ioos.IOOS1_2Check.check_instrument_variables"]], "check_ioos_ingest() (compliance_checker.ioos.ioos1_2check method)": [[100, "compliance_checker.ioos.IOOS1_2Check.check_ioos_ingest"]], "check_platform_global() (compliance_checker.ioos.ioos1_2check method)": [[100, "compliance_checker.ioos.IOOS1_2Check.check_platform_global"]], "check_platform_vocabulary() (compliance_checker.ioos.ioos1_2check method)": [[100, "compliance_checker.ioos.IOOS1_2Check.check_platform_vocabulary"]], "check_qartod_variables_flags() (compliance_checker.ioos.ioos1_2check method)": [[100, "compliance_checker.ioos.IOOS1_2Check.check_qartod_variables_flags"]], "check_qartod_variables_references() (compliance_checker.ioos.ioos1_2check method)": [[100, "compliance_checker.ioos.IOOS1_2Check.check_qartod_variables_references"]], "check_recommended() (compliance_checker.ioos.ioos1_2check method)": [[100, "compliance_checker.ioos.IOOS1_2Check.check_recommended"]], "check_single_platform() (compliance_checker.ioos.ioos1_2check method)": [[100, "compliance_checker.ioos.IOOS1_2Check.check_single_platform"]], "check_standard_name() (compliance_checker.ioos.ioos1_2check method)": [[100, "compliance_checker.ioos.IOOS1_2Check.check_standard_name"]], "check_station_location_lat() (compliance_checker.ioos.ioos1_2check method)": [[100, "compliance_checker.ioos.IOOS1_2Check.check_station_location_lat"]], "check_station_location_lon() (compliance_checker.ioos.ioos1_2check method)": [[100, "compliance_checker.ioos.IOOS1_2Check.check_station_location_lon"]], "check_time_period() (compliance_checker.ioos.ioos1_2check method)": [[100, "compliance_checker.ioos.IOOS1_2Check.check_time_period"]], "check_units() (compliance_checker.ioos.ioos1_2check method)": [[100, "compliance_checker.ioos.IOOS1_2Check.check_units"]], "check_vertical_coordinates() (compliance_checker.ioos.ioos1_2check method)": [[100, "compliance_checker.ioos.IOOS1_2Check.check_vertical_coordinates"]], "check_wmo_platform_code() (compliance_checker.ioos.ioos1_2check method)": [[100, "compliance_checker.ioos.IOOS1_2Check.check_wmo_platform_code"]], "get_test_ctx() (compliance_checker.ioos.ioos1_2check method)": [[100, "compliance_checker.ioos.IOOS1_2Check.get_test_ctx"]], "register_checker (compliance_checker.ioos.ioos1_2check attribute)": [[100, "compliance_checker.ioos.IOOS1_2Check.register_checker"]], "setup() (compliance_checker.ioos.ioos1_2check method)": [[100, "compliance_checker.ioos.IOOS1_2Check.setup"]], "std_check() (compliance_checker.ioos.ioos1_2check class method)": [[100, "compliance_checker.ioos.IOOS1_2Check.std_check"]], "std_check_in() (compliance_checker.ioos.ioos1_2check class method)": [[100, "compliance_checker.ioos.IOOS1_2Check.std_check_in"]], "supported_ds (compliance_checker.ioos.ioos1_2check attribute)": [[100, "compliance_checker.ioos.IOOS1_2Check.supported_ds"]], "ioos1_2_conventionsvalidator (class in compliance_checker.ioos)": [[101, "compliance_checker.ioos.IOOS1_2_ConventionsValidator"]], "__init__() (compliance_checker.ioos.ioos1_2_conventionsvalidator method)": [[101, "compliance_checker.ioos.IOOS1_2_ConventionsValidator.__init__"]], "validate() (compliance_checker.ioos.ioos1_2_conventionsvalidator method)": [[101, "compliance_checker.ioos.IOOS1_2_ConventionsValidator.validate"]], "validate_type() (compliance_checker.ioos.ioos1_2_conventionsvalidator method)": [[101, "compliance_checker.ioos.IOOS1_2_ConventionsValidator.validate_type"]], "validator_fail_msg (compliance_checker.ioos.ioos1_2_conventionsvalidator attribute)": [[101, "compliance_checker.ioos.IOOS1_2_ConventionsValidator.validator_fail_msg"]], "validator_func() (compliance_checker.ioos.ioos1_2_conventionsvalidator method)": [[101, "compliance_checker.ioos.IOOS1_2_ConventionsValidator.validator_func"]], "validator_regex (compliance_checker.ioos.ioos1_2_conventionsvalidator attribute)": [[101, "compliance_checker.ioos.IOOS1_2_ConventionsValidator.validator_regex"]], "ioos1_2_platformidvalidator (class in compliance_checker.ioos)": [[102, "compliance_checker.ioos.IOOS1_2_PlatformIDValidator"]], "__init__() (compliance_checker.ioos.ioos1_2_platformidvalidator method)": [[102, "compliance_checker.ioos.IOOS1_2_PlatformIDValidator.__init__"]], "validate() (compliance_checker.ioos.ioos1_2_platformidvalidator method)": [[102, "compliance_checker.ioos.IOOS1_2_PlatformIDValidator.validate"]], "validate_type() (compliance_checker.ioos.ioos1_2_platformidvalidator method)": [[102, "compliance_checker.ioos.IOOS1_2_PlatformIDValidator.validate_type"]], "validator_fail_msg (compliance_checker.ioos.ioos1_2_platformidvalidator attribute)": [[102, "compliance_checker.ioos.IOOS1_2_PlatformIDValidator.validator_fail_msg"]], "validator_func() (compliance_checker.ioos.ioos1_2_platformidvalidator method)": [[102, "compliance_checker.ioos.IOOS1_2_PlatformIDValidator.validator_func"]], "validator_regex (compliance_checker.ioos.ioos1_2_platformidvalidator attribute)": [[102, "compliance_checker.ioos.IOOS1_2_PlatformIDValidator.validator_regex"]], "high (compliance_checker.ioos.ioosbasecheck attribute)": [[103, "compliance_checker.ioos.IOOSBaseCheck.HIGH"]], "ioosbasecheck (class in compliance_checker.ioos)": [[103, "compliance_checker.ioos.IOOSBaseCheck"]], "low (compliance_checker.ioos.ioosbasecheck attribute)": [[103, "compliance_checker.ioos.IOOSBaseCheck.LOW"]], "medium (compliance_checker.ioos.ioosbasecheck attribute)": [[103, "compliance_checker.ioos.IOOSBaseCheck.MEDIUM"]], "__init__() (compliance_checker.ioos.ioosbasecheck method)": [[103, "compliance_checker.ioos.IOOSBaseCheck.__init__"]], "get_test_ctx() (compliance_checker.ioos.ioosbasecheck method)": [[103, "compliance_checker.ioos.IOOSBaseCheck.get_test_ctx"]], "setup() (compliance_checker.ioos.ioosbasecheck method)": [[103, "compliance_checker.ioos.IOOSBaseCheck.setup"]], "supported_ds (compliance_checker.ioos.ioosbasecheck attribute)": [[103, "compliance_checker.ioos.IOOSBaseCheck.supported_ds"]], "high (compliance_checker.ioos.ioosbasesoscheck attribute)": [[104, "compliance_checker.ioos.IOOSBaseSOSCheck.HIGH"]], "ioosbasesoscheck (class in compliance_checker.ioos)": [[104, "compliance_checker.ioos.IOOSBaseSOSCheck"]], "low (compliance_checker.ioos.ioosbasesoscheck attribute)": [[104, "compliance_checker.ioos.IOOSBaseSOSCheck.LOW"]], "medium (compliance_checker.ioos.ioosbasesoscheck attribute)": [[104, "compliance_checker.ioos.IOOSBaseSOSCheck.MEDIUM"]], "__init__() (compliance_checker.ioos.ioosbasesoscheck method)": [[104, "compliance_checker.ioos.IOOSBaseSOSCheck.__init__"]], "get_test_ctx() (compliance_checker.ioos.ioosbasesoscheck method)": [[104, "compliance_checker.ioos.IOOSBaseSOSCheck.get_test_ctx"]], "register_checker (compliance_checker.ioos.ioosbasesoscheck attribute)": [[104, "compliance_checker.ioos.IOOSBaseSOSCheck.register_checker"]], "setup() (compliance_checker.ioos.ioosbasesoscheck method)": [[104, "compliance_checker.ioos.IOOSBaseSOSCheck.setup"]], "supported_ds (compliance_checker.ioos.ioosbasesoscheck attribute)": [[104, "compliance_checker.ioos.IOOSBaseSOSCheck.supported_ds"]], "high (compliance_checker.ioos.ioosnccheck attribute)": [[105, "compliance_checker.ioos.IOOSNCCheck.HIGH"]], "ioosnccheck (class in compliance_checker.ioos)": [[105, "compliance_checker.ioos.IOOSNCCheck"]], "low (compliance_checker.ioos.ioosnccheck attribute)": [[105, "compliance_checker.ioos.IOOSNCCheck.LOW"]], "medium (compliance_checker.ioos.ioosnccheck attribute)": [[105, "compliance_checker.ioos.IOOSNCCheck.MEDIUM"]], "__init__() (compliance_checker.ioos.ioosnccheck method)": [[105, "compliance_checker.ioos.IOOSNCCheck.__init__"]], "check_station_location_lat() (compliance_checker.ioos.ioosnccheck method)": [[105, "compliance_checker.ioos.IOOSNCCheck.check_station_location_lat"]], "check_station_location_lon() (compliance_checker.ioos.ioosnccheck method)": [[105, "compliance_checker.ioos.IOOSNCCheck.check_station_location_lon"]], "check_time_period() (compliance_checker.ioos.ioosnccheck method)": [[105, "compliance_checker.ioos.IOOSNCCheck.check_time_period"]], "get_test_ctx() (compliance_checker.ioos.ioosnccheck method)": [[105, "compliance_checker.ioos.IOOSNCCheck.get_test_ctx"]], "setup() (compliance_checker.ioos.ioosnccheck method)": [[105, "compliance_checker.ioos.IOOSNCCheck.setup"]], "std_check() (compliance_checker.ioos.ioosnccheck class method)": [[105, "compliance_checker.ioos.IOOSNCCheck.std_check"]], "std_check_in() (compliance_checker.ioos.ioosnccheck class method)": [[105, "compliance_checker.ioos.IOOSNCCheck.std_check_in"]], "supported_ds (compliance_checker.ioos.ioosnccheck attribute)": [[105, "compliance_checker.ioos.IOOSNCCheck.supported_ds"]], "high (compliance_checker.ioos.ioossosdscheck attribute)": [[106, "compliance_checker.ioos.IOOSSOSDSCheck.HIGH"]], "ioossosdscheck (class in compliance_checker.ioos)": [[106, "compliance_checker.ioos.IOOSSOSDSCheck"]], "low (compliance_checker.ioos.ioossosdscheck attribute)": [[106, "compliance_checker.ioos.IOOSSOSDSCheck.LOW"]], "medium (compliance_checker.ioos.ioossosdscheck attribute)": [[106, "compliance_checker.ioos.IOOSSOSDSCheck.MEDIUM"]], "__init__() (compliance_checker.ioos.ioossosdscheck method)": [[106, "compliance_checker.ioos.IOOSSOSDSCheck.__init__"]], "check_high() (compliance_checker.ioos.ioossosdscheck method)": [[106, "compliance_checker.ioos.IOOSSOSDSCheck.check_high"]], "check_recommended() (compliance_checker.ioos.ioossosdscheck method)": [[106, "compliance_checker.ioos.IOOSSOSDSCheck.check_recommended"]], "check_suggested() (compliance_checker.ioos.ioossosdscheck method)": [[106, "compliance_checker.ioos.IOOSSOSDSCheck.check_suggested"]], "get_test_ctx() (compliance_checker.ioos.ioossosdscheck method)": [[106, "compliance_checker.ioos.IOOSSOSDSCheck.get_test_ctx"]], "ns (compliance_checker.ioos.ioossosdscheck attribute)": [[106, "compliance_checker.ioos.IOOSSOSDSCheck.ns"]], "register_checker (compliance_checker.ioos.ioossosdscheck attribute)": [[106, "compliance_checker.ioos.IOOSSOSDSCheck.register_checker"]], "setup() (compliance_checker.ioos.ioossosdscheck method)": [[106, "compliance_checker.ioos.IOOSSOSDSCheck.setup"]], "supported_ds (compliance_checker.ioos.ioossosdscheck attribute)": [[106, "compliance_checker.ioos.IOOSSOSDSCheck.supported_ds"]], "high (compliance_checker.ioos.ioossosgccheck attribute)": [[107, "compliance_checker.ioos.IOOSSOSGCCheck.HIGH"]], "ioossosgccheck (class in compliance_checker.ioos)": [[107, "compliance_checker.ioos.IOOSSOSGCCheck"]], "low (compliance_checker.ioos.ioossosgccheck attribute)": [[107, "compliance_checker.ioos.IOOSSOSGCCheck.LOW"]], "medium (compliance_checker.ioos.ioossosgccheck attribute)": [[107, "compliance_checker.ioos.IOOSSOSGCCheck.MEDIUM"]], "__init__() (compliance_checker.ioos.ioossosgccheck method)": [[107, "compliance_checker.ioos.IOOSSOSGCCheck.__init__"]], "check_high() (compliance_checker.ioos.ioossosgccheck method)": [[107, "compliance_checker.ioos.IOOSSOSGCCheck.check_high"]], "check_recommended() (compliance_checker.ioos.ioossosgccheck method)": [[107, "compliance_checker.ioos.IOOSSOSGCCheck.check_recommended"]], "check_suggested() (compliance_checker.ioos.ioossosgccheck method)": [[107, "compliance_checker.ioos.IOOSSOSGCCheck.check_suggested"]], "get_test_ctx() (compliance_checker.ioos.ioossosgccheck method)": [[107, "compliance_checker.ioos.IOOSSOSGCCheck.get_test_ctx"]], "ns (compliance_checker.ioos.ioossosgccheck attribute)": [[107, "compliance_checker.ioos.IOOSSOSGCCheck.ns"]], "register_checker (compliance_checker.ioos.ioossosgccheck attribute)": [[107, "compliance_checker.ioos.IOOSSOSGCCheck.register_checker"]], "setup() (compliance_checker.ioos.ioossosgccheck method)": [[107, "compliance_checker.ioos.IOOSSOSGCCheck.setup"]], "supported_ds (compliance_checker.ioos.ioossosgccheck attribute)": [[107, "compliance_checker.ioos.IOOSSOSGCCheck.supported_ds"]], "namingauthorityvalidator (class in compliance_checker.ioos)": [[108, "compliance_checker.ioos.NamingAuthorityValidator"]], "__init__() (compliance_checker.ioos.namingauthorityvalidator method)": [[108, "compliance_checker.ioos.NamingAuthorityValidator.__init__"]], "validate() (compliance_checker.ioos.namingauthorityvalidator method)": [[108, "compliance_checker.ioos.NamingAuthorityValidator.validate"]], "validate_type() (compliance_checker.ioos.namingauthorityvalidator method)": [[108, "compliance_checker.ioos.NamingAuthorityValidator.validate_type"]], "validator_fail_msg (compliance_checker.ioos.namingauthorityvalidator attribute)": [[108, "compliance_checker.ioos.NamingAuthorityValidator.validator_fail_msg"]], "validator_func() (compliance_checker.ioos.namingauthorityvalidator method)": [[108, "compliance_checker.ioos.NamingAuthorityValidator.validator_func"]], "compliance_checker.protocols": [[109, "module-compliance_checker.protocols"]], "compliance_checker.runner": [[110, "module-compliance_checker.runner"]], "compliancechecker (class in compliance_checker.runner)": [[111, "compliance_checker.runner.ComplianceChecker"]], "__init__() (compliance_checker.runner.compliancechecker method)": [[111, "compliance_checker.runner.ComplianceChecker.__init__"]], "check_errors() (compliance_checker.runner.compliancechecker class method)": [[111, "compliance_checker.runner.ComplianceChecker.check_errors"]], "html_output() (compliance_checker.runner.compliancechecker class method)": [[111, "compliance_checker.runner.ComplianceChecker.html_output"]], "json_output() (compliance_checker.runner.compliancechecker class method)": [[111, "compliance_checker.runner.ComplianceChecker.json_output"]], "run_checker() (compliance_checker.runner.compliancechecker class method)": [[111, "compliance_checker.runner.ComplianceChecker.run_checker"]], "stdout_output() (compliance_checker.runner.compliancechecker class method)": [[111, "compliance_checker.runner.ComplianceChecker.stdout_output"]], "stdout_redirector() (in module compliance_checker.runner)": [[112, "compliance_checker.runner.stdout_redirector"]], "compliance_checker.suite": [[113, "module-compliance_checker.suite"]], "checksuite (class in compliance_checker.suite)": [[114, "compliance_checker.suite.CheckSuite"]], "__init__() (compliance_checker.suite.checksuite method)": [[114, "compliance_checker.suite.CheckSuite.__init__"]], "add_plugin_args() (compliance_checker.suite.checksuite class method)": [[114, "compliance_checker.suite.CheckSuite.add_plugin_args"]], "build_structure() (compliance_checker.suite.checksuite method)": [[114, "compliance_checker.suite.CheckSuite.build_structure"]], "check_remote_netcdf() (compliance_checker.suite.checksuite method)": [[114, "compliance_checker.suite.CheckSuite.check_remote_netcdf"]], "checker_html_output() (compliance_checker.suite.checksuite method)": [[114, "compliance_checker.suite.CheckSuite.checker_html_output"]], "checkers (compliance_checker.suite.checksuite attribute)": [[114, "compliance_checker.suite.CheckSuite.checkers"]], "dict_output() (compliance_checker.suite.checksuite method)": [[114, "compliance_checker.suite.CheckSuite.dict_output"]], "generate_dataset() (compliance_checker.suite.checksuite method)": [[114, "compliance_checker.suite.CheckSuite.generate_dataset"]], "get_points() (compliance_checker.suite.checksuite method)": [[114, "compliance_checker.suite.CheckSuite.get_points"]], "html_output() (compliance_checker.suite.checksuite method)": [[114, "compliance_checker.suite.CheckSuite.html_output"]], "load_all_available_checkers() (compliance_checker.suite.checksuite class method)": [[114, "compliance_checker.suite.CheckSuite.load_all_available_checkers"]], "load_dataset() (compliance_checker.suite.checksuite method)": [[114, "compliance_checker.suite.CheckSuite.load_dataset"]], "load_generated_checkers() (compliance_checker.suite.checksuite class method)": [[114, "compliance_checker.suite.CheckSuite.load_generated_checkers"]], "load_local_dataset() (compliance_checker.suite.checksuite method)": [[114, "compliance_checker.suite.CheckSuite.load_local_dataset"]], "load_remote_dataset() (compliance_checker.suite.checksuite method)": [[114, "compliance_checker.suite.CheckSuite.load_remote_dataset"]], "passtree() (compliance_checker.suite.checksuite class method)": [[114, "compliance_checker.suite.CheckSuite.passtree"]], "process_doc() (compliance_checker.suite.checksuite method)": [[114, "compliance_checker.suite.CheckSuite.process_doc"]], "reasoning_routine() (compliance_checker.suite.checksuite method)": [[114, "compliance_checker.suite.CheckSuite.reasoning_routine"]], "run() (compliance_checker.suite.checksuite method)": [[114, "compliance_checker.suite.CheckSuite.run"]], "run_all() (compliance_checker.suite.checksuite method)": [[114, "compliance_checker.suite.CheckSuite.run_all"]], "scores() (compliance_checker.suite.checksuite method)": [[114, "compliance_checker.suite.CheckSuite.scores"]], "serialize() (compliance_checker.suite.checksuite method)": [[114, "compliance_checker.suite.CheckSuite.serialize"]], "standard_output() (compliance_checker.suite.checksuite method)": [[114, "compliance_checker.suite.CheckSuite.standard_output"]], "standard_output_generation() (compliance_checker.suite.checksuite method)": [[114, "compliance_checker.suite.CheckSuite.standard_output_generation"]], "templates_root (compliance_checker.suite.checksuite attribute)": [[114, "compliance_checker.suite.CheckSuite.templates_root"]], "extract_docstring_summary() (in module compliance_checker.suite)": [[115, "compliance_checker.suite.extract_docstring_summary"]], "compliance_checker.util": [[116, "module-compliance_checker.util"]], "dateparse() (in module compliance_checker.util)": [[117, "compliance_checker.util.dateparse"]], "datetime_is_iso() (in module compliance_checker.util)": [[118, "compliance_checker.util.datetime_is_iso"]], "kvp_convert() (in module compliance_checker.util)": [[119, "compliance_checker.util.kvp_convert"]]}})