Search.setIndex({"docnames": ["compliance_checker_api", "development", "faq", "generated/compliance_checker.acdd", "generated/compliance_checker.acdd.ACDD1_1Check", "generated/compliance_checker.acdd.ACDD1_3Check", "generated/compliance_checker.acdd.ACDDBaseCheck", "generated/compliance_checker.acdd.ACDDNCCheck", "generated/compliance_checker.base", "generated/compliance_checker.base.BaseCheck", "generated/compliance_checker.base.BaseNCCheck", "generated/compliance_checker.base.BaseSOSDSCheck", "generated/compliance_checker.base.BaseSOSGCCheck", "generated/compliance_checker.base.EmailValidator", "generated/compliance_checker.base.GenericFile", "generated/compliance_checker.base.RegexValidator", "generated/compliance_checker.base.Result", "generated/compliance_checker.base.TestCtx", "generated/compliance_checker.base.UrlValidator", "generated/compliance_checker.base.ValidationObject", "generated/compliance_checker.base.attr_check", "generated/compliance_checker.base.check_has", "generated/compliance_checker.base.csv_splitter", "generated/compliance_checker.base.fix_return_value", "generated/compliance_checker.base.get_namespaces", "generated/compliance_checker.base.maybe_get_global_attr", "generated/compliance_checker.base.ratable_result", "generated/compliance_checker.base.score_group", "generated/compliance_checker.base.std_check", "generated/compliance_checker.base.std_check_in", "generated/compliance_checker.base.xpath_check", "generated/compliance_checker.cf", "generated/compliance_checker.cf.CF1_6Check", "generated/compliance_checker.cf.CF1_7Check", "generated/compliance_checker.cfutil", "generated/compliance_checker.cfutil.attr_membership", "generated/compliance_checker.cfutil.coordinate_dimension_matrix", "generated/compliance_checker.cfutil.get_auxiliary_coordinate_variables", "generated/compliance_checker.cfutil.get_axis_map", "generated/compliance_checker.cfutil.get_axis_variables", "generated/compliance_checker.cfutil.get_bounds_variables", "generated/compliance_checker.cfutil.get_cell_boundary_map", "generated/compliance_checker.cfutil.get_cell_boundary_variables", "generated/compliance_checker.cfutil.get_climatology_variable", "generated/compliance_checker.cfutil.get_coordinate_variables", "generated/compliance_checker.cfutil.get_flag_variables", "generated/compliance_checker.cfutil.get_forecast_metadata_variables", "generated/compliance_checker.cfutil.get_geophysical_variables", "generated/compliance_checker.cfutil.get_grid_mapping_variables", "generated/compliance_checker.cfutil.get_instrument_variables", "generated/compliance_checker.cfutil.get_lat_variable", "generated/compliance_checker.cfutil.get_latitude_variables", "generated/compliance_checker.cfutil.get_lon_variable", "generated/compliance_checker.cfutil.get_longitude_variables", "generated/compliance_checker.cfutil.get_platform_variables", "generated/compliance_checker.cfutil.get_sea_names", "generated/compliance_checker.cfutil.get_time_variable", "generated/compliance_checker.cfutil.get_time_variables", "generated/compliance_checker.cfutil.get_true_latitude_variables", "generated/compliance_checker.cfutil.get_true_longitude_variables", "generated/compliance_checker.cfutil.get_z_variable", "generated/compliance_checker.cfutil.get_z_variables", "generated/compliance_checker.cfutil.guess_feature_type", "generated/compliance_checker.cfutil.isProfile", "generated/compliance_checker.cfutil.isTimeSeries", "generated/compliance_checker.cfutil.isTimeSeriesProfile", "generated/compliance_checker.cfutil.isTrajectory", "generated/compliance_checker.cfutil.isTrajectoryProfile", "generated/compliance_checker.cfutil.is_2d_regular_grid", "generated/compliance_checker.cfutil.is_2d_static_grid", "generated/compliance_checker.cfutil.is_3d_regular_grid", "generated/compliance_checker.cfutil.is_3d_static_grid", "generated/compliance_checker.cfutil.is_cf_trajectory", "generated/compliance_checker.cfutil.is_compression_coordinate", "generated/compliance_checker.cfutil.is_coordinate_variable", "generated/compliance_checker.cfutil.is_dataset_valid_ragged_array_repr_featureType", "generated/compliance_checker.cfutil.is_dimensionless_standard_name", "generated/compliance_checker.cfutil.is_geophysical", "generated/compliance_checker.cfutil.is_mapped_grid", "generated/compliance_checker.cfutil.is_multi_timeseries_incomplete", "generated/compliance_checker.cfutil.is_multi_timeseries_orthogonal", "generated/compliance_checker.cfutil.is_point", "generated/compliance_checker.cfutil.is_profile_incomplete", "generated/compliance_checker.cfutil.is_profile_orthogonal", "generated/compliance_checker.cfutil.is_reduced_grid", "generated/compliance_checker.cfutil.is_single_trajectory", "generated/compliance_checker.cfutil.is_timeseries", "generated/compliance_checker.cfutil.is_timeseries_profile_incomplete", "generated/compliance_checker.cfutil.is_timeseries_profile_multi_ortho_time", "generated/compliance_checker.cfutil.is_timeseries_profile_multi_station", "generated/compliance_checker.cfutil.is_timeseries_profile_ortho_depth", "generated/compliance_checker.cfutil.is_timeseries_profile_single_ortho_time", "generated/compliance_checker.cfutil.is_timeseries_profile_single_station", "generated/compliance_checker.cfutil.is_trajectory_profile_incomplete", "generated/compliance_checker.cfutil.is_trajectory_profile_orthogonal", "generated/compliance_checker.cfutil.is_unitless", "generated/compliance_checker.cfutil.is_variable_valid_ragged_array_repr_featureType", "generated/compliance_checker.cfutil.units_convertible", "generated/compliance_checker.ioos", "generated/compliance_checker.ioos.IOOS0_1Check", "generated/compliance_checker.ioos.IOOS1_1Check", "generated/compliance_checker.ioos.IOOS1_2Check", "generated/compliance_checker.ioos.IOOS1_2_ConventionsValidator", "generated/compliance_checker.ioos.IOOS1_2_PlatformIDValidator", "generated/compliance_checker.ioos.IOOSBaseCheck", "generated/compliance_checker.ioos.IOOSBaseSOSCheck", "generated/compliance_checker.ioos.IOOSNCCheck", "generated/compliance_checker.ioos.IOOSSOSDSCheck", "generated/compliance_checker.ioos.IOOSSOSGCCheck", "generated/compliance_checker.ioos.NamingAuthorityValidator", "generated/compliance_checker.protocols", "generated/compliance_checker.runner", "generated/compliance_checker.runner.ComplianceChecker", "generated/compliance_checker.runner.stdout_redirector", "generated/compliance_checker.suite", "generated/compliance_checker.suite.CheckSuite", "generated/compliance_checker.suite.extract_docstring_summary", "generated/compliance_checker.util", "generated/compliance_checker.util.dateparse", "generated/compliance_checker.util.datetime_is_iso", "generated/compliance_checker.util.kvp_convert", "index", "quickintro"], "filenames": ["compliance_checker_api.rst", "development.md", "faq.md", "generated/compliance_checker.acdd.rst", "generated/compliance_checker.acdd.ACDD1_1Check.rst", "generated/compliance_checker.acdd.ACDD1_3Check.rst", "generated/compliance_checker.acdd.ACDDBaseCheck.rst", "generated/compliance_checker.acdd.ACDDNCCheck.rst", "generated/compliance_checker.base.rst", "generated/compliance_checker.base.BaseCheck.rst", "generated/compliance_checker.base.BaseNCCheck.rst", "generated/compliance_checker.base.BaseSOSDSCheck.rst", "generated/compliance_checker.base.BaseSOSGCCheck.rst", "generated/compliance_checker.base.EmailValidator.rst", "generated/compliance_checker.base.GenericFile.rst", "generated/compliance_checker.base.RegexValidator.rst", "generated/compliance_checker.base.Result.rst", "generated/compliance_checker.base.TestCtx.rst", "generated/compliance_checker.base.UrlValidator.rst", "generated/compliance_checker.base.ValidationObject.rst", "generated/compliance_checker.base.attr_check.rst", "generated/compliance_checker.base.check_has.rst", "generated/compliance_checker.base.csv_splitter.rst", "generated/compliance_checker.base.fix_return_value.rst", "generated/compliance_checker.base.get_namespaces.rst", "generated/compliance_checker.base.maybe_get_global_attr.rst", "generated/compliance_checker.base.ratable_result.rst", "generated/compliance_checker.base.score_group.rst", "generated/compliance_checker.base.std_check.rst", "generated/compliance_checker.base.std_check_in.rst", "generated/compliance_checker.base.xpath_check.rst", "generated/compliance_checker.cf.rst", "generated/compliance_checker.cf.CF1_6Check.rst", "generated/compliance_checker.cf.CF1_7Check.rst", "generated/compliance_checker.cfutil.rst", "generated/compliance_checker.cfutil.attr_membership.rst", "generated/compliance_checker.cfutil.coordinate_dimension_matrix.rst", "generated/compliance_checker.cfutil.get_auxiliary_coordinate_variables.rst", "generated/compliance_checker.cfutil.get_axis_map.rst", "generated/compliance_checker.cfutil.get_axis_variables.rst", "generated/compliance_checker.cfutil.get_bounds_variables.rst", "generated/compliance_checker.cfutil.get_cell_boundary_map.rst", "generated/compliance_checker.cfutil.get_cell_boundary_variables.rst", "generated/compliance_checker.cfutil.get_climatology_variable.rst", "generated/compliance_checker.cfutil.get_coordinate_variables.rst", "generated/compliance_checker.cfutil.get_flag_variables.rst", "generated/compliance_checker.cfutil.get_forecast_metadata_variables.rst", "generated/compliance_checker.cfutil.get_geophysical_variables.rst", "generated/compliance_checker.cfutil.get_grid_mapping_variables.rst", "generated/compliance_checker.cfutil.get_instrument_variables.rst", "generated/compliance_checker.cfutil.get_lat_variable.rst", "generated/compliance_checker.cfutil.get_latitude_variables.rst", "generated/compliance_checker.cfutil.get_lon_variable.rst", "generated/compliance_checker.cfutil.get_longitude_variables.rst", "generated/compliance_checker.cfutil.get_platform_variables.rst", "generated/compliance_checker.cfutil.get_sea_names.rst", "generated/compliance_checker.cfutil.get_time_variable.rst", "generated/compliance_checker.cfutil.get_time_variables.rst", "generated/compliance_checker.cfutil.get_true_latitude_variables.rst", "generated/compliance_checker.cfutil.get_true_longitude_variables.rst", "generated/compliance_checker.cfutil.get_z_variable.rst", "generated/compliance_checker.cfutil.get_z_variables.rst", "generated/compliance_checker.cfutil.guess_feature_type.rst", "generated/compliance_checker.cfutil.isProfile.rst", "generated/compliance_checker.cfutil.isTimeSeries.rst", "generated/compliance_checker.cfutil.isTimeSeriesProfile.rst", "generated/compliance_checker.cfutil.isTrajectory.rst", "generated/compliance_checker.cfutil.isTrajectoryProfile.rst", "generated/compliance_checker.cfutil.is_2d_regular_grid.rst", "generated/compliance_checker.cfutil.is_2d_static_grid.rst", "generated/compliance_checker.cfutil.is_3d_regular_grid.rst", "generated/compliance_checker.cfutil.is_3d_static_grid.rst", "generated/compliance_checker.cfutil.is_cf_trajectory.rst", "generated/compliance_checker.cfutil.is_compression_coordinate.rst", "generated/compliance_checker.cfutil.is_coordinate_variable.rst", "generated/compliance_checker.cfutil.is_dataset_valid_ragged_array_repr_featureType.rst", "generated/compliance_checker.cfutil.is_dimensionless_standard_name.rst", "generated/compliance_checker.cfutil.is_geophysical.rst", "generated/compliance_checker.cfutil.is_mapped_grid.rst", "generated/compliance_checker.cfutil.is_multi_timeseries_incomplete.rst", "generated/compliance_checker.cfutil.is_multi_timeseries_orthogonal.rst", "generated/compliance_checker.cfutil.is_point.rst", "generated/compliance_checker.cfutil.is_profile_incomplete.rst", "generated/compliance_checker.cfutil.is_profile_orthogonal.rst", "generated/compliance_checker.cfutil.is_reduced_grid.rst", "generated/compliance_checker.cfutil.is_single_trajectory.rst", "generated/compliance_checker.cfutil.is_timeseries.rst", "generated/compliance_checker.cfutil.is_timeseries_profile_incomplete.rst", "generated/compliance_checker.cfutil.is_timeseries_profile_multi_ortho_time.rst", "generated/compliance_checker.cfutil.is_timeseries_profile_multi_station.rst", "generated/compliance_checker.cfutil.is_timeseries_profile_ortho_depth.rst", "generated/compliance_checker.cfutil.is_timeseries_profile_single_ortho_time.rst", "generated/compliance_checker.cfutil.is_timeseries_profile_single_station.rst", "generated/compliance_checker.cfutil.is_trajectory_profile_incomplete.rst", "generated/compliance_checker.cfutil.is_trajectory_profile_orthogonal.rst", "generated/compliance_checker.cfutil.is_unitless.rst", "generated/compliance_checker.cfutil.is_variable_valid_ragged_array_repr_featureType.rst", "generated/compliance_checker.cfutil.units_convertible.rst", "generated/compliance_checker.ioos.rst", "generated/compliance_checker.ioos.IOOS0_1Check.rst", "generated/compliance_checker.ioos.IOOS1_1Check.rst", "generated/compliance_checker.ioos.IOOS1_2Check.rst", "generated/compliance_checker.ioos.IOOS1_2_ConventionsValidator.rst", "generated/compliance_checker.ioos.IOOS1_2_PlatformIDValidator.rst", "generated/compliance_checker.ioos.IOOSBaseCheck.rst", "generated/compliance_checker.ioos.IOOSBaseSOSCheck.rst", "generated/compliance_checker.ioos.IOOSNCCheck.rst", "generated/compliance_checker.ioos.IOOSSOSDSCheck.rst", "generated/compliance_checker.ioos.IOOSSOSGCCheck.rst", "generated/compliance_checker.ioos.NamingAuthorityValidator.rst", "generated/compliance_checker.protocols.rst", "generated/compliance_checker.runner.rst", "generated/compliance_checker.runner.ComplianceChecker.rst", "generated/compliance_checker.runner.stdout_redirector.rst", "generated/compliance_checker.suite.rst", "generated/compliance_checker.suite.CheckSuite.rst", "generated/compliance_checker.suite.extract_docstring_summary.rst", "generated/compliance_checker.util.rst", "generated/compliance_checker.util.dateparse.rst", "generated/compliance_checker.util.datetime_is_iso.rst", "generated/compliance_checker.util.kvp_convert.rst", "index.rst", "quickintro.md"], "titles": ["API", "Developer Notes", "Frequently Asked Questions", "Acdd <code class=\"docutils literal notranslate\"><span class=\"pre\">(compliance_checker.acdd)</span></code>", "ACDD1_1Check", "ACDD1_3Check", "ACDDBaseCheck", "ACDDNCCheck", "Base <code class=\"docutils literal notranslate\"><span class=\"pre\">(compliance_checker.base)</span></code>", "BaseCheck", "BaseNCCheck", "BaseSOSDSCheck", "BaseSOSGCCheck", "EmailValidator", "GenericFile", "RegexValidator", "Result", "TestCtx", "UrlValidator", "ValidationObject", "attr_check", "check_has", "csv_splitter", "fix_return_value", "get_namespaces", "maybe_get_global_attr", "ratable_result", "score_group", "std_check", "std_check_in", "xpath_check", "Cf <code class=\"docutils literal notranslate\"><span class=\"pre\">(compliance_checker.cf)</span></code>", "CF1_6Check", "CF1_7Check", "Cfutil <code class=\"docutils literal notranslate\"><span class=\"pre\">(compliance_checker.cfutil)</span></code>", "attr_membership", "coordinate_dimension_matrix", "get_auxiliary_coordinate_variables", "get_axis_map", "get_axis_variables", "get_bounds_variables", "get_cell_boundary_map", "get_cell_boundary_variables", "get_climatology_variable", "get_coordinate_variables", "get_flag_variables", "get_forecast_metadata_variables", "get_geophysical_variables", "get_grid_mapping_variables", "get_instrument_variables", "get_lat_variable", "get_latitude_variables", "get_lon_variable", "get_longitude_variables", "get_platform_variables", "get_sea_names", "get_time_variable", "get_time_variables", "get_true_latitude_variables", "get_true_longitude_variables", "get_z_variable", "get_z_variables", "guess_feature_type", "isProfile", "isTimeSeries", "isTimeSeriesProfile", "isTrajectory", "isTrajectoryProfile", "is_2d_regular_grid", "is_2d_static_grid", "is_3d_regular_grid", "is_3d_static_grid", "is_cf_trajectory", "is_compression_coordinate", "is_coordinate_variable", "is_dataset_valid_ragged_array_repr_featureType", "is_dimensionless_standard_name", "is_geophysical", "is_mapped_grid", "is_multi_timeseries_incomplete", "is_multi_timeseries_orthogonal", "is_point", "is_profile_incomplete", "is_profile_orthogonal", "is_reduced_grid", "is_single_trajectory", "is_timeseries", "is_timeseries_profile_incomplete", "is_timeseries_profile_multi_ortho_time", "is_timeseries_profile_multi_station", "is_timeseries_profile_ortho_depth", "is_timeseries_profile_single_ortho_time", "is_timeseries_profile_single_station", "is_trajectory_profile_incomplete", "is_trajectory_profile_orthogonal", "is_unitless", "is_variable_valid_ragged_array_repr_featureType", "units_convertible", "Ioos <code class=\"docutils literal notranslate\"><span class=\"pre\">(compliance_checker.ioos)</span></code>", "IOOS0_1Check", "IOOS1_1Check", "IOOS1_2Check", "IOOS1_2_ConventionsValidator", "IOOS1_2_PlatformIDValidator", "IOOSBaseCheck", "IOOSBaseSOSCheck", "IOOSNCCheck", "IOOSSOSDSCheck", "IOOSSOSGCCheck", "NamingAuthorityValidator", "Protocols <code class=\"docutils literal notranslate\"><span class=\"pre\">(compliance_checker.protocols)</span></code>", "Runner <code class=\"docutils literal notranslate\"><span class=\"pre\">(compliance_checker.runner)</span></code>", "ComplianceChecker", "stdout_redirector", "Suite <code class=\"docutils literal notranslate\"><span class=\"pre\">(compliance_checker.suite)</span></code>", "CheckSuite", "extract_docstring_summary", "Util <code class=\"docutils literal notranslate\"><span class=\"pre\">(compliance_checker.util)</span></code>", "dateparse", "datetime_is_iso", "kvp_convert", "compliance_checker", "IOOS Compliance Checker"], "terms": {"modul": [0, 2, 3, 101, 121, 122], "index": [0, 32, 33, 63, 96, 121, 122], "when": [1, 2, 4, 5, 6, 7, 9, 32, 33, 99, 100, 101, 104, 105, 106, 107, 108], "run": [1, 4, 5, 6, 7, 9, 32, 99, 100, 101, 104, 105, 106, 107, 108, 112, 115, 121, 122], "python": [1, 2, 115, 121], "test": [1, 17, 35, 63, 112, 115, 121], "suit": [1, 2, 10, 11, 12, 112, 115, 116, 121, 122], "mai": [1, 32, 33, 101, 122], "error": [1, 20, 32, 33, 112, 115, 122], "certain": [1, 32, 33, 101], "record": 1, "respons": 1, "remot": [1, 2, 115, 121], "queri": 1, "inform": [1, 16, 32, 33, 79, 80, 116, 121, 122], "If": [1, 16, 32, 33, 35, 63, 99, 100, 101, 112, 115, 120, 122], "fail": [1, 33, 101, 112, 115, 122], "thei": [1, 32, 33, 101, 122], "appear": [1, 32, 33], "continu": [1, 38], "ar": [1, 2, 4, 5, 6, 7, 32, 33, 43, 44, 45, 58, 59, 63, 76, 95, 99, 100, 101, 106, 122], "cach": 1, "To": [1, 32, 33, 101], "perform": [1, 4, 5, 6, 7, 100, 101, 115, 122], "us": [1, 2, 4, 5, 6, 7, 9, 16, 27, 32, 33, 58, 59, 63, 99, 100, 101, 104, 105, 106, 107, 108, 112, 115, 121], "fresh": 1, "from": [1, 4, 5, 6, 7, 9, 32, 33, 44, 99, 100, 101, 104, 105, 106, 107, 108, 112, 115, 118, 121], "servic": 1, "disabl": 1, "vcr": 1, "In": [1, 32, 33, 122], "case": [1, 32, 33, 115, 122], "clear": 1, "i": [1, 4, 5, 6, 7, 16, 17, 27, 29, 32, 33, 35, 37, 38, 44, 58, 59, 63, 64, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 112, 115, 120, 121, 122], "also": [1, 32, 33, 58, 59, 101, 122], "advis": [1, 32, 33], "The": [2, 4, 5, 6, 7, 9, 32, 33, 35, 38, 41, 44, 63, 99, 100, 101, 104, 105, 106, 107, 108, 112, 115, 121], "base": [2, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 99, 100, 101, 104, 105, 106, 107, 108, 112, 115, 121, 122], "tool": [2, 121], "data": [2, 4, 5, 6, 7, 32, 33, 37, 44, 55, 63, 65, 75, 96, 101, 121], "provid": [2, 32, 33, 121], "complet": [2, 33, 122], "commun": [2, 122], "standard": [2, 32, 33, 58, 59, 76, 100, 101, 115, 121], "local": [2, 115, 121], "netcdf": [2, 4, 5, 6, 7, 10, 32, 33, 36, 37, 38, 41, 42, 44, 47, 50, 51, 52, 53, 58, 59, 60, 61, 62, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 115, 122], "file": [2, 14, 32, 33, 63, 112, 115, 121], "against": [2, 5, 32, 33, 35, 121], "cf": [2, 32, 33, 37, 43, 44, 58, 59, 63, 65, 72, 76, 78, 79, 80, 96, 100, 101, 121], "acdd": [2, 4, 5, 6, 7, 121], "command": [2, 112, 115, 121], "line": [2, 32, 33, 112, 115, 121], "librari": [2, 122], "integr": [2, 122], "other": [2, 32, 33, 58, 59, 122], "softwar": [2, 122], "you": [2, 122], "current": [2, 4, 5, 6, 7, 9, 32, 33, 99, 100, 101, 104, 105, 106, 107, 108, 121], "view": [2, 32], "web": [2, 121], "It": [2, 32, 33, 44, 101, 122], "wa": [2, 101, 115, 122], "develop": [2, 121, 122], "enabl": [2, 122], "broader": [2, 122], "audienc": [2, 122], "improv": [2, 122], "access": [2, 122], "With": [2, 122], "simpli": [2, 58, 59, 122], "link": [2, 5, 100, 122], "upload": [2, 122], "get": [2, 122], "full": [2, 122], "capabl": [2, 122], "offer": [2, 122], "support": [2, 10, 11, 12, 32, 112, 122], "follow": [2, 32, 33, 100, 101, 122], "sourc": [2, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 115, 116, 118, 119, 120, 122], "1": [2, 4, 5, 6, 7, 9, 10, 32, 33, 43, 44, 76, 78, 79, 80, 95, 99, 100, 101, 102, 104, 105, 106, 107, 108, 112, 115, 121], "3": [2, 4, 5, 6, 7, 9, 21, 32, 33, 76, 99, 100, 101, 104, 105, 106, 107, 108, 115, 121], "6": [2, 32, 33, 43, 78, 79, 80, 121], "7": [2, 32, 33, 43, 101, 122], "2": [2, 4, 5, 6, 7, 9, 10, 16, 27, 32, 33, 44, 79, 80, 99, 100, 101, 102, 104, 105, 106, 107, 108, 112, 115, 120, 121], "glider": [2, 101, 122], "dac": [2, 122], "ncei": [2, 55, 101, 122], "0": [2, 4, 5, 7, 10, 17, 32, 33, 79, 80, 99, 100, 101, 106, 107, 108, 112, 115, 122], "ye": 2, "pleas": [2, 27, 33, 122], "suppli": [2, 32, 33, 122], "url": [2, 18, 101, 109, 112, 115, 122], "without": [2, 116, 122], "extens": [2, 32, 33, 122], "For": [2, 32, 33, 38, 79, 80, 96, 101], "exampl": [2, 32, 38, 43, 121], "thi": [2, 3, 4, 5, 6, 7, 9, 16, 20, 27, 32, 33, 38, 44, 62, 63, 64, 79, 80, 96, 99, 100, 101, 104, 105, 106, 107, 108, 115, 122], "morro": 2, "bai": [2, 122], "should": [2, 13, 15, 18, 19, 32, 33, 100, 101, 102, 103, 109, 112, 122], "like": [2, 38, 58, 59, 77, 101, 115], "so": [2, 11, 12, 32, 33, 101, 108, 115, 122], "http": [2, 32, 33, 55, 79, 80, 100, 101, 107, 108, 122], "sensor": [2, 11, 107], "tabledap": [2, 122], "bs1": 2, "met": 2, "site": 2, "5": [2, 32, 33, 58, 59, 101], "There": [2, 100], "sure": [2, 122], "out": [2, 4, 5, 6, 7, 115, 122], "detail": [2, 100, 101, 122], "how": [2, 32, 33, 121], "here": [2, 122], "open": [2, 4, 5, 6, 7, 32, 33, 36, 37, 38, 39, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 61, 62, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 122], "avail": [2, 122], "github": [2, 100, 101, 122], "object": [2, 4, 5, 6, 7, 9, 16, 17, 32, 33, 35, 50, 51, 53, 61, 99, 100, 101, 104, 105, 106, 107, 108, 115, 122], "your": [2, 4, 5, 6, 7, 9, 27, 99, 100, 101, 104, 105, 106, 107, 108, 121, 122], "our": [2, 122], "interpret": [2, 32, 33, 122], "select": [2, 32, 33, 122], "metadata": [2, 4, 5, 6, 7, 32, 33, 46, 100, 101, 122], "guidelin": [2, 122], "gener": [2, 112, 115, 117, 122], "compliant": [2, 32, 33, 122], "consid": [2, 33, 95, 122], "authorit": [2, 100, 122], "whether": [2, 17, 30, 32, 96, 122], "100": [2, 122], "instead": [2, 32, 33, 101, 122], "we": [2, 4, 5, 6, 7, 32, 33, 122], "recommend": [2, 4, 5, 6, 7, 32, 33, 100, 101, 122], "user": [2, 32, 33, 101, 112, 115, 122], "result": [2, 13, 15, 17, 18, 19, 20, 23, 26, 32, 33, 101, 102, 103, 109, 112, 115, 121], "guid": [2, 32, 33, 122], "work": [2, 122], "toward": [2, 32, 33, 122], "check": [3, 4, 5, 6, 7, 9, 10, 11, 12, 16, 20, 21, 29, 30, 32, 33, 35, 62, 64, 66, 68, 69, 70, 71, 72, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 112, 115, 117, 121], "attribut": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 18, 19, 20, 21, 32, 33, 35, 42, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 115, 120, 122], "convent": [3, 4, 5, 6, 7, 32, 33, 79, 80, 122], "dataset": [3, 4, 5, 6, 7, 10, 14, 20, 21, 28, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 106, 112, 115, 121], "discoveri": 3, "contain": [3, 20, 29, 30, 32, 33, 35, 37, 38, 100, 101, 102, 109, 122], "class": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 31, 32, 33, 35, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 114, 115, 122], "defin": [3, 4, 5, 6, 7, 9, 32, 33, 37, 39, 44, 45, 58, 59, 60, 73, 76, 99, 100, 101, 104, 105, 106, 107, 108, 122], "part": [3, 63, 95, 121], "complianc": [3, 8, 27, 32, 33, 100, 101, 112, 114, 115, 117, 121], "checker": [3, 4, 5, 6, 7, 8, 9, 16, 23, 27, 32, 33, 99, 100, 101, 104, 105, 106, 107, 108, 112, 114, 115, 121], "project": [3, 58, 59, 122], "verif": 3, "score": [3, 17, 27, 112, 115, 122], "compliance_check": [4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 115, 116, 118, 119, 120, 122], "method": [4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 32, 33, 65, 66, 67, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 115], "std_check": [4, 5, 7, 10, 32, 33, 99, 100, 101, 106, 121], "summari": [4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 32, 33, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 115, 122], "document": [4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 32, 33, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 115, 122], "high": [4, 5, 6, 7, 9, 32, 33, 99, 100, 101, 104, 105, 106, 107, 108, 122], "low": [4, 5, 6, 7, 9, 32, 33, 99, 100, 101, 104, 105, 106, 107, 108, 122], "medium": [4, 5, 6, 7, 9, 32, 33, 99, 100, 101, 104, 105, 106, 107, 108, 122], "register_check": [4, 5, 32, 33, 99, 100, 101, 105, 107, 108], "true": [4, 5, 16, 17, 32, 33, 58, 59, 63, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 101, 105, 107, 108, 115], "supported_d": [4, 5, 6, 7, 9, 10, 11, 12, 32, 33, 99, 100, 101, 104, 105, 106, 107, 108], "netcdf4": [4, 5, 6, 7, 10, 14, 20, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 106], "_netcdf4": [4, 5, 7, 10, 32, 33, 99, 100, 101, 106], "__init__": [4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 32, 33, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 115], "check_acknowledg": [4, 5, 6, 7], "d": [4, 5, 6, 7, 9, 20, 25, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54, 56, 57, 73, 74, 77, 95, 99, 100, 101, 104, 105, 106, 107, 108, 115, 122], "acknowledg": [4, 5, 6, 7, 121], "present": [4, 5, 6, 7, 10, 32, 33, 99, 100, 101, 106, 122], "becaus": [4, 5, 6, 7, 32, 33, 122], "ha": [4, 5, 6, 7, 14, 21, 26, 32, 33, 35, 65, 101, 122], "its": [4, 5, 6, 7, 32, 33, 41, 44, 96, 101], "own": [4, 5, 6, 7, 122], "keep": [4, 5, 6, 7], "global": [4, 5, 6, 7, 32, 33, 99, 101, 122], "even": [4, 5, 6, 7], "though": [4, 5, 6, 7], "attr": [4, 5, 6, 7, 10, 32, 33, 99, 100, 101, 106], "paramet": [4, 5, 6, 7, 9, 20, 32, 33, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 115, 116, 118, 120], "an": [4, 5, 6, 7, 9, 15, 20, 29, 32, 33, 36, 37, 38, 39, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 61, 62, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 104, 105, 106, 107, 108, 115, 118, 120, 121, 122], "check_high": [4, 5, 6, 7, 100, 101, 107, 108], "each": [4, 5, 6, 7, 32, 33, 92, 100, 101, 122], "highli": [4, 5, 6, 7, 32, 33, 100, 101, 122], "exist": [4, 5, 6, 7, 9, 32, 33, 35, 43, 99, 100, 101, 104, 105, 106, 107, 108, 122], "check_lat_ext": [4, 5, 6, 7], "valu": [4, 5, 6, 7, 10, 13, 15, 16, 17, 18, 19, 23, 26, 29, 32, 33, 35, 38, 44, 99, 100, 101, 102, 103, 106, 109, 112, 115, 120], "geospatial_lat_min": [4, 5, 6, 7], "geospatial_lat_max": [4, 5, 6, 7], "approxim": [4, 5, 6, 7], "match": [4, 5, 6, 7, 30, 32, 33, 50, 51, 53, 61, 65, 101, 112, 122], "check_lon_ext": [4, 5, 6, 7], "geospatial_lon_min": [4, 5, 6, 7], "geospatial_lon_max": [4, 5, 6, 7], "check_recommend": [4, 5, 6, 7, 100, 101, 107, 108], "check_suggest": [4, 5, 6, 7, 107, 108], "suggest": [4, 5, 6, 7, 32, 33], "check_time_ext": [4, 5, 6, 7], "time_coverage_start": [4, 5, 6, 7], "time_coverage_end": [4, 5, 6, 7], "check_var_long_nam": [4, 5, 6, 7], "applic": [4, 5, 6, 7, 32, 33, 101, 122], "variabl": [4, 5, 6, 7, 9, 17, 20, 32, 33, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 104, 105, 106, 107, 108, 122], "long_nam": [4, 5, 6, 7, 32, 33, 100, 122], "check_var_standard_nam": [4, 5, 6, 7], "standard_nam": [4, 5, 6, 7, 32, 33, 58, 59, 76, 99, 101, 122], "check_var_unit": [4, 5, 6, 7], "unit": [4, 5, 6, 7, 32, 33, 58, 59, 76, 95, 97, 99, 101, 122], "check_vertical_ext": [4, 5, 6, 7], "geospatial_vertical_min": [4, 5, 6, 7], "geospatial_vertical_max": [4, 5, 6, 7], "get_applicable_vari": [4, 5, 6, 7], "return": [4, 5, 6, 7, 9, 10, 16, 17, 20, 22, 23, 26, 32, 33, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 112, 115, 116, 118, 120, 122], "list": [4, 5, 6, 7, 20, 22, 32, 33, 37, 39, 42, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 57, 58, 59, 61, 101, 112, 115, 120, 122], "name": [4, 5, 6, 7, 9, 10, 16, 20, 26, 28, 29, 32, 33, 38, 41, 42, 44, 47, 54, 55, 60, 62, 63, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 104, 105, 106, 107, 108, 109, 112, 115, 121], "includ": [4, 5, 6, 7, 32, 33, 76, 101, 112, 122], "geophys": [4, 5, 6, 7, 32, 33, 47, 77, 100, 101], "coordin": [4, 5, 6, 7, 32, 33, 36, 37, 38, 44, 56, 57, 58, 59, 73, 74, 101, 122], "onli": [4, 5, 6, 7, 32, 33, 88, 90, 91, 101, 122], "get_test_ctx": [4, 5, 6, 7, 9, 32, 33, 99, 100, 101, 104, 105, 106, 107, 108], "sever": [4, 5, 6, 7, 9, 20, 32, 33, 99, 100, 101, 104, 105, 106, 107, 108], "none": [4, 5, 6, 7, 9, 13, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 32, 33, 43, 63, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 115, 120], "creat": [4, 5, 6, 7, 9, 32, 33, 99, 100, 101, 104, 105, 106, 107, 108, 122], "testctx": [4, 5, 6, 7, 9, 32, 33, 99, 100, 101, 104, 105, 106, 107, 108, 121], "_defined_result": [4, 5, 6, 7, 9, 32, 33, 99, 100, 101, 104, 105, 106, 107, 108], "dict": [4, 5, 6, 7, 9, 32, 33, 99, 100, 101, 104, 105, 106, 107, 108, 112, 122], "doe": [4, 5, 6, 7, 9, 32, 33, 69, 71, 99, 100, 101, 104, 105, 106, 107, 108, 121, 122], "instanc": [4, 5, 6, 7, 9, 16, 32, 33, 99, 100, 101, 104, 105, 106, 107, 108, 115], "modif": [4, 5, 6, 7, 9, 32, 33, 99, 100, 101, 104, 105, 106, 107, 108], "take": [4, 5, 6, 7, 9, 32, 33, 99, 100, 101, 104, 105, 106, 107, 108, 122], "level": [4, 5, 6, 7, 9, 20, 32, 33, 99, 100, 101, 104, 105, 106, 107, 108, 112, 115, 122], "two": [4, 5, 6, 7, 9, 32, 33, 65, 99, 100, 101, 104, 105, 106, 107, 108], "element": [4, 5, 6, 7, 9, 30, 32, 33, 99, 100, 101, 104, 105, 106, 107, 108, 120], "tupl": [4, 5, 6, 7, 9, 16, 20, 32, 33, 99, 100, 101, 104, 105, 106, 107, 108, 115, 120], "form": [4, 5, 6, 7, 9, 32, 33, 99, 100, 101, 104, 105, 106, 107, 108, 122], "argument": [4, 5, 6, 7, 9, 32, 33, 99, 100, 101, 104, 105, 106, 107, 108, 115, 122], "kei": [4, 5, 6, 7, 9, 32, 33, 38, 99, 100, 101, 104, 105, 106, 107, 108, 112, 120, 122], "int": [4, 5, 6, 7, 9, 20, 32, 33, 99, 100, 101, 104, 105, 106, 107, 108, 115], "A": [4, 5, 6, 7, 9, 32, 33, 35, 44, 97, 99, 100, 101, 104, 105, 106, 107, 108, 116, 122], "basecheck": [4, 5, 6, 7, 32, 33, 99, 100, 101, 104, 105, 106, 107, 108, 121], "str": [4, 5, 6, 7, 9, 20, 32, 33, 35, 38, 43, 62, 63, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 115, 116, 118], "rtype": [4, 5, 6, 7, 9, 17, 32, 33, 99, 100, 101, 104, 105, 106, 107, 108], "new": [4, 5, 6, 7, 9, 32, 33, 99, 100, 101, 104, 105, 106, 107, 108, 112], "taken": [4, 5, 6, 7, 9, 32, 33, 99, 100, 101, 104, 105, 106, 107, 108, 122], "": [4, 5, 6, 7, 9, 16, 32, 33, 77, 99, 100, 101, 104, 105, 106, 107, 108, 112, 122], "setup": [4, 5, 6, 7, 9, 32, 33, 99, 100, 101, 104, 105, 106, 107, 108], "common": [4, 5, 6, 7, 9, 32, 33, 99, 100, 101, 104, 105, 106, 107, 108], "automat": [4, 5, 6, 7, 9, 99, 100, 101, 104, 105, 106, 107, 108], "checksuit": [4, 5, 6, 7, 9, 99, 100, 101, 104, 105, 106, 107, 108, 121, 122], "classmethod": [4, 5, 7, 10, 32, 33, 99, 100, 101, 106, 112, 115], "std_check_in": [4, 5, 7, 10, 32, 33, 99, 100, 101, 106, 121], "allowed_v": [4, 5, 7, 10, 29, 32, 33, 99, 100, 101, 106], "correct": [4, 5, 6, 7, 10, 32, 33, 99, 100, 101, 106, 122], "good": [4, 5, 7, 10, 32, 33, 99, 100, 101, 106], "verify_convention_vers": [4, 5, 6, 7], "verifi": [4, 5, 6, 7, 65, 101], "version": [4, 5, 6, 7, 32, 33, 100, 101, 121, 122], "field": [4, 5, 6, 7, 32, 33, 122], "verify_geospatial_bound": [4, 5, 6, 7], "geospati": [4, 5, 6, 7], "bound": [4, 5, 6, 7, 32, 33, 42, 43], "well": [4, 5, 6, 7, 101, 115], "ogc": [4, 5, 6, 7], "wkt": [4, 5, 6, 7], "check_id_has_no_blank": 5, "blank": [5, 32, 33, 101], "id": [5, 101], "check_metadata_link": 5, "ration": 5, "manner": 5, "check_var_coverage_content_typ": 5, "coverag": 5, "content": [5, 32, 33, 122], "type": [5, 32, 33, 35, 43, 44, 46, 62, 72, 78, 81, 82, 83, 84, 86, 96, 100, 101, 116, 122], "valid": [5, 13, 15, 18, 19, 20, 32, 33, 63, 75, 96, 101, 102, 103, 109, 122], "iso": [5, 101, 118, 119], "19115": 5, "code": [5, 32, 33, 35, 55, 63, 122], "function": [8, 13, 15, 16, 18, 19, 20, 21, 26, 34, 35, 63, 102, 103, 109, 111, 112, 114, 117, 120, 122], "option": [9, 32, 33, 99, 104, 105, 106, 107, 108, 112, 115, 122], "arg": [10, 11, 12, 112, 115], "kwarg": [10, 11, 12, 112], "describesensor": [11, 122], "owslib": [11, 12, 107, 108], "swe": [11, 12, 107, 108], "sml": [11, 107], "sensorml": [11, 107, 115], "getcap": [12, 122], "observ": [12, 108], "sos100": [12, 108], "sensorobservationservice_1_0_0": [12, 108], "split_func": [13, 15, 18, 19, 102, 103, 109], "validate_typ": [13, 15, 18, 19, 102, 103, 109], "validator_fail_msg": [13, 15, 18, 19, 102, 103, 109], "must": [13, 15, 18, 32, 33, 44, 96, 99, 100, 101, 102, 103, 122], "email": 13, "address": 13, "input_nam": [13, 15, 18, 19, 102, 103, 109], "input_valu": [13, 15, 18, 19, 102, 103, 109], "validator_func": [13, 15, 18, 19, 102, 103, 109], "self": [13, 15, 18, 19, 32, 33, 102, 103, 109], "given": [13, 15, 16, 18, 19, 21, 32, 33, 102, 103, 109, 122], "input": [13, 15, 18, 19, 102, 103, 109, 118, 121], "fpath": 14, "simpl": [14, 17, 20, 32, 33], "ani": [14, 16, 32, 33, 37, 63, 96, 101, 112, 122], "same": [14, 32, 33, 35, 44, 92, 100, 122], "path": [14, 112, 115, 122], "lookup": 14, "filepath": 14, "empti": [15, 112, 122], "string": [15, 22, 32, 33, 41, 62, 97, 100, 101, 102, 109, 112, 115, 118, 120, 122], "validator_regex": [15, 102, 103], "weight": [16, 26, 115, 122], "msg": [16, 26], "children": 16, "check_method": 16, "variable_nam": [16, 26], "hold": [16, 17], "store": [16, 32, 33], "fals": [16, 97, 101], "pass": [16, 17, 20, 33, 35, 115, 120, 122], "total": [16, 122], "skip": [16, 112, 122], "granular": 16, "messag": [16, 17, 20, 101, 122], "hierarchi": 16, "cast": [16, 35], "boolean": [16, 17, 32, 33, 96], "bool": [16, 17, 96, 115], "produc": 16, "serial": [16, 115], "serializ": [16, 115], "dictionari": [16, 36, 38, 41, 115], "repres": [16, 32, 33, 38, 42, 46, 63, 88, 89, 91, 92, 95, 97, 100], "categori": 17, "descript": [17, 32, 33], "out_of": [17, 115], "struct": 17, "compil": [17, 115], "to_result": 17, "add_failur": 17, "add": [17, 32, 115, 122], "failur": [17, 20, 112, 115, 122], "along": [17, 20, 32, 33], "add_pass": 17, "condit": [17, 32, 33], "assert_tru": 17, "increment": [17, 32, 33], "otherwis": 17, "append": 17, "indic": [17, 32, 33, 96, 101, 115], "expected_typ": 19, "kvp": 20, "prioriti": [20, 21, 33, 122], "ret_val": 20, "gname": [20, 21], "var_nam": 20, "handl": 20, "presenc": 20, "one": [20, 30, 32, 33, 44, 63, 65, 101, 121], "statu": [20, 32, 33], "event": 20, "mutat": [20, 32, 33], "l": [20, 122], "func": [20, 21], "being": [20, 32, 33, 35, 64, 112], "param": [20, 21, 33, 99, 112, 115, 116], "group": [20, 27, 101, 115, 122], "assign": [20, 32, 33], "which": [20, 32, 33, 35, 100, 101, 115, 122], "decor": 21, "wrap": 21, "input_str": 22, "split": 22, "csv": 22, "format": [22, 32, 33, 55, 101, 112, 119, 122], "flatten": 22, "v": [23, 122], "method_nam": 23, "transform": [23, 32, 33, 115], "scalar": [23, 32, 33], "attr_nam": 25, "partial": 26, "been": [26, 32, 33, 122], "group_nam": 27, "warn": [27, 33, 35, 101, 122], "deprec": [27, 33], "v3": 27, "do": [27, 32, 33], "updat": 27, "plugin": [27, 115, 122], "necessari": [27, 32, 33, 122], "base_context": 29, "within": [29, 32, 33, 101, 109], "iter": [29, 120], "tree": 30, "xpath": 30, "more": [30, 32, 33, 79, 80, 121, 122], "specif": [32, 33, 65, 101, 122], "implement": [32, 33, 100, 101, 122], "cfbasecheck": 32, "These": [32, 33, 122], "translat": 32, "cfconvent": [32, 33, 79, 80, 122], "org": [32, 33, 79, 80, 101, 107, 108, 122], "v1": [32, 33, 79, 80, 100, 101, 122], "html": [32, 33, 79, 80, 100, 101, 112, 115, 121], "appendix_a": [32, 33], "attr_loc": [32, 33], "g": [32, 33, 44, 96, 109, 122], "cf_section": [32, 33], "_fillvalu": [32, 33], "c": [32, 33, 38, 112, 122], "add_offset": [32, 33, 122], "n": [32, 33, 107, 108], "8": [32, 33, 43, 122], "ancillary_vari": [32, 33], "4": [32, 33, 58, 59, 101, 122], "axi": [32, 33, 38, 39, 60, 101], "calendar": [32, 33], "cell_measur": [32, 33], "cell_method": [32, 33], "cf_role": [32, 33, 65, 101], "9": [32, 33, 63, 103, 122], "climatologi": [32, 33, 43], "compress": [32, 33, 38, 73], "featuretyp": [32, 33, 65, 66, 96, 100, 101], "flag_mask": [32, 33], "flag_mean": [32, 33, 101], "flag_valu": [32, 33, 101], "formula_term": [32, 33], "grid_map": [32, 33], "histori": [32, 33, 122], "institut": [32, 33, 101, 122], "leap_month": [32, 33], "leap_year": [32, 33], "missing_valu": [32, 33], "month_length": [32, 33], "posit": [32, 33, 101, 122], "refer": [32, 33, 46, 58, 59, 101, 122], "scale_factor": [32, 33, 122], "standard_error_multipli": [32, 33], "titl": [32, 33, 115], "valid_max": [32, 33], "valid_min": [32, 33], "valid_rang": [32, 33], "appendix_d_parametric_coord": [32, 33], "atmosphere_hybrid_height_coordin": [32, 33], "b": [32, 33, 102], "orog": [32, 33], "altitud": [32, 33], "height_above_geopotential_datum": [32, 33], "atmosphere_hybrid_sigma_pressure_coordin": [32, 33], "p": [32, 33], "ap": [32, 33], "air_pressur": [32, 33], "atmosphere_ln_pressure_coordin": [32, 33], "lev": [32, 33], "p0": [32, 33], "atmosphere_sigma_coordin": [32, 33], "ptop": [32, 33], "sigma": [32, 33], "atmosphere_sleve_coordin": [32, 33], "b1": [32, 33], "b2": [32, 33], "zsurf1": [32, 33], "zsurf2": [32, 33], "ztop": [32, 33], "ocean_double_sigma_coordin": [32, 33], "depth": [32, 33, 60, 87, 89, 90, 93, 94, 122], "href": [32, 33], "k_c": [32, 33], "z1": [32, 33], "z2": [32, 33], "sea_floor_depth_below_geoid": [32, 33], "eta": [32, 33], "sea_surface_height_above_geoid": [32, 33], "zlev": [32, 33], "sea_floor_depth_below_geopotential_datum": [32, 33], "sea_surface_height_above_geopotential_datum": [32, 33], "height_above_mean_sea_level": [32, 33], "sea_floor_depth_below_mean_sea_level": [32, 33], "sea_surface_height_above_mean_sea_level": [32, 33], "height_above_reference_ellipsoid": [32, 33], "sea_floor_depth_below_reference_ellipsoid": [32, 33], "sea_surface_height_above_reference_ellipsoid": [32, 33], "ocean_s_coordin": [32, 33], "depth_c": [32, 33], "ocean_sigma_coordin": [32, 33], "ocean_sigma_z_coordin": [32, 33], "check_add_offset_scale_factor_typ": [32, 33], "OR": [32, 33], "byte": [32, 33], "short": [32, 33, 122], "float": [32, 33, 122], "doubl": [32, 33, 122], "check_ancillary_vari": [32, 33], "all": [32, 33, 51, 53, 61, 64, 99, 100, 101, 112, 115, 122], "ensur": [32, 33, 99, 122], "whose": [32, 33], "separ": [32, 33, 100, 122], "natur": [32, 33], "relationship": [32, 33], "between": [32, 33, 122], "associ": [32, 33, 76], "via": [32, 33, 112, 122], "determin": [32, 33, 112, 122], "often": [32, 33], "have": [32, 33, 35, 76, 96, 99, 101, 122], "point": [32, 33, 81, 115, 122], "them": [32, 33, 122], "modifi": [32, 33], "appendix": [32, 33, 122], "check_appendix_a": [32, 33], "tabl": [32, 33, 76, 100], "locat": [32, 33, 112, 122], "outcom": [32, 33], "docstr": [32, 33, 116], "var": [32, 33, 101], "correspond": [32, 33, 78, 84, 100, 101], "check_aux_coordin": [32, 33], "chapter": [32, 33, 58, 59], "paragraph": [32, 33], "dimens": [32, 33, 36, 44, 96, 101], "auxiliari": [32, 33, 37], "subset": [32, 33], "except": [32, 33, 101, 112, 115], "first": [32, 33, 50, 63, 122], "section": [32, 33, 122], "label": [32, 33], "maximum": [32, 33], "length": [32, 33, 92, 101], "second": [32, 33, 122], "rag": [32, 33, 63, 75, 96], "arrai": [32, 33, 63, 75, 79, 80, 96], "represent": [32, 33, 63, 75, 79, 80, 96], "discret": [32, 33, 38, 63], "sampl": [32, 33, 63, 96, 122], "geometri": [32, 33, 63], "special": [32, 33, 101], "need": [32, 33, 115, 122], "connect": [32, 33], "check_calendar": [32, 33], "time": [32, 33, 38, 44, 46, 56, 57, 69, 71, 79, 80, 86, 87, 88, 89, 90, 91, 92, 99, 100, 101, 106, 122], "prescrib": [32, 33], "order": [32, 33, 44, 122], "calcul": [32, 33, 122], "date": [32, 33, 101, 119], "know": [32, 33], "what": [32, 33, 79, 80, 121], "gregorian": [32, 33], "proleptic_gregorian": [32, 33], "noleap": [32, 33], "365_dai": [32, 33], "all_leap": [32, 33], "366_dai": [32, 33], "360_dai": [32, 33], "julian": [32, 33], "set": [32, 33, 35, 65, 75, 99, 100, 101, 106], "climat": [32, 33], "experi": [32, 33], "simul": [32, 33], "fix": [32, 33], "year": [32, 33], "abov": [32, 33], "appli": [32, 33, 35, 101], "non": [32, 33, 58, 59, 122], "can": [32, 33, 38, 58, 59, 63, 97, 100, 101, 112, 115, 121, 122], "month": [32, 33], "explicitli": [32, 33], "leap": [32, 33], "requir": [32, 33, 100, 101], "suffici": [32, 33], "appropri": [32, 33, 115], "howev": [32, 33, 101, 122], "allow": [32, 33, 44, 122], "check_cell_boundari": [32, 33], "cell": [32, 33, 42, 43], "boundari": [32, 33, 41, 42, 43], "vertic": [32, 33, 101, 122], "than": [32, 33, 122], "addit": [32, 33, 101, 122], "most": [32, 33, 100], "rapidli": 32, "vari": [32, 69, 71, 122], "size": [32, 122], "number": [32, 33, 95, 122], "process": [32, 122], "adjac": 32, "share": [32, 33, 100], "edg": 32, "facilit": 32, "restrict": [32, 33], "place": [32, 33], "lat": [32, 99, 100, 101, 106], "latbnd": 32, "x": [32, 33, 38, 122], "interv": [32, 33], "endpoint": [32, 122], "consist": [32, 33], "e": [32, 33, 44, 76, 96, 109, 122], "increas": [32, 33, 122], "impli": [32, 33], "contigu": [32, 63, 96], "ident": 32, "where": [32, 58, 59, 121], "occur": [32, 112], "grid": [32, 33, 38, 48, 68, 69, 70, 71, 78, 84, 101, 122], "side": 32, "horizont": [32, 33, 84], "describ": [32, 33, 43, 57, 62, 122], "dimension": [32, 33, 44, 100, 101], "latitud": [32, 33, 38, 50, 51, 58], "m": [32, 33, 122], "longitud": [32, 33, 38, 52, 53, 59], "lon": [32, 99, 100, 101, 106], "four": [32, 33, 63], "lonbnd": 32, "trail": 32, "over": [32, 33], "multi": [32, 88], "travers": 32, "anticlockwis": 32, "plane": 32, "start": 32, "vertex": 32, "specifi": [32, 33, 122], "check_cell_measur": [32, 33], "extra": [32, 33], "about": [32, 33, 101, 121], "spatial": [32, 33], "properti": [32, 33, 122], "compris": [32, 33], "pair": [32, 33, 120], "word": [32, 33], "measur": [32, 33, 101], "area": [32, 33], "volum": [32, 33], "relat": [32, 33, 100, 101], "check_cell_method": [32, 33], "characterist": [32, 33], "identifi": [32, 33, 44, 101, 122], "deriv": [32, 33, 115], "sum": [32, 33, 122], "mean": [32, 33, 79, 80, 112, 122], "minimum": [32, 33], "mid_rang": [32, 33], "standard_devi": [32, 33], "varianc": [32, 33], "mode": [32, 33], "median": [32, 33], "signific": [32, 33], "some": [32, 33, 122], "chang": [32, 33, 122], "default": [32, 33, 122], "intens": [32, 33], "quantiti": [32, 33, 38, 100], "differ": [32, 33, 122], "distinct": [32, 33], "understood": [32, 33], "everi": [32, 33, 122], "interest": [32, 33, 122], "unless": [32, 33, 101], "would": [32, 33, 101, 122], "meaning": [32, 33], "especi": [32, 33], "spatio": [32, 33], "tempor": [32, 33], "check_cf_rol": [32, 33], "legal": [32, 33], "accept": [32, 33, 101], "timeseries_id": [32, 33, 65, 101], "profile_id": [32, 33, 65, 101], "trajectory_id": [32, 33, 101], "check_child_attr_data_typ": [32, 33], "parent": [32, 33], "nug": [32, 33], "doc": [32, 33, 115], "unidata": [32, 33, 109], "ucar": [32, 33, 109], "edu": [32, 33, 109, 122], "attribute_convent": [32, 33], "referenc": [32, 33, 100], "miss": [32, 33, 44], "check_climatological_statist": [32, 33], "climatolog": [32, 33], "begin": [32, 33], "subinterv": [32, 33], "end": [32, 33, 122], "last": [32, 33], "evalu": [32, 33], "statist": [32, 33], "recognis": [32, 33], "nonetheless": [32, 33], "abl": [32, 33, 122], "make": [32, 33], "reason": [32, 33, 122], "variat": [32, 33], "among": [32, 33], "dai": [32, 33], "those": [32, 33, 76, 101], "entri": [32, 33, 122], "standardis": [32, 33], "parenthes": [32, 33], "after": [32, 33], "method1": [32, 33], "method2": [32, 33], "method3": [32, 33], "check_compression_gath": [32, 33], "At": [32, 33], "interfac": [32, 33], "pack": [32, 33, 122], "achiev": [32, 33], "through": [32, 33, 42, 122], "read": [32, 33], "multipli": [32, 33, 122], "ad": [32, 33], "both": [32, 33, 99, 100, 101, 106, 122], "scale": [32, 33], "befor": [32, 33], "offset": [32, 33], "written": [32, 33], "subtract": [32, 33], "divid": [32, 33], "factor": [32, 33], "unpack": [32, 33], "respect": [32, 33], "ambigu": [32, 33], "precis": [32, 33], "problem": [32, 33], "convers": [32, 33], "resolv": [32, 33], "assum": [32, 33, 101], "potenti": [32, 33, 122], "loss": [32, 33], "see": [32, 33, 43, 75, 79, 80, 122], "discuss": [32, 33], "treat": [32, 33], "check_convention_glob": [32, 33], "check_convention_possibly_var_attr": [32, 33], "under": [32, 33], "comment": [32, 33, 75], "either": [32, 33, 101, 109, 112, 115, 122], "individu": [32, 33], "preced": [32, 33], "check_conventions_vers": [32, 33], "version_numb": [32, 33], "check_coordinate_typ": [32, 33], "attach": [32, 33], "y": [32, 33, 38], "z": [32, 33, 60, 61, 99, 101], "t": [32, 33, 38, 122], "stand": [32, 33], "altern": [32, 33, 122], "direct": [32, 33], "identif": [32, 33], "check_coordinate_variables_strict_monoton": [32, 33], "monoton": [32, 33, 44], "decreas": [32, 33], "check_data_typ": [32, 33], "char": [32, 33], "real": [32, 33], "check_dimension_nam": [32, 33], "duplic": [32, 33, 99], "zero": [32, 33], "check_dimension_ord": [32, 33], "height": [32, 33, 60], "rel": [32, 33], "cdl": [32, 33, 115, 122], "definit": [32, 33, 51, 53, 58, 59, 61], "whenev": [32, 33], "possibl": [32, 33, 122], "left": [32, 33], "spatiotempor": [32, 33], "check_dimensional_vertical_coordin": [32, 33], "dimless_vertical_coordin": [32, 33], "per": [32, 33, 63, 101], "udunit": [32, 33, 100, 101], "dat": [32, 33], "pressur": [32, 33, 101, 122], "ax": [32, 33], "commonli": [32, 33], "bar": [32, 33], "millibar": [32, 33], "decibar": [32, 33], "atmospher": [32, 33], "atm": [32, 33], "pascal": [32, 33], "pa": [32, 33], "hpa": [32, 33], "meter": [32, 33, 101], "metr": [32, 33], "kilomet": [32, 33], "km": [32, 33], "circumst": [32, 33], "densiti": [32, 33, 38], "temperatur": [32, 33, 38], "plural": [32, 33], "check_dimensionless_vertical_coordin": [32, 33], "dimensionless": [32, 33, 76], "map": [32, 33, 36, 41, 48, 78, 115, 120], "uniqu": [32, 33], "term": [32, 33, 37], "maintain": [32, 33], "backward": [32, 33], "compat": [32, 33], "coard": [32, 33], "strongli": [32, 33], "check_duplicate_axi": [32, 33], "wai": [32, 33, 63, 122], "permiss": [32, 33], "check_feature_typ": [32, 33, 101], "orthogon": [32, 33, 63, 80, 83, 88, 89, 90, 91, 94, 122], "multidimension": [32, 33, 63, 79, 80], "insensit": [32, 33], "check_filenam": [32, 33], "filenam": [32, 33, 122], "nc": [32, 33, 36, 38, 41, 42, 47, 50, 51, 52, 53, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 99, 115, 122], "check_fill_value_equal_missing_valu": [32, 33], "accord": [32, 33, 65, 101], "check_fill_value_outside_valid_rang": [32, 33], "outsid": [32, 33], "rang": [32, 33], "check_flag": [32, 33], "intend": [32, 33, 122], "flag": [32, 33, 45, 101, 115], "binari": [32, 33], "express": [32, 33], "combin": [32, 33], "mutual": [32, 33], "exclus": [32, 33], "phrase": [32, 33], "charact": [32, 33, 101], "alphanumer": [32, 33, 101, 103], "five": [32, 33], "_": [32, 33], "independ": [32, 33, 101], "bit": [32, 33], "notat": [32, 33], "togeth": [32, 33, 112, 122], "blend": [32, 33], "enumer": [32, 33], "bitwis": [32, 33], "AND": [32, 33], "check_geographic_region": [32, 33], "geograph": [32, 33], "region": [32, 33], "complex": [32, 33], "cannot": [32, 33], "practic": [32, 33], "chosen": [32, 33], "check_grid_coordin": [32, 33], "check_grid_map": [32, 33], "desir": [32, 33], "singl": [32, 33, 85, 91, 92, 101, 115, 122], "anoth": [32, 33, 100], "collect": [32, 33, 100, 101, 120], "call": [32, 33, 112, 122], "arbitrari": [32, 33], "sinc": [32, 33], "Its": [32, 33], "purpos": [32, 33, 117], "act": [32, 33], "grid_mapping_nam": [32, 33], "depend": [32, 33, 100], "f": [32, 33, 78, 122], "latitude_longitud": [32, 33], "ellipsoid": [32, 33], "prime": [32, 33], "meridian": [32, 33], "directli": [32, 33], "done": [32, 33], "check_hint": [32, 33], "mislabel": [32, 33], "check_latitud": [32, 33], "correctli": [32, 33, 122], "alwai": [32, 33, 101], "degrees_north": [32, 33, 58, 59], "degree_north": [32, 33], "degree_n": [32, 33], "degrees_n": [32, 33], "degreen": [32, 33], "degreesn": [32, 33], "addition": [32, 33, 96], "rotat": [32, 33, 58, 59], "pole": [32, 33, 58, 59], "check_longitud": [32, 33], "degrees_east": [32, 33], "degree_east": [32, 33], "degree_": [32, 33], "degrees_": [32, 33], "degree": [32, 33], "degrees": [32, 33], "check_multi_dimensional_coord": [32, 33], "check_names_uniqu": [32, 33], "regardless": [32, 33], "distinguish": [32, 33], "pure": [32, 33], "disregard": [32, 33], "check_naming_convent": [32, 33], "letter": [32, 33], "compos": [32, 33], "digit": [32, 33, 101], "underscor": [32, 33], "check_packed_data": [32, 33], "check_reduced_horizontal_grid": [32, 33], "reduc": [32, 33, 38, 84], "arrang": [32, 33], "constant": [32, 33, 76], "scheme": [32, 33, 73], "gather": [32, 33], "check_standard_nam": [32, 33, 101], "meet": [32, 33], "check_time_coordin": [32, 33], "packag": [32, 33, 122], "abbrevi": [32, 33], "hour": [32, 33], "hr": [32, 33], "h": [32, 33, 79, 80, 122], "minut": [32, 33], "min": [32, 33], "sec": [32, 33], "alon": [32, 33], "zone": [32, 33], "caution": [32, 33], "similar": [32, 33, 43, 122], "check_unit": [32, 33, 100, 101], "recogn": [32, 33], "check_valid_range_and_valid_min_max_pres": [32, 33], "check_variable_featur": [32, 33], "featur": [32, 33, 62, 65, 72, 78, 81, 82, 83, 84, 85, 86], "found": [32, 33, 63, 101], "report": [32, 33, 112, 115, 122], "initi": [32, 33], "variou": [32, 33, 115], "inherit": 33, "cf1_6check": [33, 121], "actual_rang": 33, "external_vari": 33, "check_actual_rang": 33, "As": 33, "state": 33, "vector": 33, "design": [33, 122], "actual": 33, "numer": [33, 44, 101], "fist": 33, "equal": 33, "let": 33, "extend": [33, 101], "origin": 33, "check_cell_boundaries_interv": 33, "lie": 33, "ride": 33, "check_external_vari": 33, "extern": [33, 115], "concern": 33, "check_standard_name_deprecated_modifi": 33, "Not": 33, "won": 33, "rais": 33, "upon": 33, "find": [33, 121], "py": [34, 122], "cfutil": [35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 121], "attr_val": 35, "value_set": 35, "attr_typ": 35, "modifier_fn": 35, "lambda": 35, "helper": [35, 115], "get_attributes_by_valu": 35, "expect": 35, "issu": [35, 101, 122], "attempt": [35, 63, 64, 115, 119, 122], "membership": 35, "prior": 35, "sens": 37, "axis_map": 38, "u": [38, 121, 122], "unknown": 38, "sometim": 38, "physic": [38, 95], "exactli": 44, "equival": [44, 101, 122], "terminologi": [44, 121], "forecast": 46, "detect": [47, 66], "instrument": [49, 101], "platform": [54, 100, 101], "nodc": [55, 122], "sea": 55, "www": [55, 107, 108], "noaa": [55, 101, 122], "gov": [55, 122], "resourc": [55, 115], "ocean": 55, "likeliest": 56, "system": [58, 59], "concept": [58, 59, 99, 121], "lack": [58, 59], "better": [58, 59], "ch": 63, "spec": [63, 101], "profil": [63, 65, 82, 83, 87, 88, 89, 90, 91, 92, 93, 94, 100, 101, 122], "logic": 63, "incomplet": [63, 79, 82, 87, 93], "els": [63, 97], "veri": 63, "legaci": 63, "neither": 63, "move": 63, "consolid": 64, "dispar": 64, "timeseri": [64, 101], "pragmat": 64, "lazi": 64, "ll": [64, 122], "argu": 64, "confid": 64, "wrapper": [65, 66, 67, 101], "timeseriesprofil": [65, 96, 101], "station": [65, 88, 89, 91, 92, 99, 100, 101, 106], "trajectori": [66, 72, 85, 93, 94, 101, 122], "2d": [68, 69, 71], "regular": [68, 69, 70, 71], "3d": 70, "feature_typ": 75, "structur": [75, 115], "inlin": 75, "standard_name_t": 76, "1e": 76, "character": 78, "appedix": 78, "seri": [79, 80, 86, 87, 88, 89, 90, 91, 92], "_incomplete_multidimensional_array_representation_of_time_seri": 79, "_orthogonal_multidimensional_array_representation_of_time_seri": 80, "multipl": [89, 100, 101, 112, 115, 121], "unitless": 95, "note": [95, 101, 121, 122], "whole": 95, "still": 95, "absenc": 95, "member": 96, "three": [96, 122], "singular": 96, "sole": 96, "compound": 96, "units1": 97, "units2": 97, "reftimeistim": 97, "convert": [97, 120], "approv": 98, "ioo": [99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 121], "check_altitude_unit": 99, "todo": 99, "check_variable_unit": 99, "check_global_attribut": 99, "check_station_location_lat": [99, 100, 101, 106], "check_station_location_lon": [99, 100, 101, 106], "check_time_period": [99, 100, 101, 106], "period": [99, 100, 101, 106], "check_variable_attribut": 99, "come": [99, 100, 101], "check_variable_nam": 99, "io": [100, 101], "69": 100, "358": 100, "check_geophysical_vars_fill_valu": 100, "fill": 100, "check_geophysical_vars_standard_nam": 100, "check_platform_variable_attribut": 100, "ioos_cod": 100, "short_nam": 100, "check_platform_vari": 100, "involv": 100, "space": 100, "vocabulari": 100, "check_accuraci": 101, "accuraci": 101, "salin": 101, "context": 101, "839": 101, "check_cf_role_vari": 101, "regard": 101, "geophysical_vari": 101, "compli": 101, "rule": 101, "typic": 101, "summar": 101, "dim": 101, "trajectoryprofil": 101, "relev": 101, "748": 101, "828": 101, "check_contributor_role_and_vocabulari": 101, "contributor_rol": 101, "contributor_role_vocabulari": 101, "nerc": 101, "check_creator_and_publisher_typ": 101, "creator_typ": 101, "publisher_typ": 101, "person": 101, "check_geophysical_vars_have_attr": 101, "check_gts_ingest_glob": 101, "gts_ingest": 101, "check_gts_ingest_requir": 101, "qualifi": 101, "ingest": 101, "ndbcgt": 101, "alreadi": 101, "ancillari": 101, "reqpres": 101, "qartod": 101, "aggreg": [101, 115, 122], "notifi": 101, "did": 101, "759": 101, "check_instrument_make_model_calib_d": 101, "make_model": 101, "calibration_d": 101, "8601": [101, 118, 119], "check_instrument_vari": 101, "instrument_vari": 101, "check_ioos_ingest": 101, "ioos_ingest": 101, "check_platform_glob": 101, "check_platform_vocabulari": 101, "platform_vocabulari": 101, "mmisw": 101, "ont": 101, "vocab": 101, "ac": 101, "uk": 101, "l06": 101, "least": 101, "check_qartod_variables_flag": 101, "qualiti": 101, "controlqartod": 101, "deleg": 101, "check_qartod_variables_refer": 101, "deem": 101, "check_single_platform": 101, "thu": 101, "model": 101, "declar": 101, "standardnamet": 101, "check_vertical_coordin": 101, "inch": 101, "foot": 101, "yard": 101, "us_survey_foot": 101, "mile": 101, "fathom": 101, "up": [101, 112, 122], "down": [101, 122], "unlik": 101, "constrain": 101, "aforement": 101, "check_wmo_platform_cod": 101, "wmo": 101, "buoi": 101, "nw": 101, "show": [101, 122], "conform": [101, 115], "bioo": 102, "za": 103, "z0": 103, "gml": [107, 108], "opengi": [107, 108], "net": [107, 108], "xlink": [107, 108], "w3": [107, 108], "1999": [107, 108], "ow": 108, "revers": 109, "dn": 109, "naming_author": 109, "runner": [112, 113, 114, 121, 122], "ti": 112, "entir": [112, 122], "framework": 112, "import": [112, 122], "check_error": 112, "score_group": [112, 121], "verbos": [112, 115, 122], "dure": [112, 122], "stderr": 112, "goe": [112, 122], "integ": [112, 115], "html_output": [112, 115], "score_dict": 112, "output_filenam": [112, 115, 122], "ds_loc": 112, "limit": [112, 115], "render": [112, 115], "output": [112, 115, 121], "degre": 112, "strict": [112, 122], "strictest": 112, "go": 112, "json_output": 112, "output_typ": 112, "json": [112, 115, 121], "ocmplianc": 112, "json_new": [112, 122], "run_check": [112, 122], "checker_nam": [112, 115, 122], "criteria": [112, 122], "skip_check": [112, 115, 122], "include_check": [112, 115], "output_format": [112, 122], "text": [112, 121], "static": 112, "lenient": [112, 122], "normal": [112, 122], "stdout_output": 112, "routin": [112, 115], "displai": [112, 122], "termin": [112, 115], "stream": [113, 122], "check_remote_netcdf": 115, "get_point": 115, "passtre": 115, "templates_root": 115, "add_plugin_arg": 115, "parser": 115, "build_structur": 115, "check_nam": [115, 122], "source_nam": 115, "look": 115, "scored_point": [115, 122], "396": 115, "low_count": 115, "possible_point": [115, 122], "400": 115, "testnam": 115, "gliderdac": [115, 122], "medium_count": 115, "rutger": 115, "ru01": 115, "20140120t1444": 115, "20140120t1649": 115, "high_count": 115, "all_prior": 115, "high_prior": 115, "medium_prior": 115, "low_prior": 115, "ds_str": 115, "checker_html_output": 115, "jinja2": 115, "dict_output": 115, "build": 115, "write": [115, 121], "buffer": 115, "save": 115, "generate_dataset": 115, "cdl_path": 115, "ncgen": 115, "sy": 115, "exit": [115, 122], "program": [115, 122], "long": 115, "stack": 115, "trace": 115, "absolut": [115, 122], "checkers_html": 115, "load_all_available_check": [115, 122], "retriev": 115, "sub": 115, "load_dataset": 115, "instanti": 115, "load": [115, 122], "load_generated_check": 115, "load_local_dataset": 115, "load_remote_dataset": 115, "opendap": [115, 122], "process_doc": 115, "pars": [115, 118, 119, 122], "xml": [115, 122], "reasoning_routin": 115, "priority_flag": 115, "_top_level": 115, "print": 115, "header": [115, 122], "run_al": 115, "while": [115, 122], "raw_scor": 115, "raw": 115, "fulli": 115, "talli": 115, "scorelin": 115, "o": [115, 122], "safe": 115, "standard_output": 115, "standard_output_gener": 115, "dedent": 116, "aid": 117, "task": 117, "util": [118, 119, 120, 121], "date_str": [118, 119], "naiv": 118, "datetim": 118, "input_col": 120, "ordereddict": 120, "idempot": 120, "first_tuple_el": 120, "second_tuple_el": 120, "scalar_valu": 120, "advic": 121, "usag": 121, "api": 121, "instal": 121, "erddap": 121, "download": 121, "particular": 121, "plug": 121, "Ins": 121, "releas": 121, "disclaim": 121, "miscellan": 121, "contributor": 121, "cf1_7check": 121, "protocol": 121, "acdd1_1check": 121, "acdd1_3check": 121, "acddbasecheck": 121, "acddnccheck": 121, "attr_check": 121, "check_ha": 121, "csv_splitter": 121, "fix_return_valu": 121, "get_namespac": 121, "maybe_get_global_attr": 121, "ratable_result": 121, "xpath_check": 121, "basenccheck": 121, "basesosdscheck": 121, "basesosgccheck": 121, "emailvalid": 121, "genericfil": 121, "regexvalid": 121, "urlvalid": 121, "validationobject": 121, "attr_membership": 121, "coordinate_dimension_matrix": 121, "get_auxiliary_coordinate_vari": 121, "get_axis_map": 121, "get_axis_vari": 121, "get_bounds_vari": 121, "get_cell_boundary_map": 121, "get_cell_boundary_vari": 121, "get_climatology_vari": 121, "get_coordinate_vari": 121, "get_flag_vari": 121, "get_forecast_metadata_vari": 121, "get_geophysical_vari": 121, "get_grid_mapping_vari": 121, "get_instrument_vari": 121, "get_lat_vari": 121, "get_latitude_vari": 121, "get_lon_vari": 121, "get_longitude_vari": 121, "get_platform_vari": 121, "get_sea_nam": 121, "get_time_vari": 121, "get_true_latitude_vari": 121, "get_true_longitude_vari": 121, "get_z_vari": 121, "guess_feature_typ": 121, "isprofil": 121, "istimeseri": 121, "istimeseriesprofil": 121, "istrajectori": 121, "istrajectoryprofil": 121, "is_2d_regular_grid": 121, "is_2d_static_grid": 121, "is_3d_regular_grid": 121, "is_3d_static_grid": 121, "is_cf_trajectori": 121, "is_compression_coordin": 121, "is_coordinate_vari": 121, "is_dataset_valid_ragged_array_repr_featuretyp": 121, "is_dimensionless_standard_nam": 121, "is_geophys": 121, "is_mapped_grid": 121, "is_multi_timeseries_incomplet": 121, "is_multi_timeseries_orthogon": 121, "is_point": 121, "is_profile_incomplet": 121, "is_profile_orthogon": 121, "is_reduced_grid": 121, "is_single_trajectori": 121, "is_timeseri": 121, "is_timeseries_profile_incomplet": 121, "is_timeseries_profile_multi_ortho_tim": 121, "is_timeseries_profile_multi_st": 121, "is_timeseries_profile_ortho_depth": 121, "is_timeseries_profile_single_ortho_tim": 121, "is_timeseries_profile_single_st": 121, "is_trajectory_profile_incomplet": 121, "is_trajectory_profile_orthogon": 121, "is_unitless": 121, "is_variable_valid_ragged_array_repr_featuretyp": 121, "units_convert": 121, "ioos0_1check": 121, "ioos1_1check": 121, "ioos1_2check": 121, "ioos1_2_conventionsvalid": 121, "ioos1_2_platformidvalid": 121, "ioosbasecheck": 121, "ioosbasesoscheck": 121, "ioosnccheck": 121, "ioossosdscheck": 121, "ioossosgccheck": 121, "namingauthorityvalid": 121, "stdout_redirector": 121, "compliancecheck": [121, 122], "extract_docstring_summari": 121, "datepars": 121, "datetime_is_iso": 121, "kvp_convert": 121, "frequent": 121, "ask": 121, "question": 121, "pytest": 121, "search": 121, "page": [121, 122], "built": 122, "cc": 122, "loop": 122, "meant": 122, "bug": 122, "help": 122, "procedur": 122, "worth": 122, "insur": 122, "impact": 122, "feel": 122, "batch": 122, "contact": 122, "offic": 122, "oper": 122, "divis": 122, "assist": 122, "front": 122, "companion": 122, "want": 122, "dropdown": 122, "menu": 122, "Then": 122, "click": 122, "submit": 122, "give": 122, "comprehens": 122, "action": 122, "button": 122, "host": 122, "wiki": 122, "coupl": 122, "htmlapi": 122, "report_format": 122, "maracoo": 122, "stabl": 122, "dodsc": 122, "hreco": 122, "stationhrmarph": 122, "agg": 122, "ncml": 122, "execut": 122, "comput": 122, "readabl": 122, "human": 122, "child": 122, "control": 122, "prevent": 122, "overal": 122, "top": 122, "instruct": 122, "request": 122, "aim": 122, "dump": 122, "known": 122, "cchecker": 122, "download_standard_nam": 122, "dataset_loc": 122, "fetch": 122, "unspecifi": 122, "test_standard": 122, "omit": 122, "latest": 122, "skip_level": 122, "wherea": 122, "main": 122, "subkei": 122, "stdout": 122, "mani": 122, "invoc": 122, "switch": 122, "prefix": 122, "option_nam": 122, "enable_appendix_a_check": 122, "72": 122, "hycom_glob": 122, "water_u": 122, "water_v": 122, "becom": 122, "popular": 122, "griddap": 122, "pae": 122, "paha": 122, "pacioo": 122, "hawaii": 122, "pibhmc_bathy_60m_guam": 122, "nccf": 122, "etc": 122, "aw": 122, "himb": 122, "secoora": 122, "edu_usf_marine_comps_1407d550": 122, "cencoo": 122, "bodega": 122, "bml_wt": 122, "fort": 122, "edu_humboldt_humboldt": 122, "edu_calpoly_marine_morro": 122, "mlml_mlml_sea": 122, "mlml_mlml_met": 122, "mlml_monterei": 122, "edu_humboldt_tdp": 122, "tmp": 122, "txt": 122, "combined_output": 122, "ww3": 122, "hycom": 122, "standard_name_vocabulari": 122, "v30": 122, "doesn": 122, "try": 122, "fall": 122, "back": 122, "35": 122, "src": 122, "environ": 122, "cf_standard_name_t": 122, "incorpor": 122, "check_suit": 122, "adcc": 122, "return_valu": 122, "r": 122, "fp": 122, "cc_data": 122, "cc_test": 122, "log": 122, "debug": 122, "ins": 122, "complement": 122, "prepar": 122, "assembli": 122, "center": 122, "necessarili": 122, "templat": 122, "v2": 122, "pip": 122, "onc": 122, "thredd": 122, "testdata": 122, "mbiddl": 122, "gold_standard_netcdf": 122, "nodc_point_template_v1": 122, "1_2016": 122, "06": 122, "15_133710": 122, "844375": 122, "sample_grid_report": 122, "portion": 122, "michael": 122, "decker": 122, "repositori": 122, "iek": 122, "fz": 122, "juelich": 122, "de": 122, "hg": 122, "cfchecker": 122}, "objects": {"compliance_checker": [[3, 0, 0, "-", "acdd"], [8, 0, 0, "-", "base"], [31, 0, 0, "-", "cf"], [34, 0, 0, "-", "cfutil"], [98, 0, 0, "-", "ioos"], [110, 0, 0, "-", "protocols"], [111, 0, 0, "-", "runner"], [114, 0, 0, "-", "suite"], [117, 0, 0, "-", "util"]], "compliance_checker.acdd": [[4, 1, 1, "", "ACDD1_1Check"], [5, 1, 1, "", "ACDD1_3Check"], [6, 1, 1, "", "ACDDBaseCheck"], [7, 1, 1, "", "ACDDNCCheck"]], "compliance_checker.acdd.ACDD1_1Check": [[4, 2, 1, "", "HIGH"], [4, 2, 1, "", "LOW"], [4, 2, 1, "", "MEDIUM"], [4, 3, 1, "", "__init__"], [4, 3, 1, "", "check_acknowledgment"], [4, 3, 1, "", "check_high"], [4, 3, 1, "", "check_lat_extents"], [4, 3, 1, "", "check_lon_extents"], [4, 3, 1, "", "check_recommended"], [4, 3, 1, "", "check_suggested"], [4, 3, 1, "", "check_time_extents"], [4, 3, 1, "", "check_var_long_name"], [4, 3, 1, "", "check_var_standard_name"], [4, 3, 1, "", "check_var_units"], [4, 3, 1, "", "check_vertical_extents"], [4, 3, 1, "", "get_applicable_variables"], [4, 3, 1, "", "get_test_ctx"], [4, 2, 1, "", "register_checker"], [4, 3, 1, "", "setup"], [4, 3, 1, "", "std_check"], [4, 3, 1, "", "std_check_in"], [4, 2, 1, "", "supported_ds"], [4, 3, 1, "", "verify_convention_version"], [4, 3, 1, "", "verify_geospatial_bounds"]], "compliance_checker.acdd.ACDD1_3Check": [[5, 2, 1, "", "HIGH"], [5, 2, 1, "", "LOW"], [5, 2, 1, "", "MEDIUM"], [5, 3, 1, "", "__init__"], [5, 3, 1, "", "check_acknowledgment"], [5, 3, 1, "", "check_high"], [5, 3, 1, "", "check_id_has_no_blanks"], [5, 3, 1, "", "check_lat_extents"], [5, 3, 1, "", "check_lon_extents"], [5, 3, 1, "", "check_metadata_link"], [5, 3, 1, "", "check_recommended"], [5, 3, 1, "", "check_suggested"], [5, 3, 1, "", "check_time_extents"], [5, 3, 1, "", "check_var_coverage_content_type"], [5, 3, 1, "", "check_var_long_name"], [5, 3, 1, "", "check_var_standard_name"], [5, 3, 1, "", "check_var_units"], [5, 3, 1, "", "check_vertical_extents"], [5, 3, 1, "", "get_applicable_variables"], [5, 3, 1, "", "get_test_ctx"], [5, 2, 1, "", "register_checker"], [5, 3, 1, "", "setup"], [5, 3, 1, "", "std_check"], [5, 3, 1, "", "std_check_in"], [5, 2, 1, "", "supported_ds"], [5, 3, 1, "", "verify_convention_version"], [5, 3, 1, "", "verify_geospatial_bounds"]], "compliance_checker.acdd.ACDDBaseCheck": [[6, 2, 1, "", "HIGH"], [6, 2, 1, "", "LOW"], [6, 2, 1, "", "MEDIUM"], [6, 3, 1, "", "__init__"], [6, 3, 1, "", "check_acknowledgment"], [6, 3, 1, "", "check_high"], [6, 3, 1, "", "check_lat_extents"], [6, 3, 1, "", "check_lon_extents"], [6, 3, 1, "", "check_recommended"], [6, 3, 1, "", "check_suggested"], [6, 3, 1, "", "check_time_extents"], [6, 3, 1, "", "check_var_long_name"], [6, 3, 1, "", "check_var_standard_name"], [6, 3, 1, "", "check_var_units"], [6, 3, 1, "", "check_vertical_extents"], [6, 3, 1, "", "get_applicable_variables"], [6, 3, 1, "", "get_test_ctx"], [6, 3, 1, "", "setup"], [6, 2, 1, "", "supported_ds"], [6, 3, 1, "", "verify_convention_version"], [6, 3, 1, "", "verify_geospatial_bounds"]], "compliance_checker.acdd.ACDDNCCheck": [[7, 2, 1, "", "HIGH"], [7, 2, 1, "", "LOW"], [7, 2, 1, "", "MEDIUM"], [7, 3, 1, "", "__init__"], [7, 3, 1, "", "check_acknowledgment"], [7, 3, 1, "", "check_high"], [7, 3, 1, "", "check_lat_extents"], [7, 3, 1, "", "check_lon_extents"], [7, 3, 1, "", "check_recommended"], [7, 3, 1, "", "check_suggested"], [7, 3, 1, "", "check_time_extents"], [7, 3, 1, "", "check_var_long_name"], [7, 3, 1, "", "check_var_standard_name"], [7, 3, 1, "", "check_var_units"], [7, 3, 1, "", "check_vertical_extents"], [7, 3, 1, "", "get_applicable_variables"], [7, 3, 1, "", "get_test_ctx"], [7, 3, 1, "", "setup"], [7, 3, 1, "", "std_check"], [7, 3, 1, "", "std_check_in"], [7, 2, 1, "", "supported_ds"], [7, 3, 1, "", "verify_convention_version"], [7, 3, 1, "", "verify_geospatial_bounds"]], "compliance_checker.base": [[9, 1, 1, "", "BaseCheck"], [10, 1, 1, "", "BaseNCCheck"], [11, 1, 1, "", "BaseSOSDSCheck"], [12, 1, 1, "", "BaseSOSGCCheck"], [13, 1, 1, "", "EmailValidator"], [14, 1, 1, "", "GenericFile"], [15, 1, 1, "", "RegexValidator"], [16, 1, 1, "", "Result"], [17, 1, 1, "", "TestCtx"], [18, 1, 1, "", "UrlValidator"], [19, 1, 1, "", "ValidationObject"], [20, 4, 1, "", "attr_check"], [21, 4, 1, "", "check_has"], [22, 4, 1, "", "csv_splitter"], [23, 4, 1, "", "fix_return_value"], [24, 4, 1, "", "get_namespaces"], [25, 4, 1, "", "maybe_get_global_attr"], [26, 4, 1, "", "ratable_result"], [27, 4, 1, "", "score_group"], [28, 4, 1, "", "std_check"], [29, 4, 1, "", "std_check_in"], [30, 4, 1, "", "xpath_check"]], "compliance_checker.base.BaseCheck": [[9, 2, 1, "", "HIGH"], [9, 2, 1, "", "LOW"], [9, 2, 1, "", "MEDIUM"], [9, 3, 1, "", "__init__"], [9, 3, 1, "", "get_test_ctx"], [9, 3, 1, "", "setup"], [9, 2, 1, "", "supported_ds"]], "compliance_checker.base.BaseNCCheck": [[10, 3, 1, "", "__init__"], [10, 3, 1, "", "std_check"], [10, 3, 1, "", "std_check_in"], [10, 2, 1, "", "supported_ds"]], "compliance_checker.base.BaseSOSDSCheck": [[11, 3, 1, "", "__init__"], [11, 2, 1, "", "supported_ds"]], "compliance_checker.base.BaseSOSGCCheck": [[12, 3, 1, "", "__init__"], [12, 2, 1, "", "supported_ds"]], "compliance_checker.base.EmailValidator": [[13, 3, 1, "", "__init__"], [13, 3, 1, "", "validate"], [13, 3, 1, "", "validate_type"], [13, 2, 1, "", "validator_fail_msg"], [13, 3, 1, "", "validator_func"]], "compliance_checker.base.GenericFile": [[14, 3, 1, "", "__init__"], [14, 3, 1, "", "filepath"]], "compliance_checker.base.RegexValidator": [[15, 3, 1, "", "__init__"], [15, 3, 1, "", "validate"], [15, 3, 1, "", "validate_type"], [15, 2, 1, "", "validator_fail_msg"], [15, 3, 1, "", "validator_func"], [15, 2, 1, "", "validator_regex"]], "compliance_checker.base.Result": [[16, 3, 1, "", "__init__"], [16, 3, 1, "", "serialize"]], "compliance_checker.base.TestCtx": [[17, 3, 1, "", "__init__"], [17, 3, 1, "", "add_failure"], [17, 3, 1, "", "add_pass"], [17, 3, 1, "", "assert_true"], [17, 3, 1, "", "to_result"]], "compliance_checker.base.UrlValidator": [[18, 3, 1, "", "__init__"], [18, 3, 1, "", "validate"], [18, 3, 1, "", "validate_type"], [18, 2, 1, "", "validator_fail_msg"], [18, 3, 1, "", "validator_func"]], "compliance_checker.base.ValidationObject": [[19, 3, 1, "", "__init__"], [19, 2, 1, "", "expected_type"], [19, 3, 1, "", "validate"], [19, 3, 1, "", "validate_type"], [19, 2, 1, "", "validator_fail_msg"], [19, 3, 1, "", "validator_func"]], "compliance_checker.cf": [[32, 1, 1, "", "CF1_6Check"], [33, 1, 1, "", "CF1_7Check"]], "compliance_checker.cf.CF1_6Check": [[32, 2, 1, "", "HIGH"], [32, 2, 1, "", "LOW"], [32, 2, 1, "", "MEDIUM"], [32, 3, 1, "", "__init__"], [32, 2, 1, "", "appendix_a"], [32, 2, 1, "", "appendix_d_parametric_coords"], [32, 3, 1, "", "check_add_offset_scale_factor_type"], [32, 3, 1, "", "check_ancillary_variables"], [32, 3, 1, "", "check_appendix_a"], [32, 3, 1, "", "check_aux_coordinates"], [32, 3, 1, "", "check_calendar"], [32, 3, 1, "", "check_cell_boundaries"], [32, 3, 1, "", "check_cell_measures"], [32, 3, 1, "", "check_cell_methods"], [32, 3, 1, "", "check_cf_role"], [32, 3, 1, "", "check_child_attr_data_types"], [32, 3, 1, "", "check_climatological_statistics"], [32, 3, 1, "", "check_compression_gathering"], [32, 3, 1, "", "check_convention_globals"], [32, 3, 1, "", "check_convention_possibly_var_attrs"], [32, 3, 1, "", "check_conventions_version"], [32, 3, 1, "", "check_coordinate_types"], [32, 3, 1, "", "check_coordinate_variables_strict_monotonicity"], [32, 3, 1, "", "check_data_types"], [32, 3, 1, "", "check_dimension_names"], [32, 3, 1, "", "check_dimension_order"], [32, 3, 1, "", "check_dimensional_vertical_coordinate"], [32, 3, 1, "", "check_dimensionless_vertical_coordinates"], [32, 3, 1, "", "check_duplicate_axis"], [32, 3, 1, "", "check_feature_type"], [32, 3, 1, "", "check_filename"], [32, 3, 1, "", "check_fill_value_equal_missing_value"], [32, 3, 1, "", "check_fill_value_outside_valid_range"], [32, 3, 1, "", "check_flags"], [32, 3, 1, "", "check_geographic_region"], [32, 3, 1, "", "check_grid_coordinates"], [32, 3, 1, "", "check_grid_mapping"], [32, 3, 1, "", "check_hints"], [32, 3, 1, "", "check_latitude"], [32, 3, 1, "", "check_longitude"], [32, 3, 1, "", "check_multi_dimensional_coords"], [32, 3, 1, "", "check_names_unique"], [32, 3, 1, "", "check_naming_conventions"], [32, 3, 1, "", "check_packed_data"], [32, 3, 1, "", "check_reduced_horizontal_grid"], [32, 3, 1, "", "check_standard_name"], [32, 3, 1, "", "check_time_coordinate"], [32, 3, 1, "", "check_units"], [32, 3, 1, "", "check_valid_range_and_valid_min_max_present"], [32, 3, 1, "", "check_variable_features"], [32, 3, 1, "", "get_test_ctx"], [32, 2, 1, "", "register_checker"], [32, 3, 1, "", "setup"], [32, 3, 1, "", "std_check"], [32, 3, 1, "", "std_check_in"], [32, 2, 1, "", "supported_ds"]], "compliance_checker.cf.CF1_7Check": [[33, 2, 1, "", "HIGH"], [33, 2, 1, "", "LOW"], [33, 2, 1, "", "MEDIUM"], [33, 3, 1, "", "__init__"], [33, 2, 1, "", "appendix_a"], [33, 2, 1, "", "appendix_d_parametric_coords"], [33, 3, 1, "", "check_actual_range"], [33, 3, 1, "", "check_add_offset_scale_factor_type"], [33, 3, 1, "", "check_ancillary_variables"], [33, 3, 1, "", "check_appendix_a"], [33, 3, 1, "", "check_aux_coordinates"], [33, 3, 1, "", "check_calendar"], [33, 3, 1, "", "check_cell_boundaries"], [33, 3, 1, "", "check_cell_boundaries_interval"], [33, 3, 1, "", "check_cell_measures"], [33, 3, 1, "", "check_cell_methods"], [33, 3, 1, "", "check_cf_role"], [33, 3, 1, "", "check_child_attr_data_types"], [33, 3, 1, "", "check_climatological_statistics"], [33, 3, 1, "", "check_compression_gathering"], [33, 3, 1, "", "check_convention_globals"], [33, 3, 1, "", "check_convention_possibly_var_attrs"], [33, 3, 1, "", "check_conventions_version"], [33, 3, 1, "", "check_coordinate_types"], [33, 3, 1, "", "check_coordinate_variables_strict_monotonicity"], [33, 3, 1, "", "check_data_types"], [33, 3, 1, "", "check_dimension_names"], [33, 3, 1, "", "check_dimension_order"], [33, 3, 1, "", "check_dimensional_vertical_coordinate"], [33, 3, 1, "", "check_dimensionless_vertical_coordinates"], [33, 3, 1, "", "check_duplicate_axis"], [33, 3, 1, "", "check_external_variables"], [33, 3, 1, "", "check_feature_type"], [33, 3, 1, "", "check_filename"], [33, 3, 1, "", "check_fill_value_equal_missing_value"], [33, 3, 1, "", "check_fill_value_outside_valid_range"], [33, 3, 1, "", "check_flags"], [33, 3, 1, "", "check_geographic_region"], [33, 3, 1, "", "check_grid_coordinates"], [33, 3, 1, "", "check_grid_mapping"], [33, 3, 1, "", "check_hints"], [33, 3, 1, "", "check_latitude"], [33, 3, 1, "", "check_longitude"], [33, 3, 1, "", "check_multi_dimensional_coords"], [33, 3, 1, "", "check_names_unique"], [33, 3, 1, "", "check_naming_conventions"], [33, 3, 1, "", "check_packed_data"], [33, 3, 1, "", "check_reduced_horizontal_grid"], [33, 3, 1, "", "check_standard_name"], [33, 3, 1, "", "check_standard_name_deprecated_modifiers"], [33, 3, 1, "", "check_time_coordinate"], [33, 3, 1, "", "check_units"], [33, 3, 1, "", "check_valid_range_and_valid_min_max_present"], [33, 3, 1, "", "check_variable_features"], [33, 3, 1, "", "get_test_ctx"], [33, 2, 1, "", "register_checker"], [33, 3, 1, "", "setup"], [33, 3, 1, "", "std_check"], [33, 3, 1, "", "std_check_in"], [33, 2, 1, "", "supported_ds"]], "compliance_checker.cfutil": [[35, 4, 1, "", "attr_membership"], [36, 4, 1, "", "coordinate_dimension_matrix"], [37, 4, 1, "", "get_auxiliary_coordinate_variables"], [38, 4, 1, "", "get_axis_map"], [39, 4, 1, "", "get_axis_variables"], [40, 4, 1, "", "get_bounds_variables"], [41, 4, 1, "", "get_cell_boundary_map"], [42, 4, 1, "", "get_cell_boundary_variables"], [43, 4, 1, "", "get_climatology_variable"], [44, 4, 1, "", "get_coordinate_variables"], [45, 4, 1, "", "get_flag_variables"], [46, 4, 1, "", "get_forecast_metadata_variables"], [47, 4, 1, "", "get_geophysical_variables"], [48, 4, 1, "", "get_grid_mapping_variables"], [49, 4, 1, "", "get_instrument_variables"], [50, 4, 1, "", "get_lat_variable"], [51, 4, 1, "", "get_latitude_variables"], [52, 4, 1, "", "get_lon_variable"], [53, 4, 1, "", "get_longitude_variables"], [54, 4, 1, "", "get_platform_variables"], [55, 4, 1, "", "get_sea_names"], [56, 4, 1, "", "get_time_variable"], [57, 4, 1, "", "get_time_variables"], [58, 4, 1, "", "get_true_latitude_variables"], [59, 4, 1, "", "get_true_longitude_variables"], [60, 4, 1, "", "get_z_variable"], [61, 4, 1, "", "get_z_variables"], [62, 4, 1, "", "guess_feature_type"], [63, 4, 1, "", "isProfile"], [64, 4, 1, "", "isTimeSeries"], [65, 4, 1, "", "isTimeSeriesProfile"], [66, 4, 1, "", "isTrajectory"], [67, 4, 1, "", "isTrajectoryProfile"], [68, 4, 1, "", "is_2d_regular_grid"], [69, 4, 1, "", "is_2d_static_grid"], [70, 4, 1, "", "is_3d_regular_grid"], [71, 4, 1, "", "is_3d_static_grid"], [72, 4, 1, "", "is_cf_trajectory"], [73, 4, 1, "", "is_compression_coordinate"], [74, 4, 1, "", "is_coordinate_variable"], [75, 4, 1, "", "is_dataset_valid_ragged_array_repr_featureType"], [76, 4, 1, "", "is_dimensionless_standard_name"], [77, 4, 1, "", "is_geophysical"], [78, 4, 1, "", "is_mapped_grid"], [79, 4, 1, "", "is_multi_timeseries_incomplete"], [80, 4, 1, "", "is_multi_timeseries_orthogonal"], [81, 4, 1, "", "is_point"], [82, 4, 1, "", "is_profile_incomplete"], [83, 4, 1, "", "is_profile_orthogonal"], [84, 4, 1, "", "is_reduced_grid"], [85, 4, 1, "", "is_single_trajectory"], [86, 4, 1, "", "is_timeseries"], [87, 4, 1, "", "is_timeseries_profile_incomplete"], [88, 4, 1, "", "is_timeseries_profile_multi_ortho_time"], [89, 4, 1, "", "is_timeseries_profile_multi_station"], [90, 4, 1, "", "is_timeseries_profile_ortho_depth"], [91, 4, 1, "", "is_timeseries_profile_single_ortho_time"], [92, 4, 1, "", "is_timeseries_profile_single_station"], [93, 4, 1, "", "is_trajectory_profile_incomplete"], [94, 4, 1, "", "is_trajectory_profile_orthogonal"], [95, 4, 1, "", "is_unitless"], [96, 4, 1, "", "is_variable_valid_ragged_array_repr_featureType"], [97, 4, 1, "", "units_convertible"]], "compliance_checker.ioos": [[99, 1, 1, "", "IOOS0_1Check"], [100, 1, 1, "", "IOOS1_1Check"], [101, 1, 1, "", "IOOS1_2Check"], [102, 1, 1, "", "IOOS1_2_ConventionsValidator"], [103, 1, 1, "", "IOOS1_2_PlatformIDValidator"], [104, 1, 1, "", "IOOSBaseCheck"], [105, 1, 1, "", "IOOSBaseSOSCheck"], [106, 1, 1, "", "IOOSNCCheck"], [107, 1, 1, "", "IOOSSOSDSCheck"], [108, 1, 1, "", "IOOSSOSGCCheck"], [109, 1, 1, "", "NamingAuthorityValidator"]], "compliance_checker.ioos.IOOS0_1Check": [[99, 2, 1, "", "HIGH"], [99, 2, 1, "", "LOW"], [99, 2, 1, "", "MEDIUM"], [99, 3, 1, "", "__init__"], [99, 3, 1, "", "check_altitude_units"], [99, 3, 1, "", "check_global_attributes"], [99, 3, 1, "", "check_station_location_lat"], [99, 3, 1, "", "check_station_location_lon"], [99, 3, 1, "", "check_time_period"], [99, 3, 1, "", "check_variable_attributes"], [99, 3, 1, "", "check_variable_names"], [99, 3, 1, "", "check_variable_units"], [99, 3, 1, "", "get_test_ctx"], [99, 2, 1, "", "register_checker"], [99, 3, 1, "", "setup"], [99, 3, 1, "", "std_check"], [99, 3, 1, "", "std_check_in"], [99, 2, 1, "", "supported_ds"]], "compliance_checker.ioos.IOOS1_1Check": [[100, 2, 1, "", "HIGH"], [100, 2, 1, "", "LOW"], [100, 2, 1, "", "MEDIUM"], [100, 3, 1, "", "__init__"], [100, 3, 1, "", "check_geophysical_vars_fill_value"], [100, 3, 1, "", "check_geophysical_vars_standard_name"], [100, 3, 1, "", "check_high"], [100, 3, 1, "", "check_platform_variable_attributes"], [100, 3, 1, "", "check_platform_variables"], [100, 3, 1, "", "check_recommended"], [100, 3, 1, "", "check_station_location_lat"], [100, 3, 1, "", "check_station_location_lon"], [100, 3, 1, "", "check_time_period"], [100, 3, 1, "", "check_units"], [100, 3, 1, "", "get_test_ctx"], [100, 2, 1, "", "register_checker"], [100, 3, 1, "", "setup"], [100, 3, 1, "", "std_check"], [100, 3, 1, "", "std_check_in"], [100, 2, 1, "", "supported_ds"]], "compliance_checker.ioos.IOOS1_2Check": [[101, 2, 1, "", "HIGH"], [101, 2, 1, "", "LOW"], [101, 2, 1, "", "MEDIUM"], [101, 3, 1, "", "__init__"], [101, 3, 1, "", "check_accuracy"], [101, 3, 1, "", "check_cf_role_variables"], [101, 3, 1, "", "check_contributor_role_and_vocabulary"], [101, 3, 1, "", "check_creator_and_publisher_type"], [101, 3, 1, "", "check_feature_type"], [101, 3, 1, "", "check_geophysical_vars_have_attrs"], [101, 3, 1, "", "check_gts_ingest_global"], [101, 3, 1, "", "check_gts_ingest_requirements"], [101, 3, 1, "", "check_high"], [101, 3, 1, "", "check_instrument_make_model_calib_date"], [101, 3, 1, "", "check_instrument_variables"], [101, 3, 1, "", "check_ioos_ingest"], [101, 3, 1, "", "check_platform_global"], [101, 3, 1, "", "check_platform_vocabulary"], [101, 3, 1, "", "check_qartod_variables_flags"], [101, 3, 1, "", "check_qartod_variables_references"], [101, 3, 1, "", "check_recommended"], [101, 3, 1, "", "check_single_platform"], [101, 3, 1, "", "check_standard_name"], [101, 3, 1, "", "check_station_location_lat"], [101, 3, 1, "", "check_station_location_lon"], [101, 3, 1, "", "check_time_period"], [101, 3, 1, "", "check_units"], [101, 3, 1, "", "check_vertical_coordinates"], [101, 3, 1, "", "check_wmo_platform_code"], [101, 3, 1, "", "get_test_ctx"], [101, 2, 1, "", "register_checker"], [101, 3, 1, "", "setup"], [101, 3, 1, "", "std_check"], [101, 3, 1, "", "std_check_in"], [101, 2, 1, "", "supported_ds"]], "compliance_checker.ioos.IOOS1_2_ConventionsValidator": [[102, 3, 1, "", "__init__"], [102, 3, 1, "", "validate"], [102, 3, 1, "", "validate_type"], [102, 2, 1, "", "validator_fail_msg"], [102, 3, 1, "", "validator_func"], [102, 2, 1, "", "validator_regex"]], "compliance_checker.ioos.IOOS1_2_PlatformIDValidator": [[103, 3, 1, "", "__init__"], [103, 3, 1, "", "validate"], [103, 3, 1, "", "validate_type"], [103, 2, 1, "", "validator_fail_msg"], [103, 3, 1, "", "validator_func"], [103, 2, 1, "", "validator_regex"]], "compliance_checker.ioos.IOOSBaseCheck": [[104, 2, 1, "", "HIGH"], [104, 2, 1, "", "LOW"], [104, 2, 1, "", "MEDIUM"], [104, 3, 1, "", "__init__"], [104, 3, 1, "", "get_test_ctx"], [104, 3, 1, "", "setup"], [104, 2, 1, "", "supported_ds"]], "compliance_checker.ioos.IOOSBaseSOSCheck": [[105, 2, 1, "", "HIGH"], [105, 2, 1, "", "LOW"], [105, 2, 1, "", "MEDIUM"], [105, 3, 1, "", "__init__"], [105, 3, 1, "", "get_test_ctx"], [105, 2, 1, "", "register_checker"], [105, 3, 1, "", "setup"], [105, 2, 1, "", "supported_ds"]], "compliance_checker.ioos.IOOSNCCheck": [[106, 2, 1, "", "HIGH"], [106, 2, 1, "", "LOW"], [106, 2, 1, "", "MEDIUM"], [106, 3, 1, "", "__init__"], [106, 3, 1, "", "check_station_location_lat"], [106, 3, 1, "", "check_station_location_lon"], [106, 3, 1, "", "check_time_period"], [106, 3, 1, "", "get_test_ctx"], [106, 3, 1, "", "setup"], [106, 3, 1, "", "std_check"], [106, 3, 1, "", "std_check_in"], [106, 2, 1, "", "supported_ds"]], "compliance_checker.ioos.IOOSSOSDSCheck": [[107, 2, 1, "", "HIGH"], [107, 2, 1, "", "LOW"], [107, 2, 1, "", "MEDIUM"], [107, 3, 1, "", "__init__"], [107, 3, 1, "", "check_high"], [107, 3, 1, "", "check_recommended"], [107, 3, 1, "", "check_suggested"], [107, 3, 1, "", "get_test_ctx"], [107, 2, 1, "", "ns"], [107, 2, 1, "", "register_checker"], [107, 3, 1, "", "setup"], [107, 2, 1, "", "supported_ds"]], "compliance_checker.ioos.IOOSSOSGCCheck": [[108, 2, 1, "", "HIGH"], [108, 2, 1, "", "LOW"], [108, 2, 1, "", "MEDIUM"], [108, 3, 1, "", "__init__"], [108, 3, 1, "", "check_high"], [108, 3, 1, "", "check_recommended"], [108, 3, 1, "", "check_suggested"], [108, 3, 1, "", "get_test_ctx"], [108, 2, 1, "", "ns"], [108, 2, 1, "", "register_checker"], [108, 3, 1, "", "setup"], [108, 2, 1, "", "supported_ds"]], "compliance_checker.ioos.NamingAuthorityValidator": [[109, 3, 1, "", "__init__"], [109, 3, 1, "", "validate"], [109, 3, 1, "", "validate_type"], [109, 2, 1, "", "validator_fail_msg"], [109, 3, 1, "", "validator_func"]], "compliance_checker.runner": [[112, 1, 1, "", "ComplianceChecker"], [113, 4, 1, "", "stdout_redirector"]], "compliance_checker.runner.ComplianceChecker": [[112, 3, 1, "", "__init__"], [112, 3, 1, "", "check_errors"], [112, 3, 1, "", "html_output"], [112, 3, 1, "", "json_output"], [112, 3, 1, "", "run_checker"], [112, 3, 1, "", "stdout_output"]], "compliance_checker.suite": [[115, 1, 1, "", "CheckSuite"], [116, 4, 1, "", "extract_docstring_summary"]], "compliance_checker.suite.CheckSuite": [[115, 3, 1, "", "__init__"], [115, 3, 1, "", "add_plugin_args"], [115, 3, 1, "", "build_structure"], [115, 3, 1, "", "check_remote_netcdf"], [115, 3, 1, "", "checker_html_output"], [115, 2, 1, "", "checkers"], [115, 3, 1, "", "dict_output"], [115, 3, 1, "", "generate_dataset"], [115, 3, 1, "", "get_points"], [115, 3, 1, "", "html_output"], [115, 3, 1, "", "load_all_available_checkers"], [115, 3, 1, "", "load_dataset"], [115, 3, 1, "", "load_generated_checkers"], [115, 3, 1, "", "load_local_dataset"], [115, 3, 1, "", "load_remote_dataset"], [115, 3, 1, "", "passtree"], [115, 3, 1, "", "process_doc"], [115, 3, 1, "", "reasoning_routine"], [115, 3, 1, "", "run"], [115, 3, 1, "", "run_all"], [115, 3, 1, "", "scores"], [115, 3, 1, "", "serialize"], [115, 3, 1, "", "standard_output"], [115, 3, 1, "", "standard_output_generation"], [115, 2, 1, "", "templates_root"]], "compliance_checker.util": [[118, 4, 1, "", "dateparse"], [119, 4, 1, "", "datetime_is_iso"], [120, 4, 1, "", "kvp_convert"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"]}, "titleterms": {"api": [0, 2, 122], "develop": 1, "note": 1, "pytest": 1, "frequent": 2, "ask": 2, "question": 2, "what": 2, "i": 2, "complianc": [2, 122], "checker": [2, 122], "doe": 2, "check": [2, 122], "can": 2, "test": [2, 122], "an": 2, "erddap": [2, 122], "dataset": [2, 122], "version": 2, "run": 2, "ioo": [2, 98, 122], "u": 2, "where": 2, "find": 2, "more": 2, "inform": 2, "about": 2, "disclaim": [2, 122], "acdd": [3, 122], "compliance_check": [3, 8, 31, 34, 98, 110, 111, 114, 117, 121], "acdd1_1check": 4, "acdd1_3check": 5, "acddbasecheck": 6, "acddnccheck": 7, "base": 8, "basecheck": 9, "basenccheck": 10, "basesosdscheck": 11, "basesosgccheck": 12, "emailvalid": 13, "genericfil": 14, "regexvalid": 15, "result": [16, 122], "testctx": 17, "urlvalid": 18, "validationobject": 19, "attr_check": 20, "check_ha": 21, "csv_splitter": 22, "fix_return_valu": 23, "get_namespac": 24, "maybe_get_global_attr": 25, "ratable_result": 26, "score_group": 27, "std_check": 28, "std_check_in": 29, "xpath_check": 30, "cf": [31, 122], "cf1_6check": 32, "cf1_7check": 33, "cfutil": 34, "attr_membership": 35, "coordinate_dimension_matrix": 36, "get_auxiliary_coordinate_vari": 37, "get_axis_map": 38, "get_axis_vari": 39, "get_bounds_vari": 40, "get_cell_boundary_map": 41, "get_cell_boundary_vari": 42, "get_climatology_vari": 43, "get_coordinate_vari": 44, "get_flag_vari": 45, "get_forecast_metadata_vari": 46, "get_geophysical_vari": 47, "get_grid_mapping_vari": 48, "get_instrument_vari": 49, "get_lat_vari": 50, "get_latitude_vari": 51, "get_lon_vari": 52, "get_longitude_vari": 53, "get_platform_vari": 54, "get_sea_nam": 55, "get_time_vari": [56, 57], "get_true_latitude_vari": 58, "get_true_longitude_vari": 59, "get_z_vari": [60, 61], "guess_feature_typ": 62, "isprofil": 63, "istimeseri": 64, "istimeseriesprofil": 65, "istrajectori": 66, "istrajectoryprofil": 67, "is_2d_regular_grid": 68, "is_2d_static_grid": 69, "is_3d_regular_grid": 70, "is_3d_static_grid": 71, "is_cf_trajectori": 72, "is_compression_coordin": 73, "is_coordinate_vari": 74, "is_dataset_valid_ragged_array_repr_featuretyp": 75, "is_dimensionless_standard_nam": 76, "is_geophys": 77, "is_mapped_grid": 78, "is_multi_timeseries_incomplet": 79, "is_multi_timeseries_orthogon": 80, "is_point": 81, "is_profile_incomplet": 82, "is_profile_orthogon": 83, "is_reduced_grid": 84, "is_single_trajectori": 85, "is_timeseri": 86, "is_timeseries_profile_incomplet": 87, "is_timeseries_profile_multi_ortho_tim": 88, "is_timeseries_profile_multi_st": 89, "is_timeseries_profile_ortho_depth": 90, "is_timeseries_profile_single_ortho_tim": 91, "is_timeseries_profile_single_st": 92, "is_trajectory_profile_incomplet": 93, "is_trajectory_profile_orthogon": 94, "is_unitless": 95, "is_variable_valid_ragged_array_repr_featuretyp": 96, "units_convert": 97, "ioos0_1check": 99, "ioos1_1check": 100, "ioos1_2check": 101, "ioos1_2_conventionsvalid": 102, "ioos1_2_platformidvalid": 103, "ioosbasecheck": 104, "ioosbasesoscheck": 105, "ioosnccheck": 106, "ioossosdscheck": 107, "ioossosgccheck": 108, "namingauthorityvalid": 109, "protocol": 110, "runner": 111, "compliancecheck": 112, "stdout_redirector": 113, "suit": 114, "checksuit": 115, "extract_docstring_summari": 116, "util": 117, "datepars": 118, "datetime_is_iso": 119, "kvp_convert": 120, "content": 121, "indic": 121, "tabl": [121, 122], "advic": 122, "data": 122, "provid": 122, "The": 122, "web": 122, "tool": 122, "usag": 122, "command": 122, "line": 122, "concept": 122, "terminologi": 122, "instal": 122, "exampl": 122, "local": 122, "file": 122, "against": 122, "1": 122, "6": 122, "remot": 122, "3": 122, "write": 122, "text": 122, "json": 122, "html": 122, "output": 122, "from": 122, "multipl": 122, "input": 122, "one": 122, "part": 122, "2": 122, "download": 122, "particular": 122, "standard": 122, "name": 122, "us": 122, "python": 122, "plug": 122, "Ins": 122, "current": 122, "releas": 122, "how": 122, "miscellan": 122, "acknowledg": 122, "contributor": 122}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"API": [[0, "api"], [122, "api"]], "Developer Notes": [[1, "developer-notes"]], "pytest": [[1, "pytest"]], "Frequently Asked Questions": [[2, "frequently-asked-questions"]], "What is the Compliance Checker?": [[2, "what-is-the-compliance-checker"]], "What does the Compliance Checker check?": [[2, "what-does-the-compliance-checker-check"]], "Can I test an ERDDAP dataset with the Compliance Checker?": [[2, "can-i-test-an-erddap-dataset-with-the-compliance-checker"]], "What version of the Compliance Checker is run on compliance.ioos.us?": [[2, "what-version-of-the-compliance-checker-is-run-on-compliance-ioos-us"]], "Is there an API?": [[2, "is-there-an-api"]], "Where can I find more information about the Compliance Checker?": [[2, "where-can-i-find-more-information-about-the-compliance-checker"]], "Disclaimer": [[2, "disclaimer"], [122, "disclaimer"]], "Acdd (compliance_checker.acdd)": [[3, "module-compliance_checker.acdd"]], "ACDD1_1Check": [[4, "acdd1-1check"]], "ACDD1_3Check": [[5, "acdd1-3check"]], "ACDDBaseCheck": [[6, "acddbasecheck"]], "ACDDNCCheck": [[7, "acddnccheck"]], "Base (compliance_checker.base)": [[8, "module-compliance_checker.base"]], "BaseCheck": [[9, "basecheck"]], "BaseNCCheck": [[10, "basenccheck"]], "BaseSOSDSCheck": [[11, "basesosdscheck"]], "BaseSOSGCCheck": [[12, "basesosgccheck"]], "EmailValidator": [[13, "emailvalidator"]], "GenericFile": [[14, "genericfile"]], "RegexValidator": [[15, "regexvalidator"]], "Result": [[16, "result"]], "TestCtx": [[17, "testctx"]], "UrlValidator": [[18, "urlvalidator"]], "ValidationObject": [[19, "validationobject"]], "attr_check": [[20, "attr-check"]], "check_has": [[21, "check-has"]], "csv_splitter": [[22, "csv-splitter"]], "fix_return_value": [[23, "fix-return-value"]], "get_namespaces": [[24, "get-namespaces"]], "maybe_get_global_attr": [[25, "maybe-get-global-attr"]], "ratable_result": [[26, "ratable-result"]], "score_group": [[27, "score-group"]], "std_check": [[28, "std-check"]], "std_check_in": [[29, "std-check-in"]], "xpath_check": [[30, "xpath-check"]], "Cf (compliance_checker.cf)": [[31, "module-compliance_checker.cf"]], "CF1_6Check": [[32, "cf1-6check"]], "CF1_7Check": [[33, "cf1-7check"]], "Cfutil (compliance_checker.cfutil)": [[34, "module-compliance_checker.cfutil"]], "attr_membership": [[35, "attr-membership"]], "coordinate_dimension_matrix": [[36, "coordinate-dimension-matrix"]], "get_auxiliary_coordinate_variables": [[37, "get-auxiliary-coordinate-variables"]], "get_axis_map": [[38, "get-axis-map"]], "get_axis_variables": [[39, "get-axis-variables"]], "get_bounds_variables": [[40, "get-bounds-variables"]], "get_cell_boundary_map": [[41, "get-cell-boundary-map"]], "get_cell_boundary_variables": [[42, "get-cell-boundary-variables"]], "get_climatology_variable": [[43, "get-climatology-variable"]], "get_coordinate_variables": [[44, "get-coordinate-variables"]], "get_flag_variables": [[45, "get-flag-variables"]], "get_forecast_metadata_variables": [[46, "get-forecast-metadata-variables"]], "get_geophysical_variables": [[47, "get-geophysical-variables"]], "get_grid_mapping_variables": [[48, "get-grid-mapping-variables"]], "get_instrument_variables": [[49, "get-instrument-variables"]], "get_lat_variable": [[50, "get-lat-variable"]], "get_latitude_variables": [[51, "get-latitude-variables"]], "get_lon_variable": [[52, "get-lon-variable"]], "get_longitude_variables": [[53, "get-longitude-variables"]], "get_platform_variables": [[54, "get-platform-variables"]], "get_sea_names": [[55, "get-sea-names"]], "get_time_variable": [[56, "get-time-variable"]], "get_time_variables": [[57, "get-time-variables"]], "get_true_latitude_variables": [[58, "get-true-latitude-variables"]], "get_true_longitude_variables": [[59, "get-true-longitude-variables"]], "get_z_variable": [[60, "get-z-variable"]], "get_z_variables": [[61, "get-z-variables"]], "guess_feature_type": [[62, "guess-feature-type"]], "isProfile": [[63, "isprofile"]], "isTimeSeries": [[64, "istimeseries"]], "isTimeSeriesProfile": [[65, "istimeseriesprofile"]], "isTrajectory": [[66, "istrajectory"]], "isTrajectoryProfile": [[67, "istrajectoryprofile"]], "is_2d_regular_grid": [[68, "is-2d-regular-grid"]], "is_2d_static_grid": [[69, "is-2d-static-grid"]], "is_3d_regular_grid": [[70, "is-3d-regular-grid"]], "is_3d_static_grid": [[71, "is-3d-static-grid"]], "is_cf_trajectory": [[72, "is-cf-trajectory"]], "is_compression_coordinate": [[73, "is-compression-coordinate"]], "is_coordinate_variable": [[74, "is-coordinate-variable"]], "is_dataset_valid_ragged_array_repr_featureType": [[75, "is-dataset-valid-ragged-array-repr-featuretype"]], "is_dimensionless_standard_name": [[76, "is-dimensionless-standard-name"]], "is_geophysical": [[77, "is-geophysical"]], "is_mapped_grid": [[78, "is-mapped-grid"]], "is_multi_timeseries_incomplete": [[79, "is-multi-timeseries-incomplete"]], "is_multi_timeseries_orthogonal": [[80, "is-multi-timeseries-orthogonal"]], "is_point": [[81, "is-point"]], "is_profile_incomplete": [[82, "is-profile-incomplete"]], "is_profile_orthogonal": [[83, "is-profile-orthogonal"]], "is_reduced_grid": [[84, "is-reduced-grid"]], "is_single_trajectory": [[85, "is-single-trajectory"]], "is_timeseries": [[86, "is-timeseries"]], "is_timeseries_profile_incomplete": [[87, "is-timeseries-profile-incomplete"]], "is_timeseries_profile_multi_ortho_time": [[88, "is-timeseries-profile-multi-ortho-time"]], "is_timeseries_profile_multi_station": [[89, "is-timeseries-profile-multi-station"]], "is_timeseries_profile_ortho_depth": [[90, "is-timeseries-profile-ortho-depth"]], "is_timeseries_profile_single_ortho_time": [[91, "is-timeseries-profile-single-ortho-time"]], "is_timeseries_profile_single_station": [[92, "is-timeseries-profile-single-station"]], "is_trajectory_profile_incomplete": [[93, "is-trajectory-profile-incomplete"]], "is_trajectory_profile_orthogonal": [[94, "is-trajectory-profile-orthogonal"]], "is_unitless": [[95, "is-unitless"]], "is_variable_valid_ragged_array_repr_featureType": [[96, "is-variable-valid-ragged-array-repr-featuretype"]], "units_convertible": [[97, "units-convertible"]], "Ioos (compliance_checker.ioos)": [[98, "module-compliance_checker.ioos"]], "IOOS0_1Check": [[99, "ioos0-1check"]], "IOOS1_1Check": [[100, "ioos1-1check"]], "IOOS1_2Check": [[101, "ioos1-2check"]], "IOOS1_2_ConventionsValidator": [[102, "ioos1-2-conventionsvalidator"]], "IOOS1_2_PlatformIDValidator": [[103, "ioos1-2-platformidvalidator"]], "IOOSBaseCheck": [[104, "ioosbasecheck"]], "IOOSBaseSOSCheck": [[105, "ioosbasesoscheck"]], "IOOSNCCheck": [[106, "ioosnccheck"]], "IOOSSOSDSCheck": [[107, "ioossosdscheck"]], "IOOSSOSGCCheck": [[108, "ioossosgccheck"]], "NamingAuthorityValidator": [[109, "namingauthorityvalidator"]], "Protocols (compliance_checker.protocols)": [[110, "module-compliance_checker.protocols"]], "Runner (compliance_checker.runner)": [[111, "module-compliance_checker.runner"]], "ComplianceChecker": [[112, "compliancechecker"]], "stdout_redirector": [[113, "stdout-redirector"]], "Suite (compliance_checker.suite)": [[114, "module-compliance_checker.suite"]], "CheckSuite": [[115, "checksuite"]], "extract_docstring_summary": [[116, "extract-docstring-summary"]], "Util (compliance_checker.util)": [[117, "module-compliance_checker.util"]], "dateparse": [[118, "dateparse"]], "datetime_is_iso": [[119, "datetime-is-iso"]], "kvp_convert": [[120, "kvp-convert"]], "compliance_checker": [[121, "compliance-checker"]], "Contents:": [[121, null]], "Indices and tables": [[121, "indices-and-tables"]], "IOOS Compliance Checker": [[122, "ioos-compliance-checker"]], "Advice to data providers": [[122, "advice-to-data-providers"]], "The Compliance Checker Web Tool": [[122, "the-compliance-checker-web-tool"]], "Usage": [[122, "usage"]], "The Compliance Checker Command Line Tool": [[122, "the-compliance-checker-command-line-tool"]], "Concepts & Terminology": [[122, "concepts-terminology"]], "Installation": [[122, "installation"]], "Command Line Usage": [[122, "command-line-usage"]], "Examples": [[122, "examples"]], "Check a local file against CF 1.6": [[122, "check-a-local-file-against-cf-1-6"]], "Check a remote file against ACDD 1.3": [[122, "check-a-remote-file-against-acdd-1-3"]], "Checking against remote ERDDAP Datasets": [[122, "checking-against-remote-erddap-datasets"]], "Write results to text file": [[122, "write-results-to-text-file"]], "Write results to JSON file": [[122, "write-results-to-json-file"]], "Write results to HTML file": [[122, "write-results-to-html-file"]], "Output text from multiple input files to one output file": [[122, "output-text-from-multiple-input-files-to-one-output-file"]], "Output html and text files from multiple input files (part 1)": [[122, "output-html-and-text-files-from-multiple-input-files-part-1"]], "Output html and text files from multiple input files (part 2)": [[122, "output-html-and-text-files-from-multiple-input-files-part-2"]], "Download a particular CF standard names table for use in the test": [[122, "download-a-particular-cf-standard-names-table-for-use-in-the-test"]], "Python Usage": [[122, "python-usage"]], "Compliance Checker Plug-Ins": [[122, "compliance-checker-plug-ins"]], "Current Plug-in Releases:": [[122, "current-plug-in-releases"]], "Examples of how to use the Plug-Ins": [[122, "examples-of-how-to-use-the-plug-ins"]], "Miscellaneous/Acknowledgements": [[122, "miscellaneous-acknowledgements"]], "Contributors": [[122, "contributors"]]}, "indexentries": {"compliance_checker.acdd": [[3, "module-compliance_checker.acdd"]], "module": [[3, "module-compliance_checker.acdd"], [8, "module-compliance_checker.base"], [31, "module-compliance_checker.cf"], [34, "module-compliance_checker.cfutil"], [98, "module-compliance_checker.ioos"], [110, "module-compliance_checker.protocols"], [111, "module-compliance_checker.runner"], [114, "module-compliance_checker.suite"], [117, "module-compliance_checker.util"]], "acdd1_1check (class in compliance_checker.acdd)": [[4, "compliance_checker.acdd.ACDD1_1Check"]], "high (compliance_checker.acdd.acdd1_1check attribute)": [[4, "compliance_checker.acdd.ACDD1_1Check.HIGH"]], "low (compliance_checker.acdd.acdd1_1check attribute)": [[4, "compliance_checker.acdd.ACDD1_1Check.LOW"]], "medium (compliance_checker.acdd.acdd1_1check attribute)": [[4, "compliance_checker.acdd.ACDD1_1Check.MEDIUM"]], "__init__() (compliance_checker.acdd.acdd1_1check method)": [[4, "compliance_checker.acdd.ACDD1_1Check.__init__"]], "check_acknowledgment() (compliance_checker.acdd.acdd1_1check method)": [[4, "compliance_checker.acdd.ACDD1_1Check.check_acknowledgment"]], "check_high() (compliance_checker.acdd.acdd1_1check method)": [[4, "compliance_checker.acdd.ACDD1_1Check.check_high"]], "check_lat_extents() (compliance_checker.acdd.acdd1_1check method)": [[4, "compliance_checker.acdd.ACDD1_1Check.check_lat_extents"]], "check_lon_extents() (compliance_checker.acdd.acdd1_1check method)": [[4, "compliance_checker.acdd.ACDD1_1Check.check_lon_extents"]], "check_recommended() (compliance_checker.acdd.acdd1_1check method)": [[4, "compliance_checker.acdd.ACDD1_1Check.check_recommended"]], "check_suggested() (compliance_checker.acdd.acdd1_1check method)": [[4, "compliance_checker.acdd.ACDD1_1Check.check_suggested"]], "check_time_extents() (compliance_checker.acdd.acdd1_1check method)": [[4, "compliance_checker.acdd.ACDD1_1Check.check_time_extents"]], "check_var_long_name() (compliance_checker.acdd.acdd1_1check method)": [[4, "compliance_checker.acdd.ACDD1_1Check.check_var_long_name"]], "check_var_standard_name() (compliance_checker.acdd.acdd1_1check method)": [[4, "compliance_checker.acdd.ACDD1_1Check.check_var_standard_name"]], "check_var_units() (compliance_checker.acdd.acdd1_1check method)": [[4, "compliance_checker.acdd.ACDD1_1Check.check_var_units"]], "check_vertical_extents() (compliance_checker.acdd.acdd1_1check method)": [[4, "compliance_checker.acdd.ACDD1_1Check.check_vertical_extents"]], "get_applicable_variables() (compliance_checker.acdd.acdd1_1check method)": [[4, "compliance_checker.acdd.ACDD1_1Check.get_applicable_variables"]], "get_test_ctx() (compliance_checker.acdd.acdd1_1check method)": [[4, "compliance_checker.acdd.ACDD1_1Check.get_test_ctx"]], "register_checker (compliance_checker.acdd.acdd1_1check attribute)": [[4, "compliance_checker.acdd.ACDD1_1Check.register_checker"]], "setup() (compliance_checker.acdd.acdd1_1check method)": [[4, "compliance_checker.acdd.ACDD1_1Check.setup"]], "std_check() (compliance_checker.acdd.acdd1_1check class method)": [[4, "compliance_checker.acdd.ACDD1_1Check.std_check"]], "std_check_in() (compliance_checker.acdd.acdd1_1check class method)": [[4, "compliance_checker.acdd.ACDD1_1Check.std_check_in"]], "supported_ds (compliance_checker.acdd.acdd1_1check attribute)": [[4, "compliance_checker.acdd.ACDD1_1Check.supported_ds"]], "verify_convention_version() (compliance_checker.acdd.acdd1_1check method)": [[4, "compliance_checker.acdd.ACDD1_1Check.verify_convention_version"]], "verify_geospatial_bounds() (compliance_checker.acdd.acdd1_1check method)": [[4, "compliance_checker.acdd.ACDD1_1Check.verify_geospatial_bounds"]], "acdd1_3check (class in compliance_checker.acdd)": [[5, "compliance_checker.acdd.ACDD1_3Check"]], "high (compliance_checker.acdd.acdd1_3check attribute)": [[5, "compliance_checker.acdd.ACDD1_3Check.HIGH"]], "low (compliance_checker.acdd.acdd1_3check attribute)": [[5, "compliance_checker.acdd.ACDD1_3Check.LOW"]], "medium (compliance_checker.acdd.acdd1_3check attribute)": [[5, "compliance_checker.acdd.ACDD1_3Check.MEDIUM"]], "__init__() (compliance_checker.acdd.acdd1_3check method)": [[5, "compliance_checker.acdd.ACDD1_3Check.__init__"]], "check_acknowledgment() (compliance_checker.acdd.acdd1_3check method)": [[5, "compliance_checker.acdd.ACDD1_3Check.check_acknowledgment"]], "check_high() (compliance_checker.acdd.acdd1_3check method)": [[5, "compliance_checker.acdd.ACDD1_3Check.check_high"]], "check_id_has_no_blanks() (compliance_checker.acdd.acdd1_3check method)": [[5, "compliance_checker.acdd.ACDD1_3Check.check_id_has_no_blanks"]], "check_lat_extents() (compliance_checker.acdd.acdd1_3check method)": [[5, "compliance_checker.acdd.ACDD1_3Check.check_lat_extents"]], "check_lon_extents() (compliance_checker.acdd.acdd1_3check method)": [[5, "compliance_checker.acdd.ACDD1_3Check.check_lon_extents"]], "check_metadata_link() (compliance_checker.acdd.acdd1_3check method)": [[5, "compliance_checker.acdd.ACDD1_3Check.check_metadata_link"]], "check_recommended() (compliance_checker.acdd.acdd1_3check method)": [[5, "compliance_checker.acdd.ACDD1_3Check.check_recommended"]], "check_suggested() (compliance_checker.acdd.acdd1_3check method)": [[5, "compliance_checker.acdd.ACDD1_3Check.check_suggested"]], "check_time_extents() (compliance_checker.acdd.acdd1_3check method)": [[5, "compliance_checker.acdd.ACDD1_3Check.check_time_extents"]], "check_var_coverage_content_type() (compliance_checker.acdd.acdd1_3check method)": [[5, "compliance_checker.acdd.ACDD1_3Check.check_var_coverage_content_type"]], "check_var_long_name() (compliance_checker.acdd.acdd1_3check method)": [[5, "compliance_checker.acdd.ACDD1_3Check.check_var_long_name"]], "check_var_standard_name() (compliance_checker.acdd.acdd1_3check method)": [[5, "compliance_checker.acdd.ACDD1_3Check.check_var_standard_name"]], "check_var_units() (compliance_checker.acdd.acdd1_3check method)": [[5, "compliance_checker.acdd.ACDD1_3Check.check_var_units"]], "check_vertical_extents() (compliance_checker.acdd.acdd1_3check method)": [[5, "compliance_checker.acdd.ACDD1_3Check.check_vertical_extents"]], "get_applicable_variables() (compliance_checker.acdd.acdd1_3check method)": [[5, "compliance_checker.acdd.ACDD1_3Check.get_applicable_variables"]], "get_test_ctx() (compliance_checker.acdd.acdd1_3check method)": [[5, "compliance_checker.acdd.ACDD1_3Check.get_test_ctx"]], "register_checker (compliance_checker.acdd.acdd1_3check attribute)": [[5, "compliance_checker.acdd.ACDD1_3Check.register_checker"]], "setup() (compliance_checker.acdd.acdd1_3check method)": [[5, "compliance_checker.acdd.ACDD1_3Check.setup"]], "std_check() (compliance_checker.acdd.acdd1_3check class method)": [[5, "compliance_checker.acdd.ACDD1_3Check.std_check"]], "std_check_in() (compliance_checker.acdd.acdd1_3check class method)": [[5, "compliance_checker.acdd.ACDD1_3Check.std_check_in"]], "supported_ds (compliance_checker.acdd.acdd1_3check attribute)": [[5, "compliance_checker.acdd.ACDD1_3Check.supported_ds"]], "verify_convention_version() (compliance_checker.acdd.acdd1_3check method)": [[5, "compliance_checker.acdd.ACDD1_3Check.verify_convention_version"]], "verify_geospatial_bounds() (compliance_checker.acdd.acdd1_3check method)": [[5, "compliance_checker.acdd.ACDD1_3Check.verify_geospatial_bounds"]], "acddbasecheck (class in compliance_checker.acdd)": [[6, "compliance_checker.acdd.ACDDBaseCheck"]], "high (compliance_checker.acdd.acddbasecheck attribute)": [[6, "compliance_checker.acdd.ACDDBaseCheck.HIGH"]], "low (compliance_checker.acdd.acddbasecheck attribute)": [[6, "compliance_checker.acdd.ACDDBaseCheck.LOW"]], "medium (compliance_checker.acdd.acddbasecheck attribute)": [[6, "compliance_checker.acdd.ACDDBaseCheck.MEDIUM"]], "__init__() (compliance_checker.acdd.acddbasecheck method)": [[6, "compliance_checker.acdd.ACDDBaseCheck.__init__"]], "check_acknowledgment() (compliance_checker.acdd.acddbasecheck method)": [[6, "compliance_checker.acdd.ACDDBaseCheck.check_acknowledgment"]], "check_high() (compliance_checker.acdd.acddbasecheck method)": [[6, "compliance_checker.acdd.ACDDBaseCheck.check_high"]], "check_lat_extents() (compliance_checker.acdd.acddbasecheck method)": [[6, "compliance_checker.acdd.ACDDBaseCheck.check_lat_extents"]], "check_lon_extents() (compliance_checker.acdd.acddbasecheck method)": [[6, "compliance_checker.acdd.ACDDBaseCheck.check_lon_extents"]], "check_recommended() (compliance_checker.acdd.acddbasecheck method)": [[6, "compliance_checker.acdd.ACDDBaseCheck.check_recommended"]], "check_suggested() (compliance_checker.acdd.acddbasecheck method)": [[6, "compliance_checker.acdd.ACDDBaseCheck.check_suggested"]], "check_time_extents() (compliance_checker.acdd.acddbasecheck method)": [[6, "compliance_checker.acdd.ACDDBaseCheck.check_time_extents"]], "check_var_long_name() (compliance_checker.acdd.acddbasecheck method)": [[6, "compliance_checker.acdd.ACDDBaseCheck.check_var_long_name"]], "check_var_standard_name() (compliance_checker.acdd.acddbasecheck method)": [[6, "compliance_checker.acdd.ACDDBaseCheck.check_var_standard_name"]], "check_var_units() (compliance_checker.acdd.acddbasecheck method)": [[6, "compliance_checker.acdd.ACDDBaseCheck.check_var_units"]], "check_vertical_extents() (compliance_checker.acdd.acddbasecheck method)": [[6, "compliance_checker.acdd.ACDDBaseCheck.check_vertical_extents"]], "get_applicable_variables() (compliance_checker.acdd.acddbasecheck method)": [[6, "compliance_checker.acdd.ACDDBaseCheck.get_applicable_variables"]], "get_test_ctx() (compliance_checker.acdd.acddbasecheck method)": [[6, "compliance_checker.acdd.ACDDBaseCheck.get_test_ctx"]], "setup() (compliance_checker.acdd.acddbasecheck method)": [[6, "compliance_checker.acdd.ACDDBaseCheck.setup"]], "supported_ds (compliance_checker.acdd.acddbasecheck attribute)": [[6, "compliance_checker.acdd.ACDDBaseCheck.supported_ds"]], "verify_convention_version() (compliance_checker.acdd.acddbasecheck method)": [[6, "compliance_checker.acdd.ACDDBaseCheck.verify_convention_version"]], "verify_geospatial_bounds() (compliance_checker.acdd.acddbasecheck method)": [[6, "compliance_checker.acdd.ACDDBaseCheck.verify_geospatial_bounds"]], "acddnccheck (class in compliance_checker.acdd)": [[7, "compliance_checker.acdd.ACDDNCCheck"]], "high (compliance_checker.acdd.acddnccheck attribute)": [[7, "compliance_checker.acdd.ACDDNCCheck.HIGH"]], "low (compliance_checker.acdd.acddnccheck attribute)": [[7, "compliance_checker.acdd.ACDDNCCheck.LOW"]], "medium (compliance_checker.acdd.acddnccheck attribute)": [[7, "compliance_checker.acdd.ACDDNCCheck.MEDIUM"]], "__init__() (compliance_checker.acdd.acddnccheck method)": [[7, "compliance_checker.acdd.ACDDNCCheck.__init__"]], "check_acknowledgment() (compliance_checker.acdd.acddnccheck method)": [[7, "compliance_checker.acdd.ACDDNCCheck.check_acknowledgment"]], "check_high() (compliance_checker.acdd.acddnccheck method)": [[7, "compliance_checker.acdd.ACDDNCCheck.check_high"]], "check_lat_extents() (compliance_checker.acdd.acddnccheck method)": [[7, "compliance_checker.acdd.ACDDNCCheck.check_lat_extents"]], "check_lon_extents() (compliance_checker.acdd.acddnccheck method)": [[7, "compliance_checker.acdd.ACDDNCCheck.check_lon_extents"]], "check_recommended() (compliance_checker.acdd.acddnccheck method)": [[7, "compliance_checker.acdd.ACDDNCCheck.check_recommended"]], "check_suggested() (compliance_checker.acdd.acddnccheck method)": [[7, "compliance_checker.acdd.ACDDNCCheck.check_suggested"]], "check_time_extents() (compliance_checker.acdd.acddnccheck method)": [[7, "compliance_checker.acdd.ACDDNCCheck.check_time_extents"]], "check_var_long_name() (compliance_checker.acdd.acddnccheck method)": [[7, "compliance_checker.acdd.ACDDNCCheck.check_var_long_name"]], "check_var_standard_name() (compliance_checker.acdd.acddnccheck method)": [[7, "compliance_checker.acdd.ACDDNCCheck.check_var_standard_name"]], "check_var_units() (compliance_checker.acdd.acddnccheck method)": [[7, "compliance_checker.acdd.ACDDNCCheck.check_var_units"]], "check_vertical_extents() (compliance_checker.acdd.acddnccheck method)": [[7, "compliance_checker.acdd.ACDDNCCheck.check_vertical_extents"]], "get_applicable_variables() (compliance_checker.acdd.acddnccheck method)": [[7, "compliance_checker.acdd.ACDDNCCheck.get_applicable_variables"]], "get_test_ctx() (compliance_checker.acdd.acddnccheck method)": [[7, "compliance_checker.acdd.ACDDNCCheck.get_test_ctx"]], "setup() (compliance_checker.acdd.acddnccheck method)": [[7, "compliance_checker.acdd.ACDDNCCheck.setup"]], "std_check() (compliance_checker.acdd.acddnccheck class method)": [[7, "compliance_checker.acdd.ACDDNCCheck.std_check"]], "std_check_in() (compliance_checker.acdd.acddnccheck class method)": [[7, "compliance_checker.acdd.ACDDNCCheck.std_check_in"]], "supported_ds (compliance_checker.acdd.acddnccheck attribute)": [[7, "compliance_checker.acdd.ACDDNCCheck.supported_ds"]], "verify_convention_version() (compliance_checker.acdd.acddnccheck method)": [[7, "compliance_checker.acdd.ACDDNCCheck.verify_convention_version"]], "verify_geospatial_bounds() (compliance_checker.acdd.acddnccheck method)": [[7, "compliance_checker.acdd.ACDDNCCheck.verify_geospatial_bounds"]], "compliance_checker.base": [[8, "module-compliance_checker.base"]], "basecheck (class in compliance_checker.base)": [[9, "compliance_checker.base.BaseCheck"]], "high (compliance_checker.base.basecheck attribute)": [[9, "compliance_checker.base.BaseCheck.HIGH"]], "low (compliance_checker.base.basecheck attribute)": [[9, "compliance_checker.base.BaseCheck.LOW"]], "medium (compliance_checker.base.basecheck attribute)": [[9, "compliance_checker.base.BaseCheck.MEDIUM"]], "__init__() (compliance_checker.base.basecheck method)": [[9, "compliance_checker.base.BaseCheck.__init__"]], "get_test_ctx() (compliance_checker.base.basecheck method)": [[9, "compliance_checker.base.BaseCheck.get_test_ctx"]], "setup() (compliance_checker.base.basecheck method)": [[9, "compliance_checker.base.BaseCheck.setup"]], "supported_ds (compliance_checker.base.basecheck attribute)": [[9, "compliance_checker.base.BaseCheck.supported_ds"]], "basenccheck (class in compliance_checker.base)": [[10, "compliance_checker.base.BaseNCCheck"]], "__init__() (compliance_checker.base.basenccheck method)": [[10, "compliance_checker.base.BaseNCCheck.__init__"]], "std_check() (compliance_checker.base.basenccheck class method)": [[10, "compliance_checker.base.BaseNCCheck.std_check"]], "std_check_in() (compliance_checker.base.basenccheck class method)": [[10, "compliance_checker.base.BaseNCCheck.std_check_in"]], "supported_ds (compliance_checker.base.basenccheck attribute)": [[10, "compliance_checker.base.BaseNCCheck.supported_ds"]], "basesosdscheck (class in compliance_checker.base)": [[11, "compliance_checker.base.BaseSOSDSCheck"]], "__init__() (compliance_checker.base.basesosdscheck method)": [[11, "compliance_checker.base.BaseSOSDSCheck.__init__"]], "supported_ds (compliance_checker.base.basesosdscheck attribute)": [[11, "compliance_checker.base.BaseSOSDSCheck.supported_ds"]], "basesosgccheck (class in compliance_checker.base)": [[12, "compliance_checker.base.BaseSOSGCCheck"]], "__init__() (compliance_checker.base.basesosgccheck method)": [[12, "compliance_checker.base.BaseSOSGCCheck.__init__"]], "supported_ds (compliance_checker.base.basesosgccheck attribute)": [[12, "compliance_checker.base.BaseSOSGCCheck.supported_ds"]], "emailvalidator (class in compliance_checker.base)": [[13, "compliance_checker.base.EmailValidator"]], "__init__() (compliance_checker.base.emailvalidator method)": [[13, "compliance_checker.base.EmailValidator.__init__"]], "validate() (compliance_checker.base.emailvalidator method)": [[13, "compliance_checker.base.EmailValidator.validate"]], "validate_type() (compliance_checker.base.emailvalidator method)": [[13, "compliance_checker.base.EmailValidator.validate_type"]], "validator_fail_msg (compliance_checker.base.emailvalidator attribute)": [[13, "compliance_checker.base.EmailValidator.validator_fail_msg"]], "validator_func() (compliance_checker.base.emailvalidator method)": [[13, "compliance_checker.base.EmailValidator.validator_func"]], "genericfile (class in compliance_checker.base)": [[14, "compliance_checker.base.GenericFile"]], "__init__() (compliance_checker.base.genericfile method)": [[14, "compliance_checker.base.GenericFile.__init__"]], "filepath() (compliance_checker.base.genericfile method)": [[14, "compliance_checker.base.GenericFile.filepath"]], "regexvalidator (class in compliance_checker.base)": [[15, "compliance_checker.base.RegexValidator"]], "__init__() (compliance_checker.base.regexvalidator method)": [[15, "compliance_checker.base.RegexValidator.__init__"]], "validate() (compliance_checker.base.regexvalidator method)": [[15, "compliance_checker.base.RegexValidator.validate"]], "validate_type() (compliance_checker.base.regexvalidator method)": [[15, "compliance_checker.base.RegexValidator.validate_type"]], "validator_fail_msg (compliance_checker.base.regexvalidator attribute)": [[15, "compliance_checker.base.RegexValidator.validator_fail_msg"]], "validator_func() (compliance_checker.base.regexvalidator method)": [[15, "compliance_checker.base.RegexValidator.validator_func"]], "validator_regex (compliance_checker.base.regexvalidator attribute)": [[15, "compliance_checker.base.RegexValidator.validator_regex"]], "result (class in compliance_checker.base)": [[16, "compliance_checker.base.Result"]], "__init__() (compliance_checker.base.result method)": [[16, "compliance_checker.base.Result.__init__"]], "serialize() (compliance_checker.base.result method)": [[16, "compliance_checker.base.Result.serialize"]], "testctx (class in compliance_checker.base)": [[17, "compliance_checker.base.TestCtx"]], "__init__() (compliance_checker.base.testctx method)": [[17, "compliance_checker.base.TestCtx.__init__"]], "add_failure() (compliance_checker.base.testctx method)": [[17, "compliance_checker.base.TestCtx.add_failure"]], "add_pass() (compliance_checker.base.testctx method)": [[17, "compliance_checker.base.TestCtx.add_pass"]], "assert_true() (compliance_checker.base.testctx method)": [[17, "compliance_checker.base.TestCtx.assert_true"]], "to_result() (compliance_checker.base.testctx method)": [[17, "compliance_checker.base.TestCtx.to_result"]], "urlvalidator (class in compliance_checker.base)": [[18, "compliance_checker.base.UrlValidator"]], "__init__() (compliance_checker.base.urlvalidator method)": [[18, "compliance_checker.base.UrlValidator.__init__"]], "validate() (compliance_checker.base.urlvalidator method)": [[18, "compliance_checker.base.UrlValidator.validate"]], "validate_type() (compliance_checker.base.urlvalidator method)": [[18, "compliance_checker.base.UrlValidator.validate_type"]], "validator_fail_msg (compliance_checker.base.urlvalidator attribute)": [[18, "compliance_checker.base.UrlValidator.validator_fail_msg"]], "validator_func() (compliance_checker.base.urlvalidator method)": [[18, "compliance_checker.base.UrlValidator.validator_func"]], "validationobject (class in compliance_checker.base)": [[19, "compliance_checker.base.ValidationObject"]], "__init__() (compliance_checker.base.validationobject method)": [[19, "compliance_checker.base.ValidationObject.__init__"]], "expected_type (compliance_checker.base.validationobject attribute)": [[19, "compliance_checker.base.ValidationObject.expected_type"]], "validate() (compliance_checker.base.validationobject method)": [[19, "compliance_checker.base.ValidationObject.validate"]], "validate_type() (compliance_checker.base.validationobject method)": [[19, "compliance_checker.base.ValidationObject.validate_type"]], "validator_fail_msg (compliance_checker.base.validationobject attribute)": [[19, "compliance_checker.base.ValidationObject.validator_fail_msg"]], "validator_func() (compliance_checker.base.validationobject method)": [[19, "compliance_checker.base.ValidationObject.validator_func"]], "attr_check() (in module compliance_checker.base)": [[20, "compliance_checker.base.attr_check"]], "check_has() (in module compliance_checker.base)": [[21, "compliance_checker.base.check_has"]], "csv_splitter() (in module compliance_checker.base)": [[22, "compliance_checker.base.csv_splitter"]], "fix_return_value() (in module compliance_checker.base)": [[23, "compliance_checker.base.fix_return_value"]], "get_namespaces() (in module compliance_checker.base)": [[24, "compliance_checker.base.get_namespaces"]], "maybe_get_global_attr() (in module compliance_checker.base)": [[25, "compliance_checker.base.maybe_get_global_attr"]], "ratable_result() (in module compliance_checker.base)": [[26, "compliance_checker.base.ratable_result"]], "score_group() (in module compliance_checker.base)": [[27, "compliance_checker.base.score_group"]], "std_check() (in module compliance_checker.base)": [[28, "compliance_checker.base.std_check"]], "std_check_in() (in module compliance_checker.base)": [[29, "compliance_checker.base.std_check_in"]], "xpath_check() (in module compliance_checker.base)": [[30, "compliance_checker.base.xpath_check"]], "compliance_checker.cf": [[31, "module-compliance_checker.cf"]], "cf1_6check (class in compliance_checker.cf)": [[32, "compliance_checker.cf.CF1_6Check"]], "high (compliance_checker.cf.cf1_6check attribute)": [[32, "compliance_checker.cf.CF1_6Check.HIGH"]], "low (compliance_checker.cf.cf1_6check attribute)": [[32, "compliance_checker.cf.CF1_6Check.LOW"]], "medium (compliance_checker.cf.cf1_6check attribute)": [[32, "compliance_checker.cf.CF1_6Check.MEDIUM"]], "__init__() (compliance_checker.cf.cf1_6check method)": [[32, "compliance_checker.cf.CF1_6Check.__init__"]], "appendix_a (compliance_checker.cf.cf1_6check attribute)": [[32, "compliance_checker.cf.CF1_6Check.appendix_a"]], "appendix_d_parametric_coords (compliance_checker.cf.cf1_6check attribute)": [[32, "compliance_checker.cf.CF1_6Check.appendix_d_parametric_coords"]], "check_add_offset_scale_factor_type() (compliance_checker.cf.cf1_6check method)": [[32, "compliance_checker.cf.CF1_6Check.check_add_offset_scale_factor_type"]], "check_ancillary_variables() (compliance_checker.cf.cf1_6check method)": [[32, "compliance_checker.cf.CF1_6Check.check_ancillary_variables"]], "check_appendix_a() (compliance_checker.cf.cf1_6check method)": [[32, "compliance_checker.cf.CF1_6Check.check_appendix_a"]], "check_aux_coordinates() (compliance_checker.cf.cf1_6check method)": [[32, "compliance_checker.cf.CF1_6Check.check_aux_coordinates"]], "check_calendar() (compliance_checker.cf.cf1_6check method)": [[32, "compliance_checker.cf.CF1_6Check.check_calendar"]], "check_cell_boundaries() (compliance_checker.cf.cf1_6check method)": [[32, "compliance_checker.cf.CF1_6Check.check_cell_boundaries"]], "check_cell_measures() (compliance_checker.cf.cf1_6check method)": [[32, "compliance_checker.cf.CF1_6Check.check_cell_measures"]], "check_cell_methods() (compliance_checker.cf.cf1_6check method)": [[32, "compliance_checker.cf.CF1_6Check.check_cell_methods"]], "check_cf_role() (compliance_checker.cf.cf1_6check method)": [[32, "compliance_checker.cf.CF1_6Check.check_cf_role"]], "check_child_attr_data_types() (compliance_checker.cf.cf1_6check method)": [[32, "compliance_checker.cf.CF1_6Check.check_child_attr_data_types"]], "check_climatological_statistics() (compliance_checker.cf.cf1_6check method)": [[32, "compliance_checker.cf.CF1_6Check.check_climatological_statistics"]], "check_compression_gathering() (compliance_checker.cf.cf1_6check method)": [[32, "compliance_checker.cf.CF1_6Check.check_compression_gathering"]], "check_convention_globals() (compliance_checker.cf.cf1_6check method)": [[32, "compliance_checker.cf.CF1_6Check.check_convention_globals"]], "check_convention_possibly_var_attrs() (compliance_checker.cf.cf1_6check method)": [[32, "compliance_checker.cf.CF1_6Check.check_convention_possibly_var_attrs"]], "check_conventions_version() (compliance_checker.cf.cf1_6check method)": [[32, "compliance_checker.cf.CF1_6Check.check_conventions_version"]], "check_coordinate_types() (compliance_checker.cf.cf1_6check method)": [[32, "compliance_checker.cf.CF1_6Check.check_coordinate_types"]], "check_coordinate_variables_strict_monotonicity() (compliance_checker.cf.cf1_6check method)": [[32, "compliance_checker.cf.CF1_6Check.check_coordinate_variables_strict_monotonicity"]], "check_data_types() (compliance_checker.cf.cf1_6check method)": [[32, "compliance_checker.cf.CF1_6Check.check_data_types"]], "check_dimension_names() (compliance_checker.cf.cf1_6check method)": [[32, "compliance_checker.cf.CF1_6Check.check_dimension_names"]], "check_dimension_order() (compliance_checker.cf.cf1_6check method)": [[32, "compliance_checker.cf.CF1_6Check.check_dimension_order"]], "check_dimensional_vertical_coordinate() (compliance_checker.cf.cf1_6check method)": [[32, "compliance_checker.cf.CF1_6Check.check_dimensional_vertical_coordinate"]], "check_dimensionless_vertical_coordinates() (compliance_checker.cf.cf1_6check method)": [[32, "compliance_checker.cf.CF1_6Check.check_dimensionless_vertical_coordinates"]], "check_duplicate_axis() (compliance_checker.cf.cf1_6check method)": [[32, "compliance_checker.cf.CF1_6Check.check_duplicate_axis"]], "check_feature_type() (compliance_checker.cf.cf1_6check method)": [[32, "compliance_checker.cf.CF1_6Check.check_feature_type"]], "check_filename() (compliance_checker.cf.cf1_6check method)": [[32, "compliance_checker.cf.CF1_6Check.check_filename"]], "check_fill_value_equal_missing_value() (compliance_checker.cf.cf1_6check method)": [[32, "compliance_checker.cf.CF1_6Check.check_fill_value_equal_missing_value"]], "check_fill_value_outside_valid_range() (compliance_checker.cf.cf1_6check method)": [[32, "compliance_checker.cf.CF1_6Check.check_fill_value_outside_valid_range"]], "check_flags() (compliance_checker.cf.cf1_6check method)": [[32, "compliance_checker.cf.CF1_6Check.check_flags"]], "check_geographic_region() (compliance_checker.cf.cf1_6check method)": [[32, "compliance_checker.cf.CF1_6Check.check_geographic_region"]], "check_grid_coordinates() (compliance_checker.cf.cf1_6check method)": [[32, "compliance_checker.cf.CF1_6Check.check_grid_coordinates"]], "check_grid_mapping() (compliance_checker.cf.cf1_6check method)": [[32, "compliance_checker.cf.CF1_6Check.check_grid_mapping"]], "check_hints() (compliance_checker.cf.cf1_6check method)": [[32, "compliance_checker.cf.CF1_6Check.check_hints"]], "check_latitude() (compliance_checker.cf.cf1_6check method)": [[32, "compliance_checker.cf.CF1_6Check.check_latitude"]], "check_longitude() (compliance_checker.cf.cf1_6check method)": [[32, "compliance_checker.cf.CF1_6Check.check_longitude"]], "check_multi_dimensional_coords() (compliance_checker.cf.cf1_6check method)": [[32, "compliance_checker.cf.CF1_6Check.check_multi_dimensional_coords"]], "check_names_unique() (compliance_checker.cf.cf1_6check method)": [[32, "compliance_checker.cf.CF1_6Check.check_names_unique"]], "check_naming_conventions() (compliance_checker.cf.cf1_6check method)": [[32, "compliance_checker.cf.CF1_6Check.check_naming_conventions"]], "check_packed_data() (compliance_checker.cf.cf1_6check method)": [[32, "compliance_checker.cf.CF1_6Check.check_packed_data"]], "check_reduced_horizontal_grid() (compliance_checker.cf.cf1_6check method)": [[32, "compliance_checker.cf.CF1_6Check.check_reduced_horizontal_grid"]], "check_standard_name() (compliance_checker.cf.cf1_6check method)": [[32, "compliance_checker.cf.CF1_6Check.check_standard_name"]], "check_time_coordinate() (compliance_checker.cf.cf1_6check method)": [[32, "compliance_checker.cf.CF1_6Check.check_time_coordinate"]], "check_units() (compliance_checker.cf.cf1_6check method)": [[32, "compliance_checker.cf.CF1_6Check.check_units"]], "check_valid_range_and_valid_min_max_present() (compliance_checker.cf.cf1_6check method)": [[32, "compliance_checker.cf.CF1_6Check.check_valid_range_and_valid_min_max_present"]], "check_variable_features() (compliance_checker.cf.cf1_6check method)": [[32, "compliance_checker.cf.CF1_6Check.check_variable_features"]], "get_test_ctx() (compliance_checker.cf.cf1_6check method)": [[32, "compliance_checker.cf.CF1_6Check.get_test_ctx"]], "register_checker (compliance_checker.cf.cf1_6check attribute)": [[32, "compliance_checker.cf.CF1_6Check.register_checker"]], "setup() (compliance_checker.cf.cf1_6check method)": [[32, "compliance_checker.cf.CF1_6Check.setup"]], "std_check() (compliance_checker.cf.cf1_6check class method)": [[32, "compliance_checker.cf.CF1_6Check.std_check"]], "std_check_in() (compliance_checker.cf.cf1_6check class method)": [[32, "compliance_checker.cf.CF1_6Check.std_check_in"]], "supported_ds (compliance_checker.cf.cf1_6check attribute)": [[32, "compliance_checker.cf.CF1_6Check.supported_ds"]], "cf1_7check (class in compliance_checker.cf)": [[33, "compliance_checker.cf.CF1_7Check"]], "high (compliance_checker.cf.cf1_7check attribute)": [[33, "compliance_checker.cf.CF1_7Check.HIGH"]], "low (compliance_checker.cf.cf1_7check attribute)": [[33, "compliance_checker.cf.CF1_7Check.LOW"]], "medium (compliance_checker.cf.cf1_7check attribute)": [[33, "compliance_checker.cf.CF1_7Check.MEDIUM"]], "__init__() (compliance_checker.cf.cf1_7check method)": [[33, "compliance_checker.cf.CF1_7Check.__init__"]], "appendix_a (compliance_checker.cf.cf1_7check attribute)": [[33, "compliance_checker.cf.CF1_7Check.appendix_a"]], "appendix_d_parametric_coords (compliance_checker.cf.cf1_7check attribute)": [[33, "compliance_checker.cf.CF1_7Check.appendix_d_parametric_coords"]], "check_actual_range() (compliance_checker.cf.cf1_7check method)": [[33, "compliance_checker.cf.CF1_7Check.check_actual_range"]], "check_add_offset_scale_factor_type() (compliance_checker.cf.cf1_7check method)": [[33, "compliance_checker.cf.CF1_7Check.check_add_offset_scale_factor_type"]], "check_ancillary_variables() (compliance_checker.cf.cf1_7check method)": [[33, "compliance_checker.cf.CF1_7Check.check_ancillary_variables"]], "check_appendix_a() (compliance_checker.cf.cf1_7check method)": [[33, "compliance_checker.cf.CF1_7Check.check_appendix_a"]], "check_aux_coordinates() (compliance_checker.cf.cf1_7check method)": [[33, "compliance_checker.cf.CF1_7Check.check_aux_coordinates"]], "check_calendar() (compliance_checker.cf.cf1_7check method)": [[33, "compliance_checker.cf.CF1_7Check.check_calendar"]], "check_cell_boundaries() (compliance_checker.cf.cf1_7check method)": [[33, "compliance_checker.cf.CF1_7Check.check_cell_boundaries"]], "check_cell_boundaries_interval() (compliance_checker.cf.cf1_7check method)": [[33, "compliance_checker.cf.CF1_7Check.check_cell_boundaries_interval"]], "check_cell_measures() (compliance_checker.cf.cf1_7check method)": [[33, "compliance_checker.cf.CF1_7Check.check_cell_measures"]], "check_cell_methods() (compliance_checker.cf.cf1_7check method)": [[33, "compliance_checker.cf.CF1_7Check.check_cell_methods"]], "check_cf_role() (compliance_checker.cf.cf1_7check method)": [[33, "compliance_checker.cf.CF1_7Check.check_cf_role"]], "check_child_attr_data_types() (compliance_checker.cf.cf1_7check method)": [[33, "compliance_checker.cf.CF1_7Check.check_child_attr_data_types"]], "check_climatological_statistics() (compliance_checker.cf.cf1_7check method)": [[33, "compliance_checker.cf.CF1_7Check.check_climatological_statistics"]], "check_compression_gathering() (compliance_checker.cf.cf1_7check method)": [[33, "compliance_checker.cf.CF1_7Check.check_compression_gathering"]], "check_convention_globals() (compliance_checker.cf.cf1_7check method)": [[33, "compliance_checker.cf.CF1_7Check.check_convention_globals"]], "check_convention_possibly_var_attrs() (compliance_checker.cf.cf1_7check method)": [[33, "compliance_checker.cf.CF1_7Check.check_convention_possibly_var_attrs"]], "check_conventions_version() (compliance_checker.cf.cf1_7check method)": [[33, "compliance_checker.cf.CF1_7Check.check_conventions_version"]], "check_coordinate_types() (compliance_checker.cf.cf1_7check method)": [[33, "compliance_checker.cf.CF1_7Check.check_coordinate_types"]], "check_coordinate_variables_strict_monotonicity() (compliance_checker.cf.cf1_7check method)": [[33, "compliance_checker.cf.CF1_7Check.check_coordinate_variables_strict_monotonicity"]], "check_data_types() (compliance_checker.cf.cf1_7check method)": [[33, "compliance_checker.cf.CF1_7Check.check_data_types"]], "check_dimension_names() (compliance_checker.cf.cf1_7check method)": [[33, "compliance_checker.cf.CF1_7Check.check_dimension_names"]], "check_dimension_order() (compliance_checker.cf.cf1_7check method)": [[33, "compliance_checker.cf.CF1_7Check.check_dimension_order"]], "check_dimensional_vertical_coordinate() (compliance_checker.cf.cf1_7check method)": [[33, "compliance_checker.cf.CF1_7Check.check_dimensional_vertical_coordinate"]], "check_dimensionless_vertical_coordinates() (compliance_checker.cf.cf1_7check method)": [[33, "compliance_checker.cf.CF1_7Check.check_dimensionless_vertical_coordinates"]], "check_duplicate_axis() (compliance_checker.cf.cf1_7check method)": [[33, "compliance_checker.cf.CF1_7Check.check_duplicate_axis"]], "check_external_variables() (compliance_checker.cf.cf1_7check method)": [[33, "compliance_checker.cf.CF1_7Check.check_external_variables"]], "check_feature_type() (compliance_checker.cf.cf1_7check method)": [[33, "compliance_checker.cf.CF1_7Check.check_feature_type"]], "check_filename() (compliance_checker.cf.cf1_7check method)": [[33, "compliance_checker.cf.CF1_7Check.check_filename"]], "check_fill_value_equal_missing_value() (compliance_checker.cf.cf1_7check method)": [[33, "compliance_checker.cf.CF1_7Check.check_fill_value_equal_missing_value"]], "check_fill_value_outside_valid_range() (compliance_checker.cf.cf1_7check method)": [[33, "compliance_checker.cf.CF1_7Check.check_fill_value_outside_valid_range"]], "check_flags() (compliance_checker.cf.cf1_7check method)": [[33, "compliance_checker.cf.CF1_7Check.check_flags"]], "check_geographic_region() (compliance_checker.cf.cf1_7check method)": [[33, "compliance_checker.cf.CF1_7Check.check_geographic_region"]], "check_grid_coordinates() (compliance_checker.cf.cf1_7check method)": [[33, "compliance_checker.cf.CF1_7Check.check_grid_coordinates"]], "check_grid_mapping() (compliance_checker.cf.cf1_7check method)": [[33, "compliance_checker.cf.CF1_7Check.check_grid_mapping"]], "check_hints() (compliance_checker.cf.cf1_7check method)": [[33, "compliance_checker.cf.CF1_7Check.check_hints"]], "check_latitude() (compliance_checker.cf.cf1_7check method)": [[33, "compliance_checker.cf.CF1_7Check.check_latitude"]], "check_longitude() (compliance_checker.cf.cf1_7check method)": [[33, "compliance_checker.cf.CF1_7Check.check_longitude"]], "check_multi_dimensional_coords() (compliance_checker.cf.cf1_7check method)": [[33, "compliance_checker.cf.CF1_7Check.check_multi_dimensional_coords"]], "check_names_unique() (compliance_checker.cf.cf1_7check method)": [[33, "compliance_checker.cf.CF1_7Check.check_names_unique"]], "check_naming_conventions() (compliance_checker.cf.cf1_7check method)": [[33, "compliance_checker.cf.CF1_7Check.check_naming_conventions"]], "check_packed_data() (compliance_checker.cf.cf1_7check method)": [[33, "compliance_checker.cf.CF1_7Check.check_packed_data"]], "check_reduced_horizontal_grid() (compliance_checker.cf.cf1_7check method)": [[33, "compliance_checker.cf.CF1_7Check.check_reduced_horizontal_grid"]], "check_standard_name() (compliance_checker.cf.cf1_7check method)": [[33, "compliance_checker.cf.CF1_7Check.check_standard_name"]], "check_standard_name_deprecated_modifiers() (compliance_checker.cf.cf1_7check method)": [[33, "compliance_checker.cf.CF1_7Check.check_standard_name_deprecated_modifiers"]], "check_time_coordinate() (compliance_checker.cf.cf1_7check method)": [[33, "compliance_checker.cf.CF1_7Check.check_time_coordinate"]], "check_units() (compliance_checker.cf.cf1_7check method)": [[33, "compliance_checker.cf.CF1_7Check.check_units"]], "check_valid_range_and_valid_min_max_present() (compliance_checker.cf.cf1_7check method)": [[33, "compliance_checker.cf.CF1_7Check.check_valid_range_and_valid_min_max_present"]], "check_variable_features() (compliance_checker.cf.cf1_7check method)": [[33, "compliance_checker.cf.CF1_7Check.check_variable_features"]], "get_test_ctx() (compliance_checker.cf.cf1_7check method)": [[33, "compliance_checker.cf.CF1_7Check.get_test_ctx"]], "register_checker (compliance_checker.cf.cf1_7check attribute)": [[33, "compliance_checker.cf.CF1_7Check.register_checker"]], "setup() (compliance_checker.cf.cf1_7check method)": [[33, "compliance_checker.cf.CF1_7Check.setup"]], "std_check() (compliance_checker.cf.cf1_7check class method)": [[33, "compliance_checker.cf.CF1_7Check.std_check"]], "std_check_in() (compliance_checker.cf.cf1_7check class method)": [[33, "compliance_checker.cf.CF1_7Check.std_check_in"]], "supported_ds (compliance_checker.cf.cf1_7check attribute)": [[33, "compliance_checker.cf.CF1_7Check.supported_ds"]], "compliance_checker.cfutil": [[34, "module-compliance_checker.cfutil"]], "attr_membership() (in module compliance_checker.cfutil)": [[35, "compliance_checker.cfutil.attr_membership"]], "coordinate_dimension_matrix() (in module compliance_checker.cfutil)": [[36, "compliance_checker.cfutil.coordinate_dimension_matrix"]], "get_auxiliary_coordinate_variables() (in module compliance_checker.cfutil)": [[37, "compliance_checker.cfutil.get_auxiliary_coordinate_variables"]], "get_axis_map() (in module compliance_checker.cfutil)": [[38, "compliance_checker.cfutil.get_axis_map"]], "get_axis_variables() (in module compliance_checker.cfutil)": [[39, "compliance_checker.cfutil.get_axis_variables"]], "get_bounds_variables() (in module compliance_checker.cfutil)": [[40, "compliance_checker.cfutil.get_bounds_variables"]], "get_cell_boundary_map() (in module compliance_checker.cfutil)": [[41, "compliance_checker.cfutil.get_cell_boundary_map"]], "get_cell_boundary_variables() (in module compliance_checker.cfutil)": [[42, "compliance_checker.cfutil.get_cell_boundary_variables"]], "get_climatology_variable() (in module compliance_checker.cfutil)": [[43, "compliance_checker.cfutil.get_climatology_variable"]], "get_coordinate_variables() (in module compliance_checker.cfutil)": [[44, "compliance_checker.cfutil.get_coordinate_variables"]], "get_flag_variables() (in module compliance_checker.cfutil)": [[45, "compliance_checker.cfutil.get_flag_variables"]], "get_forecast_metadata_variables() (in module compliance_checker.cfutil)": [[46, "compliance_checker.cfutil.get_forecast_metadata_variables"]], "get_geophysical_variables() (in module compliance_checker.cfutil)": [[47, "compliance_checker.cfutil.get_geophysical_variables"]], "get_grid_mapping_variables() (in module compliance_checker.cfutil)": [[48, "compliance_checker.cfutil.get_grid_mapping_variables"]], "get_instrument_variables() (in module compliance_checker.cfutil)": [[49, "compliance_checker.cfutil.get_instrument_variables"]], "get_lat_variable() (in module compliance_checker.cfutil)": [[50, "compliance_checker.cfutil.get_lat_variable"]], "get_latitude_variables() (in module compliance_checker.cfutil)": [[51, "compliance_checker.cfutil.get_latitude_variables"]], "get_lon_variable() (in module compliance_checker.cfutil)": [[52, "compliance_checker.cfutil.get_lon_variable"]], "get_longitude_variables() (in module compliance_checker.cfutil)": [[53, "compliance_checker.cfutil.get_longitude_variables"]], "get_platform_variables() (in module compliance_checker.cfutil)": [[54, "compliance_checker.cfutil.get_platform_variables"]], "get_sea_names() (in module compliance_checker.cfutil)": [[55, "compliance_checker.cfutil.get_sea_names"]], "get_time_variable() (in module compliance_checker.cfutil)": [[56, "compliance_checker.cfutil.get_time_variable"]], "get_time_variables() (in module compliance_checker.cfutil)": [[57, "compliance_checker.cfutil.get_time_variables"]], "get_true_latitude_variables() (in module compliance_checker.cfutil)": [[58, "compliance_checker.cfutil.get_true_latitude_variables"]], "get_true_longitude_variables() (in module compliance_checker.cfutil)": [[59, "compliance_checker.cfutil.get_true_longitude_variables"]], "get_z_variable() (in module compliance_checker.cfutil)": [[60, "compliance_checker.cfutil.get_z_variable"]], "get_z_variables() (in module compliance_checker.cfutil)": [[61, "compliance_checker.cfutil.get_z_variables"]], "guess_feature_type() (in module compliance_checker.cfutil)": [[62, "compliance_checker.cfutil.guess_feature_type"]], "isprofile() (in module compliance_checker.cfutil)": [[63, "compliance_checker.cfutil.isProfile"]], "istimeseries() (in module compliance_checker.cfutil)": [[64, "compliance_checker.cfutil.isTimeSeries"]], "istimeseriesprofile() (in module compliance_checker.cfutil)": [[65, "compliance_checker.cfutil.isTimeSeriesProfile"]], "istrajectory() (in module compliance_checker.cfutil)": [[66, "compliance_checker.cfutil.isTrajectory"]], "istrajectoryprofile() (in module compliance_checker.cfutil)": [[67, "compliance_checker.cfutil.isTrajectoryProfile"]], "is_2d_regular_grid() (in module compliance_checker.cfutil)": [[68, "compliance_checker.cfutil.is_2d_regular_grid"]], "is_2d_static_grid() (in module compliance_checker.cfutil)": [[69, "compliance_checker.cfutil.is_2d_static_grid"]], "is_3d_regular_grid() (in module compliance_checker.cfutil)": [[70, "compliance_checker.cfutil.is_3d_regular_grid"]], "is_3d_static_grid() (in module compliance_checker.cfutil)": [[71, "compliance_checker.cfutil.is_3d_static_grid"]], "is_cf_trajectory() (in module compliance_checker.cfutil)": [[72, "compliance_checker.cfutil.is_cf_trajectory"]], "is_compression_coordinate() (in module compliance_checker.cfutil)": [[73, "compliance_checker.cfutil.is_compression_coordinate"]], "is_coordinate_variable() (in module compliance_checker.cfutil)": [[74, "compliance_checker.cfutil.is_coordinate_variable"]], "is_dataset_valid_ragged_array_repr_featuretype() (in module compliance_checker.cfutil)": [[75, "compliance_checker.cfutil.is_dataset_valid_ragged_array_repr_featureType"]], "is_dimensionless_standard_name() (in module compliance_checker.cfutil)": [[76, "compliance_checker.cfutil.is_dimensionless_standard_name"]], "is_geophysical() (in module compliance_checker.cfutil)": [[77, "compliance_checker.cfutil.is_geophysical"]], "is_mapped_grid() (in module compliance_checker.cfutil)": [[78, "compliance_checker.cfutil.is_mapped_grid"]], "is_multi_timeseries_incomplete() (in module compliance_checker.cfutil)": [[79, "compliance_checker.cfutil.is_multi_timeseries_incomplete"]], "is_multi_timeseries_orthogonal() (in module compliance_checker.cfutil)": [[80, "compliance_checker.cfutil.is_multi_timeseries_orthogonal"]], "is_point() (in module compliance_checker.cfutil)": [[81, "compliance_checker.cfutil.is_point"]], "is_profile_incomplete() (in module compliance_checker.cfutil)": [[82, "compliance_checker.cfutil.is_profile_incomplete"]], "is_profile_orthogonal() (in module compliance_checker.cfutil)": [[83, "compliance_checker.cfutil.is_profile_orthogonal"]], "is_reduced_grid() (in module compliance_checker.cfutil)": [[84, "compliance_checker.cfutil.is_reduced_grid"]], "is_single_trajectory() (in module compliance_checker.cfutil)": [[85, "compliance_checker.cfutil.is_single_trajectory"]], "is_timeseries() (in module compliance_checker.cfutil)": [[86, "compliance_checker.cfutil.is_timeseries"]], "is_timeseries_profile_incomplete() (in module compliance_checker.cfutil)": [[87, "compliance_checker.cfutil.is_timeseries_profile_incomplete"]], "is_timeseries_profile_multi_ortho_time() (in module compliance_checker.cfutil)": [[88, "compliance_checker.cfutil.is_timeseries_profile_multi_ortho_time"]], "is_timeseries_profile_multi_station() (in module compliance_checker.cfutil)": [[89, "compliance_checker.cfutil.is_timeseries_profile_multi_station"]], "is_timeseries_profile_ortho_depth() (in module compliance_checker.cfutil)": [[90, "compliance_checker.cfutil.is_timeseries_profile_ortho_depth"]], "is_timeseries_profile_single_ortho_time() (in module compliance_checker.cfutil)": [[91, "compliance_checker.cfutil.is_timeseries_profile_single_ortho_time"]], "is_timeseries_profile_single_station() (in module compliance_checker.cfutil)": [[92, "compliance_checker.cfutil.is_timeseries_profile_single_station"]], "is_trajectory_profile_incomplete() (in module compliance_checker.cfutil)": [[93, "compliance_checker.cfutil.is_trajectory_profile_incomplete"]], "is_trajectory_profile_orthogonal() (in module compliance_checker.cfutil)": [[94, "compliance_checker.cfutil.is_trajectory_profile_orthogonal"]], "is_unitless() (in module compliance_checker.cfutil)": [[95, "compliance_checker.cfutil.is_unitless"]], "is_variable_valid_ragged_array_repr_featuretype() (in module compliance_checker.cfutil)": [[96, "compliance_checker.cfutil.is_variable_valid_ragged_array_repr_featureType"]], "units_convertible() (in module compliance_checker.cfutil)": [[97, "compliance_checker.cfutil.units_convertible"]], "compliance_checker.ioos": [[98, "module-compliance_checker.ioos"]], "high (compliance_checker.ioos.ioos0_1check attribute)": [[99, "compliance_checker.ioos.IOOS0_1Check.HIGH"]], "ioos0_1check (class in compliance_checker.ioos)": [[99, "compliance_checker.ioos.IOOS0_1Check"]], "low (compliance_checker.ioos.ioos0_1check attribute)": [[99, "compliance_checker.ioos.IOOS0_1Check.LOW"]], "medium (compliance_checker.ioos.ioos0_1check attribute)": [[99, "compliance_checker.ioos.IOOS0_1Check.MEDIUM"]], "__init__() (compliance_checker.ioos.ioos0_1check method)": [[99, "compliance_checker.ioos.IOOS0_1Check.__init__"]], "check_altitude_units() (compliance_checker.ioos.ioos0_1check method)": [[99, "compliance_checker.ioos.IOOS0_1Check.check_altitude_units"]], "check_global_attributes() (compliance_checker.ioos.ioos0_1check method)": [[99, "compliance_checker.ioos.IOOS0_1Check.check_global_attributes"]], "check_station_location_lat() (compliance_checker.ioos.ioos0_1check method)": [[99, "compliance_checker.ioos.IOOS0_1Check.check_station_location_lat"]], "check_station_location_lon() (compliance_checker.ioos.ioos0_1check method)": [[99, "compliance_checker.ioos.IOOS0_1Check.check_station_location_lon"]], "check_time_period() (compliance_checker.ioos.ioos0_1check method)": [[99, "compliance_checker.ioos.IOOS0_1Check.check_time_period"]], "check_variable_attributes() (compliance_checker.ioos.ioos0_1check method)": [[99, "compliance_checker.ioos.IOOS0_1Check.check_variable_attributes"]], "check_variable_names() (compliance_checker.ioos.ioos0_1check method)": [[99, "compliance_checker.ioos.IOOS0_1Check.check_variable_names"]], "check_variable_units() (compliance_checker.ioos.ioos0_1check method)": [[99, "compliance_checker.ioos.IOOS0_1Check.check_variable_units"]], "get_test_ctx() (compliance_checker.ioos.ioos0_1check method)": [[99, "compliance_checker.ioos.IOOS0_1Check.get_test_ctx"]], "register_checker (compliance_checker.ioos.ioos0_1check attribute)": [[99, "compliance_checker.ioos.IOOS0_1Check.register_checker"]], "setup() (compliance_checker.ioos.ioos0_1check method)": [[99, "compliance_checker.ioos.IOOS0_1Check.setup"]], "std_check() (compliance_checker.ioos.ioos0_1check class method)": [[99, "compliance_checker.ioos.IOOS0_1Check.std_check"]], "std_check_in() (compliance_checker.ioos.ioos0_1check class method)": [[99, "compliance_checker.ioos.IOOS0_1Check.std_check_in"]], "supported_ds (compliance_checker.ioos.ioos0_1check attribute)": [[99, "compliance_checker.ioos.IOOS0_1Check.supported_ds"]], "high (compliance_checker.ioos.ioos1_1check attribute)": [[100, "compliance_checker.ioos.IOOS1_1Check.HIGH"]], "ioos1_1check (class in compliance_checker.ioos)": [[100, "compliance_checker.ioos.IOOS1_1Check"]], "low (compliance_checker.ioos.ioos1_1check attribute)": [[100, "compliance_checker.ioos.IOOS1_1Check.LOW"]], "medium (compliance_checker.ioos.ioos1_1check attribute)": [[100, "compliance_checker.ioos.IOOS1_1Check.MEDIUM"]], "__init__() (compliance_checker.ioos.ioos1_1check method)": [[100, "compliance_checker.ioos.IOOS1_1Check.__init__"]], "check_geophysical_vars_fill_value() (compliance_checker.ioos.ioos1_1check method)": [[100, "compliance_checker.ioos.IOOS1_1Check.check_geophysical_vars_fill_value"]], "check_geophysical_vars_standard_name() (compliance_checker.ioos.ioos1_1check method)": [[100, "compliance_checker.ioos.IOOS1_1Check.check_geophysical_vars_standard_name"]], "check_high() (compliance_checker.ioos.ioos1_1check method)": [[100, "compliance_checker.ioos.IOOS1_1Check.check_high"]], "check_platform_variable_attributes() (compliance_checker.ioos.ioos1_1check method)": [[100, "compliance_checker.ioos.IOOS1_1Check.check_platform_variable_attributes"]], "check_platform_variables() (compliance_checker.ioos.ioos1_1check method)": [[100, "compliance_checker.ioos.IOOS1_1Check.check_platform_variables"]], "check_recommended() (compliance_checker.ioos.ioos1_1check method)": [[100, "compliance_checker.ioos.IOOS1_1Check.check_recommended"]], "check_station_location_lat() (compliance_checker.ioos.ioos1_1check method)": [[100, "compliance_checker.ioos.IOOS1_1Check.check_station_location_lat"]], "check_station_location_lon() (compliance_checker.ioos.ioos1_1check method)": [[100, "compliance_checker.ioos.IOOS1_1Check.check_station_location_lon"]], "check_time_period() (compliance_checker.ioos.ioos1_1check method)": [[100, "compliance_checker.ioos.IOOS1_1Check.check_time_period"]], "check_units() (compliance_checker.ioos.ioos1_1check method)": [[100, "compliance_checker.ioos.IOOS1_1Check.check_units"]], "get_test_ctx() (compliance_checker.ioos.ioos1_1check method)": [[100, "compliance_checker.ioos.IOOS1_1Check.get_test_ctx"]], "register_checker (compliance_checker.ioos.ioos1_1check attribute)": [[100, "compliance_checker.ioos.IOOS1_1Check.register_checker"]], "setup() (compliance_checker.ioos.ioos1_1check method)": [[100, "compliance_checker.ioos.IOOS1_1Check.setup"]], "std_check() (compliance_checker.ioos.ioos1_1check class method)": [[100, "compliance_checker.ioos.IOOS1_1Check.std_check"]], "std_check_in() (compliance_checker.ioos.ioos1_1check class method)": [[100, "compliance_checker.ioos.IOOS1_1Check.std_check_in"]], "supported_ds (compliance_checker.ioos.ioos1_1check attribute)": [[100, "compliance_checker.ioos.IOOS1_1Check.supported_ds"]], "high (compliance_checker.ioos.ioos1_2check attribute)": [[101, "compliance_checker.ioos.IOOS1_2Check.HIGH"]], "ioos1_2check (class in compliance_checker.ioos)": [[101, "compliance_checker.ioos.IOOS1_2Check"]], "low (compliance_checker.ioos.ioos1_2check attribute)": [[101, "compliance_checker.ioos.IOOS1_2Check.LOW"]], "medium (compliance_checker.ioos.ioos1_2check attribute)": [[101, "compliance_checker.ioos.IOOS1_2Check.MEDIUM"]], "__init__() (compliance_checker.ioos.ioos1_2check method)": [[101, "compliance_checker.ioos.IOOS1_2Check.__init__"]], "check_accuracy() (compliance_checker.ioos.ioos1_2check method)": [[101, "compliance_checker.ioos.IOOS1_2Check.check_accuracy"]], "check_cf_role_variables() (compliance_checker.ioos.ioos1_2check method)": [[101, "compliance_checker.ioos.IOOS1_2Check.check_cf_role_variables"]], "check_contributor_role_and_vocabulary() (compliance_checker.ioos.ioos1_2check method)": [[101, "compliance_checker.ioos.IOOS1_2Check.check_contributor_role_and_vocabulary"]], "check_creator_and_publisher_type() (compliance_checker.ioos.ioos1_2check method)": [[101, "compliance_checker.ioos.IOOS1_2Check.check_creator_and_publisher_type"]], "check_feature_type() (compliance_checker.ioos.ioos1_2check method)": [[101, "compliance_checker.ioos.IOOS1_2Check.check_feature_type"]], "check_geophysical_vars_have_attrs() (compliance_checker.ioos.ioos1_2check method)": [[101, "compliance_checker.ioos.IOOS1_2Check.check_geophysical_vars_have_attrs"]], "check_gts_ingest_global() (compliance_checker.ioos.ioos1_2check method)": [[101, "compliance_checker.ioos.IOOS1_2Check.check_gts_ingest_global"]], "check_gts_ingest_requirements() (compliance_checker.ioos.ioos1_2check method)": [[101, "compliance_checker.ioos.IOOS1_2Check.check_gts_ingest_requirements"]], "check_high() (compliance_checker.ioos.ioos1_2check method)": [[101, "compliance_checker.ioos.IOOS1_2Check.check_high"]], "check_instrument_make_model_calib_date() (compliance_checker.ioos.ioos1_2check method)": [[101, "compliance_checker.ioos.IOOS1_2Check.check_instrument_make_model_calib_date"]], "check_instrument_variables() (compliance_checker.ioos.ioos1_2check method)": [[101, "compliance_checker.ioos.IOOS1_2Check.check_instrument_variables"]], "check_ioos_ingest() (compliance_checker.ioos.ioos1_2check method)": [[101, "compliance_checker.ioos.IOOS1_2Check.check_ioos_ingest"]], "check_platform_global() (compliance_checker.ioos.ioos1_2check method)": [[101, "compliance_checker.ioos.IOOS1_2Check.check_platform_global"]], "check_platform_vocabulary() (compliance_checker.ioos.ioos1_2check method)": [[101, "compliance_checker.ioos.IOOS1_2Check.check_platform_vocabulary"]], "check_qartod_variables_flags() (compliance_checker.ioos.ioos1_2check method)": [[101, "compliance_checker.ioos.IOOS1_2Check.check_qartod_variables_flags"]], "check_qartod_variables_references() (compliance_checker.ioos.ioos1_2check method)": [[101, "compliance_checker.ioos.IOOS1_2Check.check_qartod_variables_references"]], "check_recommended() (compliance_checker.ioos.ioos1_2check method)": [[101, "compliance_checker.ioos.IOOS1_2Check.check_recommended"]], "check_single_platform() (compliance_checker.ioos.ioos1_2check method)": [[101, "compliance_checker.ioos.IOOS1_2Check.check_single_platform"]], "check_standard_name() (compliance_checker.ioos.ioos1_2check method)": [[101, "compliance_checker.ioos.IOOS1_2Check.check_standard_name"]], "check_station_location_lat() (compliance_checker.ioos.ioos1_2check method)": [[101, "compliance_checker.ioos.IOOS1_2Check.check_station_location_lat"]], "check_station_location_lon() (compliance_checker.ioos.ioos1_2check method)": [[101, "compliance_checker.ioos.IOOS1_2Check.check_station_location_lon"]], "check_time_period() (compliance_checker.ioos.ioos1_2check method)": [[101, "compliance_checker.ioos.IOOS1_2Check.check_time_period"]], "check_units() (compliance_checker.ioos.ioos1_2check method)": [[101, "compliance_checker.ioos.IOOS1_2Check.check_units"]], "check_vertical_coordinates() (compliance_checker.ioos.ioos1_2check method)": [[101, "compliance_checker.ioos.IOOS1_2Check.check_vertical_coordinates"]], "check_wmo_platform_code() (compliance_checker.ioos.ioos1_2check method)": [[101, "compliance_checker.ioos.IOOS1_2Check.check_wmo_platform_code"]], "get_test_ctx() (compliance_checker.ioos.ioos1_2check method)": [[101, "compliance_checker.ioos.IOOS1_2Check.get_test_ctx"]], "register_checker (compliance_checker.ioos.ioos1_2check attribute)": [[101, "compliance_checker.ioos.IOOS1_2Check.register_checker"]], "setup() (compliance_checker.ioos.ioos1_2check method)": [[101, "compliance_checker.ioos.IOOS1_2Check.setup"]], "std_check() (compliance_checker.ioos.ioos1_2check class method)": [[101, "compliance_checker.ioos.IOOS1_2Check.std_check"]], "std_check_in() (compliance_checker.ioos.ioos1_2check class method)": [[101, "compliance_checker.ioos.IOOS1_2Check.std_check_in"]], "supported_ds (compliance_checker.ioos.ioos1_2check attribute)": [[101, "compliance_checker.ioos.IOOS1_2Check.supported_ds"]], "ioos1_2_conventionsvalidator (class in compliance_checker.ioos)": [[102, "compliance_checker.ioos.IOOS1_2_ConventionsValidator"]], "__init__() (compliance_checker.ioos.ioos1_2_conventionsvalidator method)": [[102, "compliance_checker.ioos.IOOS1_2_ConventionsValidator.__init__"]], "validate() (compliance_checker.ioos.ioos1_2_conventionsvalidator method)": [[102, "compliance_checker.ioos.IOOS1_2_ConventionsValidator.validate"]], "validate_type() (compliance_checker.ioos.ioos1_2_conventionsvalidator method)": [[102, "compliance_checker.ioos.IOOS1_2_ConventionsValidator.validate_type"]], "validator_fail_msg (compliance_checker.ioos.ioos1_2_conventionsvalidator attribute)": [[102, "compliance_checker.ioos.IOOS1_2_ConventionsValidator.validator_fail_msg"]], "validator_func() (compliance_checker.ioos.ioos1_2_conventionsvalidator method)": [[102, "compliance_checker.ioos.IOOS1_2_ConventionsValidator.validator_func"]], "validator_regex (compliance_checker.ioos.ioos1_2_conventionsvalidator attribute)": [[102, "compliance_checker.ioos.IOOS1_2_ConventionsValidator.validator_regex"]], "ioos1_2_platformidvalidator (class in compliance_checker.ioos)": [[103, "compliance_checker.ioos.IOOS1_2_PlatformIDValidator"]], "__init__() (compliance_checker.ioos.ioos1_2_platformidvalidator method)": [[103, "compliance_checker.ioos.IOOS1_2_PlatformIDValidator.__init__"]], "validate() (compliance_checker.ioos.ioos1_2_platformidvalidator method)": [[103, "compliance_checker.ioos.IOOS1_2_PlatformIDValidator.validate"]], "validate_type() (compliance_checker.ioos.ioos1_2_platformidvalidator method)": [[103, "compliance_checker.ioos.IOOS1_2_PlatformIDValidator.validate_type"]], "validator_fail_msg (compliance_checker.ioos.ioos1_2_platformidvalidator attribute)": [[103, "compliance_checker.ioos.IOOS1_2_PlatformIDValidator.validator_fail_msg"]], "validator_func() (compliance_checker.ioos.ioos1_2_platformidvalidator method)": [[103, "compliance_checker.ioos.IOOS1_2_PlatformIDValidator.validator_func"]], "validator_regex (compliance_checker.ioos.ioos1_2_platformidvalidator attribute)": [[103, "compliance_checker.ioos.IOOS1_2_PlatformIDValidator.validator_regex"]], "high (compliance_checker.ioos.ioosbasecheck attribute)": [[104, "compliance_checker.ioos.IOOSBaseCheck.HIGH"]], "ioosbasecheck (class in compliance_checker.ioos)": [[104, "compliance_checker.ioos.IOOSBaseCheck"]], "low (compliance_checker.ioos.ioosbasecheck attribute)": [[104, "compliance_checker.ioos.IOOSBaseCheck.LOW"]], "medium (compliance_checker.ioos.ioosbasecheck attribute)": [[104, "compliance_checker.ioos.IOOSBaseCheck.MEDIUM"]], "__init__() (compliance_checker.ioos.ioosbasecheck method)": [[104, "compliance_checker.ioos.IOOSBaseCheck.__init__"]], "get_test_ctx() (compliance_checker.ioos.ioosbasecheck method)": [[104, "compliance_checker.ioos.IOOSBaseCheck.get_test_ctx"]], "setup() (compliance_checker.ioos.ioosbasecheck method)": [[104, "compliance_checker.ioos.IOOSBaseCheck.setup"]], "supported_ds (compliance_checker.ioos.ioosbasecheck attribute)": [[104, "compliance_checker.ioos.IOOSBaseCheck.supported_ds"]], "high (compliance_checker.ioos.ioosbasesoscheck attribute)": [[105, "compliance_checker.ioos.IOOSBaseSOSCheck.HIGH"]], "ioosbasesoscheck (class in compliance_checker.ioos)": [[105, "compliance_checker.ioos.IOOSBaseSOSCheck"]], "low (compliance_checker.ioos.ioosbasesoscheck attribute)": [[105, "compliance_checker.ioos.IOOSBaseSOSCheck.LOW"]], "medium (compliance_checker.ioos.ioosbasesoscheck attribute)": [[105, "compliance_checker.ioos.IOOSBaseSOSCheck.MEDIUM"]], "__init__() (compliance_checker.ioos.ioosbasesoscheck method)": [[105, "compliance_checker.ioos.IOOSBaseSOSCheck.__init__"]], "get_test_ctx() (compliance_checker.ioos.ioosbasesoscheck method)": [[105, "compliance_checker.ioos.IOOSBaseSOSCheck.get_test_ctx"]], "register_checker (compliance_checker.ioos.ioosbasesoscheck attribute)": [[105, "compliance_checker.ioos.IOOSBaseSOSCheck.register_checker"]], "setup() (compliance_checker.ioos.ioosbasesoscheck method)": [[105, "compliance_checker.ioos.IOOSBaseSOSCheck.setup"]], "supported_ds (compliance_checker.ioos.ioosbasesoscheck attribute)": [[105, "compliance_checker.ioos.IOOSBaseSOSCheck.supported_ds"]], "high (compliance_checker.ioos.ioosnccheck attribute)": [[106, "compliance_checker.ioos.IOOSNCCheck.HIGH"]], "ioosnccheck (class in compliance_checker.ioos)": [[106, "compliance_checker.ioos.IOOSNCCheck"]], "low (compliance_checker.ioos.ioosnccheck attribute)": [[106, "compliance_checker.ioos.IOOSNCCheck.LOW"]], "medium (compliance_checker.ioos.ioosnccheck attribute)": [[106, "compliance_checker.ioos.IOOSNCCheck.MEDIUM"]], "__init__() (compliance_checker.ioos.ioosnccheck method)": [[106, "compliance_checker.ioos.IOOSNCCheck.__init__"]], "check_station_location_lat() (compliance_checker.ioos.ioosnccheck method)": [[106, "compliance_checker.ioos.IOOSNCCheck.check_station_location_lat"]], "check_station_location_lon() (compliance_checker.ioos.ioosnccheck method)": [[106, "compliance_checker.ioos.IOOSNCCheck.check_station_location_lon"]], "check_time_period() (compliance_checker.ioos.ioosnccheck method)": [[106, "compliance_checker.ioos.IOOSNCCheck.check_time_period"]], "get_test_ctx() (compliance_checker.ioos.ioosnccheck method)": [[106, "compliance_checker.ioos.IOOSNCCheck.get_test_ctx"]], "setup() (compliance_checker.ioos.ioosnccheck method)": [[106, "compliance_checker.ioos.IOOSNCCheck.setup"]], "std_check() (compliance_checker.ioos.ioosnccheck class method)": [[106, "compliance_checker.ioos.IOOSNCCheck.std_check"]], "std_check_in() (compliance_checker.ioos.ioosnccheck class method)": [[106, "compliance_checker.ioos.IOOSNCCheck.std_check_in"]], "supported_ds (compliance_checker.ioos.ioosnccheck attribute)": [[106, "compliance_checker.ioos.IOOSNCCheck.supported_ds"]], "high (compliance_checker.ioos.ioossosdscheck attribute)": [[107, "compliance_checker.ioos.IOOSSOSDSCheck.HIGH"]], "ioossosdscheck (class in compliance_checker.ioos)": [[107, "compliance_checker.ioos.IOOSSOSDSCheck"]], "low (compliance_checker.ioos.ioossosdscheck attribute)": [[107, "compliance_checker.ioos.IOOSSOSDSCheck.LOW"]], "medium (compliance_checker.ioos.ioossosdscheck attribute)": [[107, "compliance_checker.ioos.IOOSSOSDSCheck.MEDIUM"]], "__init__() (compliance_checker.ioos.ioossosdscheck method)": [[107, "compliance_checker.ioos.IOOSSOSDSCheck.__init__"]], "check_high() (compliance_checker.ioos.ioossosdscheck method)": [[107, "compliance_checker.ioos.IOOSSOSDSCheck.check_high"]], "check_recommended() (compliance_checker.ioos.ioossosdscheck method)": [[107, "compliance_checker.ioos.IOOSSOSDSCheck.check_recommended"]], "check_suggested() (compliance_checker.ioos.ioossosdscheck method)": [[107, "compliance_checker.ioos.IOOSSOSDSCheck.check_suggested"]], "get_test_ctx() (compliance_checker.ioos.ioossosdscheck method)": [[107, "compliance_checker.ioos.IOOSSOSDSCheck.get_test_ctx"]], "ns (compliance_checker.ioos.ioossosdscheck attribute)": [[107, "compliance_checker.ioos.IOOSSOSDSCheck.ns"]], "register_checker (compliance_checker.ioos.ioossosdscheck attribute)": [[107, "compliance_checker.ioos.IOOSSOSDSCheck.register_checker"]], "setup() (compliance_checker.ioos.ioossosdscheck method)": [[107, "compliance_checker.ioos.IOOSSOSDSCheck.setup"]], "supported_ds (compliance_checker.ioos.ioossosdscheck attribute)": [[107, "compliance_checker.ioos.IOOSSOSDSCheck.supported_ds"]], "high (compliance_checker.ioos.ioossosgccheck attribute)": [[108, "compliance_checker.ioos.IOOSSOSGCCheck.HIGH"]], "ioossosgccheck (class in compliance_checker.ioos)": [[108, "compliance_checker.ioos.IOOSSOSGCCheck"]], "low (compliance_checker.ioos.ioossosgccheck attribute)": [[108, "compliance_checker.ioos.IOOSSOSGCCheck.LOW"]], "medium (compliance_checker.ioos.ioossosgccheck attribute)": [[108, "compliance_checker.ioos.IOOSSOSGCCheck.MEDIUM"]], "__init__() (compliance_checker.ioos.ioossosgccheck method)": [[108, "compliance_checker.ioos.IOOSSOSGCCheck.__init__"]], "check_high() (compliance_checker.ioos.ioossosgccheck method)": [[108, "compliance_checker.ioos.IOOSSOSGCCheck.check_high"]], "check_recommended() (compliance_checker.ioos.ioossosgccheck method)": [[108, "compliance_checker.ioos.IOOSSOSGCCheck.check_recommended"]], "check_suggested() (compliance_checker.ioos.ioossosgccheck method)": [[108, "compliance_checker.ioos.IOOSSOSGCCheck.check_suggested"]], "get_test_ctx() (compliance_checker.ioos.ioossosgccheck method)": [[108, "compliance_checker.ioos.IOOSSOSGCCheck.get_test_ctx"]], "ns (compliance_checker.ioos.ioossosgccheck attribute)": [[108, "compliance_checker.ioos.IOOSSOSGCCheck.ns"]], "register_checker (compliance_checker.ioos.ioossosgccheck attribute)": [[108, "compliance_checker.ioos.IOOSSOSGCCheck.register_checker"]], "setup() (compliance_checker.ioos.ioossosgccheck method)": [[108, "compliance_checker.ioos.IOOSSOSGCCheck.setup"]], "supported_ds (compliance_checker.ioos.ioossosgccheck attribute)": [[108, "compliance_checker.ioos.IOOSSOSGCCheck.supported_ds"]], "namingauthorityvalidator (class in compliance_checker.ioos)": [[109, "compliance_checker.ioos.NamingAuthorityValidator"]], "__init__() (compliance_checker.ioos.namingauthorityvalidator method)": [[109, "compliance_checker.ioos.NamingAuthorityValidator.__init__"]], "validate() (compliance_checker.ioos.namingauthorityvalidator method)": [[109, "compliance_checker.ioos.NamingAuthorityValidator.validate"]], "validate_type() (compliance_checker.ioos.namingauthorityvalidator method)": [[109, "compliance_checker.ioos.NamingAuthorityValidator.validate_type"]], "validator_fail_msg (compliance_checker.ioos.namingauthorityvalidator attribute)": [[109, "compliance_checker.ioos.NamingAuthorityValidator.validator_fail_msg"]], "validator_func() (compliance_checker.ioos.namingauthorityvalidator method)": [[109, "compliance_checker.ioos.NamingAuthorityValidator.validator_func"]], "compliance_checker.protocols": [[110, "module-compliance_checker.protocols"]], "compliance_checker.runner": [[111, "module-compliance_checker.runner"]], "compliancechecker (class in compliance_checker.runner)": [[112, "compliance_checker.runner.ComplianceChecker"]], "__init__() (compliance_checker.runner.compliancechecker method)": [[112, "compliance_checker.runner.ComplianceChecker.__init__"]], "check_errors() (compliance_checker.runner.compliancechecker class method)": [[112, "compliance_checker.runner.ComplianceChecker.check_errors"]], "html_output() (compliance_checker.runner.compliancechecker class method)": [[112, "compliance_checker.runner.ComplianceChecker.html_output"]], "json_output() (compliance_checker.runner.compliancechecker class method)": [[112, "compliance_checker.runner.ComplianceChecker.json_output"]], "run_checker() (compliance_checker.runner.compliancechecker class method)": [[112, "compliance_checker.runner.ComplianceChecker.run_checker"]], "stdout_output() (compliance_checker.runner.compliancechecker class method)": [[112, "compliance_checker.runner.ComplianceChecker.stdout_output"]], "stdout_redirector() (in module compliance_checker.runner)": [[113, "compliance_checker.runner.stdout_redirector"]], "compliance_checker.suite": [[114, "module-compliance_checker.suite"]], "checksuite (class in compliance_checker.suite)": [[115, "compliance_checker.suite.CheckSuite"]], "__init__() (compliance_checker.suite.checksuite method)": [[115, "compliance_checker.suite.CheckSuite.__init__"]], "add_plugin_args() (compliance_checker.suite.checksuite class method)": [[115, "compliance_checker.suite.CheckSuite.add_plugin_args"]], "build_structure() (compliance_checker.suite.checksuite method)": [[115, "compliance_checker.suite.CheckSuite.build_structure"]], "check_remote_netcdf() (compliance_checker.suite.checksuite method)": [[115, "compliance_checker.suite.CheckSuite.check_remote_netcdf"]], "checker_html_output() (compliance_checker.suite.checksuite method)": [[115, "compliance_checker.suite.CheckSuite.checker_html_output"]], "checkers (compliance_checker.suite.checksuite attribute)": [[115, "compliance_checker.suite.CheckSuite.checkers"]], "dict_output() (compliance_checker.suite.checksuite method)": [[115, "compliance_checker.suite.CheckSuite.dict_output"]], "generate_dataset() (compliance_checker.suite.checksuite method)": [[115, "compliance_checker.suite.CheckSuite.generate_dataset"]], "get_points() (compliance_checker.suite.checksuite method)": [[115, "compliance_checker.suite.CheckSuite.get_points"]], "html_output() (compliance_checker.suite.checksuite method)": [[115, "compliance_checker.suite.CheckSuite.html_output"]], "load_all_available_checkers() (compliance_checker.suite.checksuite class method)": [[115, "compliance_checker.suite.CheckSuite.load_all_available_checkers"]], "load_dataset() (compliance_checker.suite.checksuite method)": [[115, "compliance_checker.suite.CheckSuite.load_dataset"]], "load_generated_checkers() (compliance_checker.suite.checksuite class method)": [[115, "compliance_checker.suite.CheckSuite.load_generated_checkers"]], "load_local_dataset() (compliance_checker.suite.checksuite method)": [[115, "compliance_checker.suite.CheckSuite.load_local_dataset"]], "load_remote_dataset() (compliance_checker.suite.checksuite method)": [[115, "compliance_checker.suite.CheckSuite.load_remote_dataset"]], "passtree() (compliance_checker.suite.checksuite class method)": [[115, "compliance_checker.suite.CheckSuite.passtree"]], "process_doc() (compliance_checker.suite.checksuite method)": [[115, "compliance_checker.suite.CheckSuite.process_doc"]], "reasoning_routine() (compliance_checker.suite.checksuite method)": [[115, "compliance_checker.suite.CheckSuite.reasoning_routine"]], "run() (compliance_checker.suite.checksuite method)": [[115, "compliance_checker.suite.CheckSuite.run"]], "run_all() (compliance_checker.suite.checksuite method)": [[115, "compliance_checker.suite.CheckSuite.run_all"]], "scores() (compliance_checker.suite.checksuite method)": [[115, "compliance_checker.suite.CheckSuite.scores"]], "serialize() (compliance_checker.suite.checksuite method)": [[115, "compliance_checker.suite.CheckSuite.serialize"]], "standard_output() (compliance_checker.suite.checksuite method)": [[115, "compliance_checker.suite.CheckSuite.standard_output"]], "standard_output_generation() (compliance_checker.suite.checksuite method)": [[115, "compliance_checker.suite.CheckSuite.standard_output_generation"]], "templates_root (compliance_checker.suite.checksuite attribute)": [[115, "compliance_checker.suite.CheckSuite.templates_root"]], "extract_docstring_summary() (in module compliance_checker.suite)": [[116, "compliance_checker.suite.extract_docstring_summary"]], "compliance_checker.util": [[117, "module-compliance_checker.util"]], "dateparse() (in module compliance_checker.util)": [[118, "compliance_checker.util.dateparse"]], "datetime_is_iso() (in module compliance_checker.util)": [[119, "compliance_checker.util.datetime_is_iso"]], "kvp_convert() (in module compliance_checker.util)": [[120, "compliance_checker.util.kvp_convert"]]}})